Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Unused terminals:

    WHILE
    PRINT
    ELSE
    IF

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statement
Rule 2     statements -> statement statements
Rule 3     statement -> VARNAME EQUALS expression SEMI
Rule 4     statement -> expression
Rule 5     statement -> LCURL statements RCURL
Rule 6     expression -> string_expression
Rule 7     expression -> list
Rule 8     expression -> expression PLUS expression
Rule 9     expression -> expression MINUS expression
Rule 10    expression -> expression MULT expression
Rule 11    expression -> expression DIVIDE expression
Rule 12    expression -> expression MODULO expression
Rule 13    expression -> expression EXP expression
Rule 14    expression -> expression FLDIV expression
Rule 15    expression -> expression AND expression
Rule 16    expression -> expression OR expression
Rule 17    expression -> NOT expression
Rule 18    expression -> expression LESST expression
Rule 19    expression -> expression GREATERT expression
Rule 20    expression -> expression LESSEQ expression
Rule 21    expression -> expression GREATEREQ expression
Rule 22    expression -> expression EQUALTO expression
Rule 23    expression -> expression NOTEQ expression
Rule 24    expression -> LPAREN expression RPAREN
Rule 25    expression -> NUMBER
Rule 26    expression -> VARNAME
Rule 27    expression -> list LBRACK expression RBRACK
Rule 28    expression -> string_expression LBRACK expression RBRACK
Rule 29    list -> LBRACK list_item RBRACK
Rule 30    list -> LBRACK RBRACK
Rule 31    list_item -> list_item COMMA list_item
Rule 32    list_item -> expression
Rule 33    string_expression -> string_expression PLUS string_expression
Rule 34    string_expression -> STRING
Rule 35    expression -> expression IN list
Rule 36    expression -> string_expression IN string_expression

Terminals, with rules where they appear

AND                  : 15
COMMA                : 31
DIVIDE               : 11
ELSE                 : 
EQUALS               : 3
EQUALTO              : 22
EXP                  : 13
FLDIV                : 14
GREATEREQ            : 21
GREATERT             : 19
IF                   : 
IN                   : 35 36
LBRACK               : 27 28 29 30
LCURL                : 5
LESSEQ               : 20
LESST                : 18
LPAREN               : 24
MINUS                : 9
MODULO               : 12
MULT                 : 10
NOT                  : 17
NOTEQ                : 23
NUMBER               : 25
OR                   : 16
PLUS                 : 8 33
PRINT                : 
RBRACK               : 27 28 29 30
RCURL                : 5
RPAREN               : 24
SEMI                 : 3
STRING               : 34
VARNAME              : 3 26
WHILE                : 
error                : 

Nonterminals, with rules where they appear

expression           : 3 4 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 18 18 19 19 20 20 21 21 22 22 23 23 24 27 28 32 35
list                 : 7 27 35
list_item            : 29 31 31
statement            : 1 2
statements           : 2 5 0
string_expression    : 6 28 33 33 36 36

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statement -> . VARNAME EQUALS expression SEMI
    (4) statement -> . expression
    (5) statement -> . LCURL statements RCURL
    (6) expression -> . string_expression
    (7) expression -> . list
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULT expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULO expression
    (13) expression -> . expression EXP expression
    (14) expression -> . expression FLDIV expression
    (15) expression -> . expression AND expression
    (16) expression -> . expression OR expression
    (17) expression -> . NOT expression
    (18) expression -> . expression LESST expression
    (19) expression -> . expression GREATERT expression
    (20) expression -> . expression LESSEQ expression
    (21) expression -> . expression GREATEREQ expression
    (22) expression -> . expression EQUALTO expression
    (23) expression -> . expression NOTEQ expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . VARNAME
    (27) expression -> . list LBRACK expression RBRACK
    (28) expression -> . string_expression LBRACK expression RBRACK
    (35) expression -> . expression IN list
    (36) expression -> . string_expression IN string_expression
    (33) string_expression -> . string_expression PLUS string_expression
    (34) string_expression -> . STRING
    (29) list -> . LBRACK list_item RBRACK
    (30) list -> . LBRACK RBRACK

    VARNAME         shift and go to state 3
    LCURL           shift and go to state 11
    NOT             shift and go to state 8
    LPAREN          shift and go to state 2
    NUMBER          shift and go to state 10
    STRING          shift and go to state 9
    LBRACK          shift and go to state 7

    list                           shift and go to state 1
    expression                     shift and go to state 5
    string_expression              shift and go to state 6
    statement                      shift and go to state 4
    statements                     shift and go to state 12

state 1

    (7) expression -> list .
    (27) expression -> list . LBRACK expression RBRACK

  ! shift/reduce conflict for LBRACK resolved as shift
    PLUS            reduce using rule 7 (expression -> list .)
    MINUS           reduce using rule 7 (expression -> list .)
    MULT            reduce using rule 7 (expression -> list .)
    DIVIDE          reduce using rule 7 (expression -> list .)
    MODULO          reduce using rule 7 (expression -> list .)
    EXP             reduce using rule 7 (expression -> list .)
    FLDIV           reduce using rule 7 (expression -> list .)
    AND             reduce using rule 7 (expression -> list .)
    OR              reduce using rule 7 (expression -> list .)
    LESST           reduce using rule 7 (expression -> list .)
    GREATERT        reduce using rule 7 (expression -> list .)
    LESSEQ          reduce using rule 7 (expression -> list .)
    GREATEREQ       reduce using rule 7 (expression -> list .)
    EQUALTO         reduce using rule 7 (expression -> list .)
    NOTEQ           reduce using rule 7 (expression -> list .)
    IN              reduce using rule 7 (expression -> list .)
    RBRACK          reduce using rule 7 (expression -> list .)
    COMMA           reduce using rule 7 (expression -> list .)
    VARNAME         reduce using rule 7 (expression -> list .)
    LCURL           reduce using rule 7 (expression -> list .)
    NOT             reduce using rule 7 (expression -> list .)
    LPAREN          reduce using rule 7 (expression -> list .)
    NUMBER          reduce using rule 7 (expression -> list .)
    STRING          reduce using rule 7 (expression -> list .)
    $end            reduce using rule 7 (expression -> list .)
    RPAREN          reduce using rule 7 (expression -> list .)
    RCURL           reduce using rule 7 (expression -> list .)
    SEMI            reduce using rule 7 (expression -> list .)
    LBRACK          shift and go to state 13

  ! LBRACK          [ reduce using rule 7 (expression -> list .) ]


state 2

    (24) expression -> LPAREN . expression RPAREN
    (6) expression -> . string_expression
    (7) expression -> . list
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULT expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULO expression
    (13) expression -> . expression EXP expression
    (14) expression -> . expression FLDIV expression
    (15) expression -> . expression AND expression
    (16) expression -> . expression OR expression
    (17) expression -> . NOT expression
    (18) expression -> . expression LESST expression
    (19) expression -> . expression GREATERT expression
    (20) expression -> . expression LESSEQ expression
    (21) expression -> . expression GREATEREQ expression
    (22) expression -> . expression EQUALTO expression
    (23) expression -> . expression NOTEQ expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . VARNAME
    (27) expression -> . list LBRACK expression RBRACK
    (28) expression -> . string_expression LBRACK expression RBRACK
    (35) expression -> . expression IN list
    (36) expression -> . string_expression IN string_expression
    (33) string_expression -> . string_expression PLUS string_expression
    (34) string_expression -> . STRING
    (29) list -> . LBRACK list_item RBRACK
    (30) list -> . LBRACK RBRACK

    NOT             shift and go to state 8
    LPAREN          shift and go to state 2
    NUMBER          shift and go to state 10
    VARNAME         shift and go to state 14
    STRING          shift and go to state 9
    LBRACK          shift and go to state 7

    list                           shift and go to state 1
    expression                     shift and go to state 15
    string_expression              shift and go to state 6

state 3

    (3) statement -> VARNAME . EQUALS expression SEMI
    (26) expression -> VARNAME .

    EQUALS          shift and go to state 16
    PLUS            reduce using rule 26 (expression -> VARNAME .)
    MINUS           reduce using rule 26 (expression -> VARNAME .)
    MULT            reduce using rule 26 (expression -> VARNAME .)
    DIVIDE          reduce using rule 26 (expression -> VARNAME .)
    MODULO          reduce using rule 26 (expression -> VARNAME .)
    EXP             reduce using rule 26 (expression -> VARNAME .)
    FLDIV           reduce using rule 26 (expression -> VARNAME .)
    AND             reduce using rule 26 (expression -> VARNAME .)
    OR              reduce using rule 26 (expression -> VARNAME .)
    LESST           reduce using rule 26 (expression -> VARNAME .)
    GREATERT        reduce using rule 26 (expression -> VARNAME .)
    LESSEQ          reduce using rule 26 (expression -> VARNAME .)
    GREATEREQ       reduce using rule 26 (expression -> VARNAME .)
    EQUALTO         reduce using rule 26 (expression -> VARNAME .)
    NOTEQ           reduce using rule 26 (expression -> VARNAME .)
    IN              reduce using rule 26 (expression -> VARNAME .)
    VARNAME         reduce using rule 26 (expression -> VARNAME .)
    LCURL           reduce using rule 26 (expression -> VARNAME .)
    NOT             reduce using rule 26 (expression -> VARNAME .)
    LPAREN          reduce using rule 26 (expression -> VARNAME .)
    NUMBER          reduce using rule 26 (expression -> VARNAME .)
    STRING          reduce using rule 26 (expression -> VARNAME .)
    LBRACK          reduce using rule 26 (expression -> VARNAME .)
    RCURL           reduce using rule 26 (expression -> VARNAME .)
    $end            reduce using rule 26 (expression -> VARNAME .)


state 4

    (1) statements -> statement .
    (2) statements -> statement . statements
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statement -> . VARNAME EQUALS expression SEMI
    (4) statement -> . expression
    (5) statement -> . LCURL statements RCURL
    (6) expression -> . string_expression
    (7) expression -> . list
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULT expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULO expression
    (13) expression -> . expression EXP expression
    (14) expression -> . expression FLDIV expression
    (15) expression -> . expression AND expression
    (16) expression -> . expression OR expression
    (17) expression -> . NOT expression
    (18) expression -> . expression LESST expression
    (19) expression -> . expression GREATERT expression
    (20) expression -> . expression LESSEQ expression
    (21) expression -> . expression GREATEREQ expression
    (22) expression -> . expression EQUALTO expression
    (23) expression -> . expression NOTEQ expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . VARNAME
    (27) expression -> . list LBRACK expression RBRACK
    (28) expression -> . string_expression LBRACK expression RBRACK
    (35) expression -> . expression IN list
    (36) expression -> . string_expression IN string_expression
    (33) string_expression -> . string_expression PLUS string_expression
    (34) string_expression -> . STRING
    (29) list -> . LBRACK list_item RBRACK
    (30) list -> . LBRACK RBRACK

    $end            reduce using rule 1 (statements -> statement .)
    RCURL           reduce using rule 1 (statements -> statement .)
    VARNAME         shift and go to state 3
    LCURL           shift and go to state 11
    NOT             shift and go to state 8
    LPAREN          shift and go to state 2
    NUMBER          shift and go to state 10
    STRING          shift and go to state 9
    LBRACK          shift and go to state 7

    list                           shift and go to state 1
    expression                     shift and go to state 5
    string_expression              shift and go to state 6
    statement                      shift and go to state 4
    statements                     shift and go to state 17

state 5

    (4) statement -> expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULT expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULO expression
    (13) expression -> expression . EXP expression
    (14) expression -> expression . FLDIV expression
    (15) expression -> expression . AND expression
    (16) expression -> expression . OR expression
    (18) expression -> expression . LESST expression
    (19) expression -> expression . GREATERT expression
    (20) expression -> expression . LESSEQ expression
    (21) expression -> expression . GREATEREQ expression
    (22) expression -> expression . EQUALTO expression
    (23) expression -> expression . NOTEQ expression
    (35) expression -> expression . IN list

    VARNAME         reduce using rule 4 (statement -> expression .)
    LCURL           reduce using rule 4 (statement -> expression .)
    NOT             reduce using rule 4 (statement -> expression .)
    LPAREN          reduce using rule 4 (statement -> expression .)
    NUMBER          reduce using rule 4 (statement -> expression .)
    STRING          reduce using rule 4 (statement -> expression .)
    LBRACK          reduce using rule 4 (statement -> expression .)
    $end            reduce using rule 4 (statement -> expression .)
    RCURL           reduce using rule 4 (statement -> expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 22
    MULT            shift and go to state 32
    DIVIDE          shift and go to state 29
    MODULO          shift and go to state 27
    EXP             shift and go to state 33
    FLDIV           shift and go to state 24
    AND             shift and go to state 30
    OR              shift and go to state 25
    LESST           shift and go to state 19
    GREATERT        shift and go to state 21
    LESSEQ          shift and go to state 26
    GREATEREQ       shift and go to state 23
    EQUALTO         shift and go to state 20
    NOTEQ           shift and go to state 18
    IN              shift and go to state 28


state 6

    (6) expression -> string_expression .
    (28) expression -> string_expression . LBRACK expression RBRACK
    (36) expression -> string_expression . IN string_expression
    (33) string_expression -> string_expression . PLUS string_expression

  ! shift/reduce conflict for LBRACK resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    MINUS           reduce using rule 6 (expression -> string_expression .)
    MULT            reduce using rule 6 (expression -> string_expression .)
    DIVIDE          reduce using rule 6 (expression -> string_expression .)
    MODULO          reduce using rule 6 (expression -> string_expression .)
    EXP             reduce using rule 6 (expression -> string_expression .)
    FLDIV           reduce using rule 6 (expression -> string_expression .)
    AND             reduce using rule 6 (expression -> string_expression .)
    OR              reduce using rule 6 (expression -> string_expression .)
    LESST           reduce using rule 6 (expression -> string_expression .)
    GREATERT        reduce using rule 6 (expression -> string_expression .)
    LESSEQ          reduce using rule 6 (expression -> string_expression .)
    GREATEREQ       reduce using rule 6 (expression -> string_expression .)
    EQUALTO         reduce using rule 6 (expression -> string_expression .)
    NOTEQ           reduce using rule 6 (expression -> string_expression .)
    RBRACK          reduce using rule 6 (expression -> string_expression .)
    COMMA           reduce using rule 6 (expression -> string_expression .)
    VARNAME         reduce using rule 6 (expression -> string_expression .)
    LCURL           reduce using rule 6 (expression -> string_expression .)
    NOT             reduce using rule 6 (expression -> string_expression .)
    LPAREN          reduce using rule 6 (expression -> string_expression .)
    NUMBER          reduce using rule 6 (expression -> string_expression .)
    STRING          reduce using rule 6 (expression -> string_expression .)
    $end            reduce using rule 6 (expression -> string_expression .)
    RPAREN          reduce using rule 6 (expression -> string_expression .)
    RCURL           reduce using rule 6 (expression -> string_expression .)
    SEMI            reduce using rule 6 (expression -> string_expression .)
    LBRACK          shift and go to state 34
    IN              shift and go to state 35
    PLUS            shift and go to state 36

  ! PLUS            [ reduce using rule 6 (expression -> string_expression .) ]
  ! IN              [ reduce using rule 6 (expression -> string_expression .) ]
  ! LBRACK          [ reduce using rule 6 (expression -> string_expression .) ]


state 7

    (29) list -> LBRACK . list_item RBRACK
    (30) list -> LBRACK . RBRACK
    (31) list_item -> . list_item COMMA list_item
    (32) list_item -> . expression
    (6) expression -> . string_expression
    (7) expression -> . list
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULT expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULO expression
    (13) expression -> . expression EXP expression
    (14) expression -> . expression FLDIV expression
    (15) expression -> . expression AND expression
    (16) expression -> . expression OR expression
    (17) expression -> . NOT expression
    (18) expression -> . expression LESST expression
    (19) expression -> . expression GREATERT expression
    (20) expression -> . expression LESSEQ expression
    (21) expression -> . expression GREATEREQ expression
    (22) expression -> . expression EQUALTO expression
    (23) expression -> . expression NOTEQ expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . VARNAME
    (27) expression -> . list LBRACK expression RBRACK
    (28) expression -> . string_expression LBRACK expression RBRACK
    (35) expression -> . expression IN list
    (36) expression -> . string_expression IN string_expression
    (33) string_expression -> . string_expression PLUS string_expression
    (34) string_expression -> . STRING
    (29) list -> . LBRACK list_item RBRACK
    (30) list -> . LBRACK RBRACK

    RBRACK          shift and go to state 38
    NOT             shift and go to state 8
    LPAREN          shift and go to state 2
    NUMBER          shift and go to state 10
    VARNAME         shift and go to state 14
    STRING          shift and go to state 9
    LBRACK          shift and go to state 7

    list                           shift and go to state 1
    expression                     shift and go to state 39
    string_expression              shift and go to state 6
    list_item                      shift and go to state 37

state 8

    (17) expression -> NOT . expression
    (6) expression -> . string_expression
    (7) expression -> . list
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULT expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULO expression
    (13) expression -> . expression EXP expression
    (14) expression -> . expression FLDIV expression
    (15) expression -> . expression AND expression
    (16) expression -> . expression OR expression
    (17) expression -> . NOT expression
    (18) expression -> . expression LESST expression
    (19) expression -> . expression GREATERT expression
    (20) expression -> . expression LESSEQ expression
    (21) expression -> . expression GREATEREQ expression
    (22) expression -> . expression EQUALTO expression
    (23) expression -> . expression NOTEQ expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . VARNAME
    (27) expression -> . list LBRACK expression RBRACK
    (28) expression -> . string_expression LBRACK expression RBRACK
    (35) expression -> . expression IN list
    (36) expression -> . string_expression IN string_expression
    (33) string_expression -> . string_expression PLUS string_expression
    (34) string_expression -> . STRING
    (29) list -> . LBRACK list_item RBRACK
    (30) list -> . LBRACK RBRACK

    NOT             shift and go to state 8
    LPAREN          shift and go to state 2
    NUMBER          shift and go to state 10
    VARNAME         shift and go to state 14
    STRING          shift and go to state 9
    LBRACK          shift and go to state 7

    list                           shift and go to state 1
    expression                     shift and go to state 40
    string_expression              shift and go to state 6

state 9

    (34) string_expression -> STRING .

    LBRACK          reduce using rule 34 (string_expression -> STRING .)
    IN              reduce using rule 34 (string_expression -> STRING .)
    PLUS            reduce using rule 34 (string_expression -> STRING .)
    MINUS           reduce using rule 34 (string_expression -> STRING .)
    MULT            reduce using rule 34 (string_expression -> STRING .)
    DIVIDE          reduce using rule 34 (string_expression -> STRING .)
    MODULO          reduce using rule 34 (string_expression -> STRING .)
    EXP             reduce using rule 34 (string_expression -> STRING .)
    FLDIV           reduce using rule 34 (string_expression -> STRING .)
    AND             reduce using rule 34 (string_expression -> STRING .)
    OR              reduce using rule 34 (string_expression -> STRING .)
    LESST           reduce using rule 34 (string_expression -> STRING .)
    GREATERT        reduce using rule 34 (string_expression -> STRING .)
    LESSEQ          reduce using rule 34 (string_expression -> STRING .)
    GREATEREQ       reduce using rule 34 (string_expression -> STRING .)
    EQUALTO         reduce using rule 34 (string_expression -> STRING .)
    NOTEQ           reduce using rule 34 (string_expression -> STRING .)
    RBRACK          reduce using rule 34 (string_expression -> STRING .)
    COMMA           reduce using rule 34 (string_expression -> STRING .)
    VARNAME         reduce using rule 34 (string_expression -> STRING .)
    LCURL           reduce using rule 34 (string_expression -> STRING .)
    NOT             reduce using rule 34 (string_expression -> STRING .)
    LPAREN          reduce using rule 34 (string_expression -> STRING .)
    NUMBER          reduce using rule 34 (string_expression -> STRING .)
    STRING          reduce using rule 34 (string_expression -> STRING .)
    RCURL           reduce using rule 34 (string_expression -> STRING .)
    RPAREN          reduce using rule 34 (string_expression -> STRING .)
    $end            reduce using rule 34 (string_expression -> STRING .)
    SEMI            reduce using rule 34 (string_expression -> STRING .)


state 10

    (25) expression -> NUMBER .

    PLUS            reduce using rule 25 (expression -> NUMBER .)
    MINUS           reduce using rule 25 (expression -> NUMBER .)
    MULT            reduce using rule 25 (expression -> NUMBER .)
    DIVIDE          reduce using rule 25 (expression -> NUMBER .)
    MODULO          reduce using rule 25 (expression -> NUMBER .)
    EXP             reduce using rule 25 (expression -> NUMBER .)
    FLDIV           reduce using rule 25 (expression -> NUMBER .)
    AND             reduce using rule 25 (expression -> NUMBER .)
    OR              reduce using rule 25 (expression -> NUMBER .)
    LESST           reduce using rule 25 (expression -> NUMBER .)
    GREATERT        reduce using rule 25 (expression -> NUMBER .)
    LESSEQ          reduce using rule 25 (expression -> NUMBER .)
    GREATEREQ       reduce using rule 25 (expression -> NUMBER .)
    EQUALTO         reduce using rule 25 (expression -> NUMBER .)
    NOTEQ           reduce using rule 25 (expression -> NUMBER .)
    IN              reduce using rule 25 (expression -> NUMBER .)
    RBRACK          reduce using rule 25 (expression -> NUMBER .)
    COMMA           reduce using rule 25 (expression -> NUMBER .)
    VARNAME         reduce using rule 25 (expression -> NUMBER .)
    LCURL           reduce using rule 25 (expression -> NUMBER .)
    NOT             reduce using rule 25 (expression -> NUMBER .)
    LPAREN          reduce using rule 25 (expression -> NUMBER .)
    NUMBER          reduce using rule 25 (expression -> NUMBER .)
    STRING          reduce using rule 25 (expression -> NUMBER .)
    LBRACK          reduce using rule 25 (expression -> NUMBER .)
    $end            reduce using rule 25 (expression -> NUMBER .)
    RPAREN          reduce using rule 25 (expression -> NUMBER .)
    RCURL           reduce using rule 25 (expression -> NUMBER .)
    SEMI            reduce using rule 25 (expression -> NUMBER .)


state 11

    (5) statement -> LCURL . statements RCURL
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statement -> . VARNAME EQUALS expression SEMI
    (4) statement -> . expression
    (5) statement -> . LCURL statements RCURL
    (6) expression -> . string_expression
    (7) expression -> . list
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULT expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULO expression
    (13) expression -> . expression EXP expression
    (14) expression -> . expression FLDIV expression
    (15) expression -> . expression AND expression
    (16) expression -> . expression OR expression
    (17) expression -> . NOT expression
    (18) expression -> . expression LESST expression
    (19) expression -> . expression GREATERT expression
    (20) expression -> . expression LESSEQ expression
    (21) expression -> . expression GREATEREQ expression
    (22) expression -> . expression EQUALTO expression
    (23) expression -> . expression NOTEQ expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . VARNAME
    (27) expression -> . list LBRACK expression RBRACK
    (28) expression -> . string_expression LBRACK expression RBRACK
    (35) expression -> . expression IN list
    (36) expression -> . string_expression IN string_expression
    (33) string_expression -> . string_expression PLUS string_expression
    (34) string_expression -> . STRING
    (29) list -> . LBRACK list_item RBRACK
    (30) list -> . LBRACK RBRACK

    VARNAME         shift and go to state 3
    LCURL           shift and go to state 11
    NOT             shift and go to state 8
    LPAREN          shift and go to state 2
    NUMBER          shift and go to state 10
    STRING          shift and go to state 9
    LBRACK          shift and go to state 7

    list                           shift and go to state 1
    expression                     shift and go to state 5
    string_expression              shift and go to state 6
    statement                      shift and go to state 4
    statements                     shift and go to state 41

state 12

    (0) S' -> statements .



state 13

    (27) expression -> list LBRACK . expression RBRACK
    (6) expression -> . string_expression
    (7) expression -> . list
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULT expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULO expression
    (13) expression -> . expression EXP expression
    (14) expression -> . expression FLDIV expression
    (15) expression -> . expression AND expression
    (16) expression -> . expression OR expression
    (17) expression -> . NOT expression
    (18) expression -> . expression LESST expression
    (19) expression -> . expression GREATERT expression
    (20) expression -> . expression LESSEQ expression
    (21) expression -> . expression GREATEREQ expression
    (22) expression -> . expression EQUALTO expression
    (23) expression -> . expression NOTEQ expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . VARNAME
    (27) expression -> . list LBRACK expression RBRACK
    (28) expression -> . string_expression LBRACK expression RBRACK
    (35) expression -> . expression IN list
    (36) expression -> . string_expression IN string_expression
    (33) string_expression -> . string_expression PLUS string_expression
    (34) string_expression -> . STRING
    (29) list -> . LBRACK list_item RBRACK
    (30) list -> . LBRACK RBRACK

    NOT             shift and go to state 8
    LPAREN          shift and go to state 2
    NUMBER          shift and go to state 10
    VARNAME         shift and go to state 14
    STRING          shift and go to state 9
    LBRACK          shift and go to state 7

    list                           shift and go to state 1
    expression                     shift and go to state 42
    string_expression              shift and go to state 6

state 14

    (26) expression -> VARNAME .

    PLUS            reduce using rule 26 (expression -> VARNAME .)
    MINUS           reduce using rule 26 (expression -> VARNAME .)
    MULT            reduce using rule 26 (expression -> VARNAME .)
    DIVIDE          reduce using rule 26 (expression -> VARNAME .)
    MODULO          reduce using rule 26 (expression -> VARNAME .)
    EXP             reduce using rule 26 (expression -> VARNAME .)
    FLDIV           reduce using rule 26 (expression -> VARNAME .)
    AND             reduce using rule 26 (expression -> VARNAME .)
    OR              reduce using rule 26 (expression -> VARNAME .)
    LESST           reduce using rule 26 (expression -> VARNAME .)
    GREATERT        reduce using rule 26 (expression -> VARNAME .)
    LESSEQ          reduce using rule 26 (expression -> VARNAME .)
    GREATEREQ       reduce using rule 26 (expression -> VARNAME .)
    EQUALTO         reduce using rule 26 (expression -> VARNAME .)
    NOTEQ           reduce using rule 26 (expression -> VARNAME .)
    IN              reduce using rule 26 (expression -> VARNAME .)
    RBRACK          reduce using rule 26 (expression -> VARNAME .)
    COMMA           reduce using rule 26 (expression -> VARNAME .)
    VARNAME         reduce using rule 26 (expression -> VARNAME .)
    LCURL           reduce using rule 26 (expression -> VARNAME .)
    NOT             reduce using rule 26 (expression -> VARNAME .)
    LPAREN          reduce using rule 26 (expression -> VARNAME .)
    NUMBER          reduce using rule 26 (expression -> VARNAME .)
    STRING          reduce using rule 26 (expression -> VARNAME .)
    LBRACK          reduce using rule 26 (expression -> VARNAME .)
    $end            reduce using rule 26 (expression -> VARNAME .)
    RPAREN          reduce using rule 26 (expression -> VARNAME .)
    RCURL           reduce using rule 26 (expression -> VARNAME .)
    SEMI            reduce using rule 26 (expression -> VARNAME .)


state 15

    (24) expression -> LPAREN expression . RPAREN
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULT expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULO expression
    (13) expression -> expression . EXP expression
    (14) expression -> expression . FLDIV expression
    (15) expression -> expression . AND expression
    (16) expression -> expression . OR expression
    (18) expression -> expression . LESST expression
    (19) expression -> expression . GREATERT expression
    (20) expression -> expression . LESSEQ expression
    (21) expression -> expression . GREATEREQ expression
    (22) expression -> expression . EQUALTO expression
    (23) expression -> expression . NOTEQ expression
    (35) expression -> expression . IN list

    RPAREN          shift and go to state 43
    PLUS            shift and go to state 31
    MINUS           shift and go to state 22
    MULT            shift and go to state 32
    DIVIDE          shift and go to state 29
    MODULO          shift and go to state 27
    EXP             shift and go to state 33
    FLDIV           shift and go to state 24
    AND             shift and go to state 30
    OR              shift and go to state 25
    LESST           shift and go to state 19
    GREATERT        shift and go to state 21
    LESSEQ          shift and go to state 26
    GREATEREQ       shift and go to state 23
    EQUALTO         shift and go to state 20
    NOTEQ           shift and go to state 18
    IN              shift and go to state 28


state 16

    (3) statement -> VARNAME EQUALS . expression SEMI
    (6) expression -> . string_expression
    (7) expression -> . list
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULT expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULO expression
    (13) expression -> . expression EXP expression
    (14) expression -> . expression FLDIV expression
    (15) expression -> . expression AND expression
    (16) expression -> . expression OR expression
    (17) expression -> . NOT expression
    (18) expression -> . expression LESST expression
    (19) expression -> . expression GREATERT expression
    (20) expression -> . expression LESSEQ expression
    (21) expression -> . expression GREATEREQ expression
    (22) expression -> . expression EQUALTO expression
    (23) expression -> . expression NOTEQ expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . VARNAME
    (27) expression -> . list LBRACK expression RBRACK
    (28) expression -> . string_expression LBRACK expression RBRACK
    (35) expression -> . expression IN list
    (36) expression -> . string_expression IN string_expression
    (33) string_expression -> . string_expression PLUS string_expression
    (34) string_expression -> . STRING
    (29) list -> . LBRACK list_item RBRACK
    (30) list -> . LBRACK RBRACK

    NOT             shift and go to state 8
    LPAREN          shift and go to state 2
    NUMBER          shift and go to state 10
    VARNAME         shift and go to state 14
    STRING          shift and go to state 9
    LBRACK          shift and go to state 7

    list                           shift and go to state 1
    expression                     shift and go to state 44
    string_expression              shift and go to state 6

state 17

    (2) statements -> statement statements .

    $end            reduce using rule 2 (statements -> statement statements .)
    RCURL           reduce using rule 2 (statements -> statement statements .)


state 18

    (23) expression -> expression NOTEQ . expression
    (6) expression -> . string_expression
    (7) expression -> . list
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULT expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULO expression
    (13) expression -> . expression EXP expression
    (14) expression -> . expression FLDIV expression
    (15) expression -> . expression AND expression
    (16) expression -> . expression OR expression
    (17) expression -> . NOT expression
    (18) expression -> . expression LESST expression
    (19) expression -> . expression GREATERT expression
    (20) expression -> . expression LESSEQ expression
    (21) expression -> . expression GREATEREQ expression
    (22) expression -> . expression EQUALTO expression
    (23) expression -> . expression NOTEQ expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . VARNAME
    (27) expression -> . list LBRACK expression RBRACK
    (28) expression -> . string_expression LBRACK expression RBRACK
    (35) expression -> . expression IN list
    (36) expression -> . string_expression IN string_expression
    (33) string_expression -> . string_expression PLUS string_expression
    (34) string_expression -> . STRING
    (29) list -> . LBRACK list_item RBRACK
    (30) list -> . LBRACK RBRACK

    NOT             shift and go to state 8
    LPAREN          shift and go to state 2
    NUMBER          shift and go to state 10
    VARNAME         shift and go to state 14
    STRING          shift and go to state 9
    LBRACK          shift and go to state 7

    list                           shift and go to state 1
    expression                     shift and go to state 45
    string_expression              shift and go to state 6

state 19

    (18) expression -> expression LESST . expression
    (6) expression -> . string_expression
    (7) expression -> . list
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULT expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULO expression
    (13) expression -> . expression EXP expression
    (14) expression -> . expression FLDIV expression
    (15) expression -> . expression AND expression
    (16) expression -> . expression OR expression
    (17) expression -> . NOT expression
    (18) expression -> . expression LESST expression
    (19) expression -> . expression GREATERT expression
    (20) expression -> . expression LESSEQ expression
    (21) expression -> . expression GREATEREQ expression
    (22) expression -> . expression EQUALTO expression
    (23) expression -> . expression NOTEQ expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . VARNAME
    (27) expression -> . list LBRACK expression RBRACK
    (28) expression -> . string_expression LBRACK expression RBRACK
    (35) expression -> . expression IN list
    (36) expression -> . string_expression IN string_expression
    (33) string_expression -> . string_expression PLUS string_expression
    (34) string_expression -> . STRING
    (29) list -> . LBRACK list_item RBRACK
    (30) list -> . LBRACK RBRACK

    NOT             shift and go to state 8
    LPAREN          shift and go to state 2
    NUMBER          shift and go to state 10
    VARNAME         shift and go to state 14
    STRING          shift and go to state 9
    LBRACK          shift and go to state 7

    list                           shift and go to state 1
    expression                     shift and go to state 46
    string_expression              shift and go to state 6

state 20

    (22) expression -> expression EQUALTO . expression
    (6) expression -> . string_expression
    (7) expression -> . list
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULT expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULO expression
    (13) expression -> . expression EXP expression
    (14) expression -> . expression FLDIV expression
    (15) expression -> . expression AND expression
    (16) expression -> . expression OR expression
    (17) expression -> . NOT expression
    (18) expression -> . expression LESST expression
    (19) expression -> . expression GREATERT expression
    (20) expression -> . expression LESSEQ expression
    (21) expression -> . expression GREATEREQ expression
    (22) expression -> . expression EQUALTO expression
    (23) expression -> . expression NOTEQ expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . VARNAME
    (27) expression -> . list LBRACK expression RBRACK
    (28) expression -> . string_expression LBRACK expression RBRACK
    (35) expression -> . expression IN list
    (36) expression -> . string_expression IN string_expression
    (33) string_expression -> . string_expression PLUS string_expression
    (34) string_expression -> . STRING
    (29) list -> . LBRACK list_item RBRACK
    (30) list -> . LBRACK RBRACK

    NOT             shift and go to state 8
    LPAREN          shift and go to state 2
    NUMBER          shift and go to state 10
    VARNAME         shift and go to state 14
    STRING          shift and go to state 9
    LBRACK          shift and go to state 7

    list                           shift and go to state 1
    expression                     shift and go to state 47
    string_expression              shift and go to state 6

state 21

    (19) expression -> expression GREATERT . expression
    (6) expression -> . string_expression
    (7) expression -> . list
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULT expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULO expression
    (13) expression -> . expression EXP expression
    (14) expression -> . expression FLDIV expression
    (15) expression -> . expression AND expression
    (16) expression -> . expression OR expression
    (17) expression -> . NOT expression
    (18) expression -> . expression LESST expression
    (19) expression -> . expression GREATERT expression
    (20) expression -> . expression LESSEQ expression
    (21) expression -> . expression GREATEREQ expression
    (22) expression -> . expression EQUALTO expression
    (23) expression -> . expression NOTEQ expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . VARNAME
    (27) expression -> . list LBRACK expression RBRACK
    (28) expression -> . string_expression LBRACK expression RBRACK
    (35) expression -> . expression IN list
    (36) expression -> . string_expression IN string_expression
    (33) string_expression -> . string_expression PLUS string_expression
    (34) string_expression -> . STRING
    (29) list -> . LBRACK list_item RBRACK
    (30) list -> . LBRACK RBRACK

    NOT             shift and go to state 8
    LPAREN          shift and go to state 2
    NUMBER          shift and go to state 10
    VARNAME         shift and go to state 14
    STRING          shift and go to state 9
    LBRACK          shift and go to state 7

    list                           shift and go to state 1
    expression                     shift and go to state 48
    string_expression              shift and go to state 6

state 22

    (9) expression -> expression MINUS . expression
    (6) expression -> . string_expression
    (7) expression -> . list
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULT expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULO expression
    (13) expression -> . expression EXP expression
    (14) expression -> . expression FLDIV expression
    (15) expression -> . expression AND expression
    (16) expression -> . expression OR expression
    (17) expression -> . NOT expression
    (18) expression -> . expression LESST expression
    (19) expression -> . expression GREATERT expression
    (20) expression -> . expression LESSEQ expression
    (21) expression -> . expression GREATEREQ expression
    (22) expression -> . expression EQUALTO expression
    (23) expression -> . expression NOTEQ expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . VARNAME
    (27) expression -> . list LBRACK expression RBRACK
    (28) expression -> . string_expression LBRACK expression RBRACK
    (35) expression -> . expression IN list
    (36) expression -> . string_expression IN string_expression
    (33) string_expression -> . string_expression PLUS string_expression
    (34) string_expression -> . STRING
    (29) list -> . LBRACK list_item RBRACK
    (30) list -> . LBRACK RBRACK

    NOT             shift and go to state 8
    LPAREN          shift and go to state 2
    NUMBER          shift and go to state 10
    VARNAME         shift and go to state 14
    STRING          shift and go to state 9
    LBRACK          shift and go to state 7

    list                           shift and go to state 1
    expression                     shift and go to state 49
    string_expression              shift and go to state 6

state 23

    (21) expression -> expression GREATEREQ . expression
    (6) expression -> . string_expression
    (7) expression -> . list
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULT expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULO expression
    (13) expression -> . expression EXP expression
    (14) expression -> . expression FLDIV expression
    (15) expression -> . expression AND expression
    (16) expression -> . expression OR expression
    (17) expression -> . NOT expression
    (18) expression -> . expression LESST expression
    (19) expression -> . expression GREATERT expression
    (20) expression -> . expression LESSEQ expression
    (21) expression -> . expression GREATEREQ expression
    (22) expression -> . expression EQUALTO expression
    (23) expression -> . expression NOTEQ expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . VARNAME
    (27) expression -> . list LBRACK expression RBRACK
    (28) expression -> . string_expression LBRACK expression RBRACK
    (35) expression -> . expression IN list
    (36) expression -> . string_expression IN string_expression
    (33) string_expression -> . string_expression PLUS string_expression
    (34) string_expression -> . STRING
    (29) list -> . LBRACK list_item RBRACK
    (30) list -> . LBRACK RBRACK

    NOT             shift and go to state 8
    LPAREN          shift and go to state 2
    NUMBER          shift and go to state 10
    VARNAME         shift and go to state 14
    STRING          shift and go to state 9
    LBRACK          shift and go to state 7

    list                           shift and go to state 1
    expression                     shift and go to state 50
    string_expression              shift and go to state 6

state 24

    (14) expression -> expression FLDIV . expression
    (6) expression -> . string_expression
    (7) expression -> . list
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULT expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULO expression
    (13) expression -> . expression EXP expression
    (14) expression -> . expression FLDIV expression
    (15) expression -> . expression AND expression
    (16) expression -> . expression OR expression
    (17) expression -> . NOT expression
    (18) expression -> . expression LESST expression
    (19) expression -> . expression GREATERT expression
    (20) expression -> . expression LESSEQ expression
    (21) expression -> . expression GREATEREQ expression
    (22) expression -> . expression EQUALTO expression
    (23) expression -> . expression NOTEQ expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . VARNAME
    (27) expression -> . list LBRACK expression RBRACK
    (28) expression -> . string_expression LBRACK expression RBRACK
    (35) expression -> . expression IN list
    (36) expression -> . string_expression IN string_expression
    (33) string_expression -> . string_expression PLUS string_expression
    (34) string_expression -> . STRING
    (29) list -> . LBRACK list_item RBRACK
    (30) list -> . LBRACK RBRACK

    NOT             shift and go to state 8
    LPAREN          shift and go to state 2
    NUMBER          shift and go to state 10
    VARNAME         shift and go to state 14
    STRING          shift and go to state 9
    LBRACK          shift and go to state 7

    list                           shift and go to state 1
    expression                     shift and go to state 51
    string_expression              shift and go to state 6

state 25

    (16) expression -> expression OR . expression
    (6) expression -> . string_expression
    (7) expression -> . list
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULT expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULO expression
    (13) expression -> . expression EXP expression
    (14) expression -> . expression FLDIV expression
    (15) expression -> . expression AND expression
    (16) expression -> . expression OR expression
    (17) expression -> . NOT expression
    (18) expression -> . expression LESST expression
    (19) expression -> . expression GREATERT expression
    (20) expression -> . expression LESSEQ expression
    (21) expression -> . expression GREATEREQ expression
    (22) expression -> . expression EQUALTO expression
    (23) expression -> . expression NOTEQ expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . VARNAME
    (27) expression -> . list LBRACK expression RBRACK
    (28) expression -> . string_expression LBRACK expression RBRACK
    (35) expression -> . expression IN list
    (36) expression -> . string_expression IN string_expression
    (33) string_expression -> . string_expression PLUS string_expression
    (34) string_expression -> . STRING
    (29) list -> . LBRACK list_item RBRACK
    (30) list -> . LBRACK RBRACK

    NOT             shift and go to state 8
    LPAREN          shift and go to state 2
    NUMBER          shift and go to state 10
    VARNAME         shift and go to state 14
    STRING          shift and go to state 9
    LBRACK          shift and go to state 7

    list                           shift and go to state 1
    expression                     shift and go to state 52
    string_expression              shift and go to state 6

state 26

    (20) expression -> expression LESSEQ . expression
    (6) expression -> . string_expression
    (7) expression -> . list
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULT expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULO expression
    (13) expression -> . expression EXP expression
    (14) expression -> . expression FLDIV expression
    (15) expression -> . expression AND expression
    (16) expression -> . expression OR expression
    (17) expression -> . NOT expression
    (18) expression -> . expression LESST expression
    (19) expression -> . expression GREATERT expression
    (20) expression -> . expression LESSEQ expression
    (21) expression -> . expression GREATEREQ expression
    (22) expression -> . expression EQUALTO expression
    (23) expression -> . expression NOTEQ expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . VARNAME
    (27) expression -> . list LBRACK expression RBRACK
    (28) expression -> . string_expression LBRACK expression RBRACK
    (35) expression -> . expression IN list
    (36) expression -> . string_expression IN string_expression
    (33) string_expression -> . string_expression PLUS string_expression
    (34) string_expression -> . STRING
    (29) list -> . LBRACK list_item RBRACK
    (30) list -> . LBRACK RBRACK

    NOT             shift and go to state 8
    LPAREN          shift and go to state 2
    NUMBER          shift and go to state 10
    VARNAME         shift and go to state 14
    STRING          shift and go to state 9
    LBRACK          shift and go to state 7

    list                           shift and go to state 1
    expression                     shift and go to state 53
    string_expression              shift and go to state 6

state 27

    (12) expression -> expression MODULO . expression
    (6) expression -> . string_expression
    (7) expression -> . list
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULT expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULO expression
    (13) expression -> . expression EXP expression
    (14) expression -> . expression FLDIV expression
    (15) expression -> . expression AND expression
    (16) expression -> . expression OR expression
    (17) expression -> . NOT expression
    (18) expression -> . expression LESST expression
    (19) expression -> . expression GREATERT expression
    (20) expression -> . expression LESSEQ expression
    (21) expression -> . expression GREATEREQ expression
    (22) expression -> . expression EQUALTO expression
    (23) expression -> . expression NOTEQ expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . VARNAME
    (27) expression -> . list LBRACK expression RBRACK
    (28) expression -> . string_expression LBRACK expression RBRACK
    (35) expression -> . expression IN list
    (36) expression -> . string_expression IN string_expression
    (33) string_expression -> . string_expression PLUS string_expression
    (34) string_expression -> . STRING
    (29) list -> . LBRACK list_item RBRACK
    (30) list -> . LBRACK RBRACK

    NOT             shift and go to state 8
    LPAREN          shift and go to state 2
    NUMBER          shift and go to state 10
    VARNAME         shift and go to state 14
    STRING          shift and go to state 9
    LBRACK          shift and go to state 7

    list                           shift and go to state 1
    expression                     shift and go to state 54
    string_expression              shift and go to state 6

state 28

    (35) expression -> expression IN . list
    (29) list -> . LBRACK list_item RBRACK
    (30) list -> . LBRACK RBRACK

    LBRACK          shift and go to state 7

    list                           shift and go to state 55

state 29

    (11) expression -> expression DIVIDE . expression
    (6) expression -> . string_expression
    (7) expression -> . list
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULT expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULO expression
    (13) expression -> . expression EXP expression
    (14) expression -> . expression FLDIV expression
    (15) expression -> . expression AND expression
    (16) expression -> . expression OR expression
    (17) expression -> . NOT expression
    (18) expression -> . expression LESST expression
    (19) expression -> . expression GREATERT expression
    (20) expression -> . expression LESSEQ expression
    (21) expression -> . expression GREATEREQ expression
    (22) expression -> . expression EQUALTO expression
    (23) expression -> . expression NOTEQ expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . VARNAME
    (27) expression -> . list LBRACK expression RBRACK
    (28) expression -> . string_expression LBRACK expression RBRACK
    (35) expression -> . expression IN list
    (36) expression -> . string_expression IN string_expression
    (33) string_expression -> . string_expression PLUS string_expression
    (34) string_expression -> . STRING
    (29) list -> . LBRACK list_item RBRACK
    (30) list -> . LBRACK RBRACK

    NOT             shift and go to state 8
    LPAREN          shift and go to state 2
    NUMBER          shift and go to state 10
    VARNAME         shift and go to state 14
    STRING          shift and go to state 9
    LBRACK          shift and go to state 7

    list                           shift and go to state 1
    expression                     shift and go to state 56
    string_expression              shift and go to state 6

state 30

    (15) expression -> expression AND . expression
    (6) expression -> . string_expression
    (7) expression -> . list
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULT expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULO expression
    (13) expression -> . expression EXP expression
    (14) expression -> . expression FLDIV expression
    (15) expression -> . expression AND expression
    (16) expression -> . expression OR expression
    (17) expression -> . NOT expression
    (18) expression -> . expression LESST expression
    (19) expression -> . expression GREATERT expression
    (20) expression -> . expression LESSEQ expression
    (21) expression -> . expression GREATEREQ expression
    (22) expression -> . expression EQUALTO expression
    (23) expression -> . expression NOTEQ expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . VARNAME
    (27) expression -> . list LBRACK expression RBRACK
    (28) expression -> . string_expression LBRACK expression RBRACK
    (35) expression -> . expression IN list
    (36) expression -> . string_expression IN string_expression
    (33) string_expression -> . string_expression PLUS string_expression
    (34) string_expression -> . STRING
    (29) list -> . LBRACK list_item RBRACK
    (30) list -> . LBRACK RBRACK

    NOT             shift and go to state 8
    LPAREN          shift and go to state 2
    NUMBER          shift and go to state 10
    VARNAME         shift and go to state 14
    STRING          shift and go to state 9
    LBRACK          shift and go to state 7

    list                           shift and go to state 1
    expression                     shift and go to state 57
    string_expression              shift and go to state 6

state 31

    (8) expression -> expression PLUS . expression
    (6) expression -> . string_expression
    (7) expression -> . list
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULT expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULO expression
    (13) expression -> . expression EXP expression
    (14) expression -> . expression FLDIV expression
    (15) expression -> . expression AND expression
    (16) expression -> . expression OR expression
    (17) expression -> . NOT expression
    (18) expression -> . expression LESST expression
    (19) expression -> . expression GREATERT expression
    (20) expression -> . expression LESSEQ expression
    (21) expression -> . expression GREATEREQ expression
    (22) expression -> . expression EQUALTO expression
    (23) expression -> . expression NOTEQ expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . VARNAME
    (27) expression -> . list LBRACK expression RBRACK
    (28) expression -> . string_expression LBRACK expression RBRACK
    (35) expression -> . expression IN list
    (36) expression -> . string_expression IN string_expression
    (33) string_expression -> . string_expression PLUS string_expression
    (34) string_expression -> . STRING
    (29) list -> . LBRACK list_item RBRACK
    (30) list -> . LBRACK RBRACK

    NOT             shift and go to state 8
    LPAREN          shift and go to state 2
    NUMBER          shift and go to state 10
    VARNAME         shift and go to state 14
    STRING          shift and go to state 9
    LBRACK          shift and go to state 7

    list                           shift and go to state 1
    expression                     shift and go to state 58
    string_expression              shift and go to state 6

state 32

    (10) expression -> expression MULT . expression
    (6) expression -> . string_expression
    (7) expression -> . list
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULT expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULO expression
    (13) expression -> . expression EXP expression
    (14) expression -> . expression FLDIV expression
    (15) expression -> . expression AND expression
    (16) expression -> . expression OR expression
    (17) expression -> . NOT expression
    (18) expression -> . expression LESST expression
    (19) expression -> . expression GREATERT expression
    (20) expression -> . expression LESSEQ expression
    (21) expression -> . expression GREATEREQ expression
    (22) expression -> . expression EQUALTO expression
    (23) expression -> . expression NOTEQ expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . VARNAME
    (27) expression -> . list LBRACK expression RBRACK
    (28) expression -> . string_expression LBRACK expression RBRACK
    (35) expression -> . expression IN list
    (36) expression -> . string_expression IN string_expression
    (33) string_expression -> . string_expression PLUS string_expression
    (34) string_expression -> . STRING
    (29) list -> . LBRACK list_item RBRACK
    (30) list -> . LBRACK RBRACK

    NOT             shift and go to state 8
    LPAREN          shift and go to state 2
    NUMBER          shift and go to state 10
    VARNAME         shift and go to state 14
    STRING          shift and go to state 9
    LBRACK          shift and go to state 7

    list                           shift and go to state 1
    expression                     shift and go to state 59
    string_expression              shift and go to state 6

state 33

    (13) expression -> expression EXP . expression
    (6) expression -> . string_expression
    (7) expression -> . list
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULT expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULO expression
    (13) expression -> . expression EXP expression
    (14) expression -> . expression FLDIV expression
    (15) expression -> . expression AND expression
    (16) expression -> . expression OR expression
    (17) expression -> . NOT expression
    (18) expression -> . expression LESST expression
    (19) expression -> . expression GREATERT expression
    (20) expression -> . expression LESSEQ expression
    (21) expression -> . expression GREATEREQ expression
    (22) expression -> . expression EQUALTO expression
    (23) expression -> . expression NOTEQ expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . VARNAME
    (27) expression -> . list LBRACK expression RBRACK
    (28) expression -> . string_expression LBRACK expression RBRACK
    (35) expression -> . expression IN list
    (36) expression -> . string_expression IN string_expression
    (33) string_expression -> . string_expression PLUS string_expression
    (34) string_expression -> . STRING
    (29) list -> . LBRACK list_item RBRACK
    (30) list -> . LBRACK RBRACK

    NOT             shift and go to state 8
    LPAREN          shift and go to state 2
    NUMBER          shift and go to state 10
    VARNAME         shift and go to state 14
    STRING          shift and go to state 9
    LBRACK          shift and go to state 7

    list                           shift and go to state 1
    expression                     shift and go to state 60
    string_expression              shift and go to state 6

state 34

    (28) expression -> string_expression LBRACK . expression RBRACK
    (6) expression -> . string_expression
    (7) expression -> . list
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULT expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULO expression
    (13) expression -> . expression EXP expression
    (14) expression -> . expression FLDIV expression
    (15) expression -> . expression AND expression
    (16) expression -> . expression OR expression
    (17) expression -> . NOT expression
    (18) expression -> . expression LESST expression
    (19) expression -> . expression GREATERT expression
    (20) expression -> . expression LESSEQ expression
    (21) expression -> . expression GREATEREQ expression
    (22) expression -> . expression EQUALTO expression
    (23) expression -> . expression NOTEQ expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . VARNAME
    (27) expression -> . list LBRACK expression RBRACK
    (28) expression -> . string_expression LBRACK expression RBRACK
    (35) expression -> . expression IN list
    (36) expression -> . string_expression IN string_expression
    (33) string_expression -> . string_expression PLUS string_expression
    (34) string_expression -> . STRING
    (29) list -> . LBRACK list_item RBRACK
    (30) list -> . LBRACK RBRACK

    NOT             shift and go to state 8
    LPAREN          shift and go to state 2
    NUMBER          shift and go to state 10
    VARNAME         shift and go to state 14
    STRING          shift and go to state 9
    LBRACK          shift and go to state 7

    list                           shift and go to state 1
    expression                     shift and go to state 61
    string_expression              shift and go to state 6

state 35

    (36) expression -> string_expression IN . string_expression
    (33) string_expression -> . string_expression PLUS string_expression
    (34) string_expression -> . STRING

    STRING          shift and go to state 9

    string_expression              shift and go to state 62

state 36

    (33) string_expression -> string_expression PLUS . string_expression
    (33) string_expression -> . string_expression PLUS string_expression
    (34) string_expression -> . STRING

    STRING          shift and go to state 9

    string_expression              shift and go to state 63

state 37

    (29) list -> LBRACK list_item . RBRACK
    (31) list_item -> list_item . COMMA list_item

    RBRACK          shift and go to state 65
    COMMA           shift and go to state 64


state 38

    (30) list -> LBRACK RBRACK .

    LBRACK          reduce using rule 30 (list -> LBRACK RBRACK .)
    PLUS            reduce using rule 30 (list -> LBRACK RBRACK .)
    MINUS           reduce using rule 30 (list -> LBRACK RBRACK .)
    MULT            reduce using rule 30 (list -> LBRACK RBRACK .)
    DIVIDE          reduce using rule 30 (list -> LBRACK RBRACK .)
    MODULO          reduce using rule 30 (list -> LBRACK RBRACK .)
    EXP             reduce using rule 30 (list -> LBRACK RBRACK .)
    FLDIV           reduce using rule 30 (list -> LBRACK RBRACK .)
    AND             reduce using rule 30 (list -> LBRACK RBRACK .)
    OR              reduce using rule 30 (list -> LBRACK RBRACK .)
    LESST           reduce using rule 30 (list -> LBRACK RBRACK .)
    GREATERT        reduce using rule 30 (list -> LBRACK RBRACK .)
    LESSEQ          reduce using rule 30 (list -> LBRACK RBRACK .)
    GREATEREQ       reduce using rule 30 (list -> LBRACK RBRACK .)
    EQUALTO         reduce using rule 30 (list -> LBRACK RBRACK .)
    NOTEQ           reduce using rule 30 (list -> LBRACK RBRACK .)
    IN              reduce using rule 30 (list -> LBRACK RBRACK .)
    VARNAME         reduce using rule 30 (list -> LBRACK RBRACK .)
    LCURL           reduce using rule 30 (list -> LBRACK RBRACK .)
    NOT             reduce using rule 30 (list -> LBRACK RBRACK .)
    LPAREN          reduce using rule 30 (list -> LBRACK RBRACK .)
    NUMBER          reduce using rule 30 (list -> LBRACK RBRACK .)
    STRING          reduce using rule 30 (list -> LBRACK RBRACK .)
    $end            reduce using rule 30 (list -> LBRACK RBRACK .)
    RPAREN          reduce using rule 30 (list -> LBRACK RBRACK .)
    RCURL           reduce using rule 30 (list -> LBRACK RBRACK .)
    RBRACK          reduce using rule 30 (list -> LBRACK RBRACK .)
    COMMA           reduce using rule 30 (list -> LBRACK RBRACK .)
    SEMI            reduce using rule 30 (list -> LBRACK RBRACK .)


state 39

    (32) list_item -> expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULT expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULO expression
    (13) expression -> expression . EXP expression
    (14) expression -> expression . FLDIV expression
    (15) expression -> expression . AND expression
    (16) expression -> expression . OR expression
    (18) expression -> expression . LESST expression
    (19) expression -> expression . GREATERT expression
    (20) expression -> expression . LESSEQ expression
    (21) expression -> expression . GREATEREQ expression
    (22) expression -> expression . EQUALTO expression
    (23) expression -> expression . NOTEQ expression
    (35) expression -> expression . IN list

    RBRACK          reduce using rule 32 (list_item -> expression .)
    COMMA           reduce using rule 32 (list_item -> expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 22
    MULT            shift and go to state 32
    DIVIDE          shift and go to state 29
    MODULO          shift and go to state 27
    EXP             shift and go to state 33
    FLDIV           shift and go to state 24
    AND             shift and go to state 30
    OR              shift and go to state 25
    LESST           shift and go to state 19
    GREATERT        shift and go to state 21
    LESSEQ          shift and go to state 26
    GREATEREQ       shift and go to state 23
    EQUALTO         shift and go to state 20
    NOTEQ           shift and go to state 18
    IN              shift and go to state 28


state 40

    (17) expression -> NOT expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULT expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULO expression
    (13) expression -> expression . EXP expression
    (14) expression -> expression . FLDIV expression
    (15) expression -> expression . AND expression
    (16) expression -> expression . OR expression
    (18) expression -> expression . LESST expression
    (19) expression -> expression . GREATERT expression
    (20) expression -> expression . LESSEQ expression
    (21) expression -> expression . GREATEREQ expression
    (22) expression -> expression . EQUALTO expression
    (23) expression -> expression . NOTEQ expression
    (35) expression -> expression . IN list

    AND             reduce using rule 17 (expression -> NOT expression .)
    OR              reduce using rule 17 (expression -> NOT expression .)
    RBRACK          reduce using rule 17 (expression -> NOT expression .)
    COMMA           reduce using rule 17 (expression -> NOT expression .)
    VARNAME         reduce using rule 17 (expression -> NOT expression .)
    LCURL           reduce using rule 17 (expression -> NOT expression .)
    NOT             reduce using rule 17 (expression -> NOT expression .)
    LPAREN          reduce using rule 17 (expression -> NOT expression .)
    NUMBER          reduce using rule 17 (expression -> NOT expression .)
    STRING          reduce using rule 17 (expression -> NOT expression .)
    LBRACK          reduce using rule 17 (expression -> NOT expression .)
    $end            reduce using rule 17 (expression -> NOT expression .)
    RPAREN          reduce using rule 17 (expression -> NOT expression .)
    RCURL           reduce using rule 17 (expression -> NOT expression .)
    SEMI            reduce using rule 17 (expression -> NOT expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 22
    MULT            shift and go to state 32
    DIVIDE          shift and go to state 29
    MODULO          shift and go to state 27
    EXP             shift and go to state 33
    FLDIV           shift and go to state 24
    LESST           shift and go to state 19
    GREATERT        shift and go to state 21
    LESSEQ          shift and go to state 26
    GREATEREQ       shift and go to state 23
    EQUALTO         shift and go to state 20
    NOTEQ           shift and go to state 18
    IN              shift and go to state 28

  ! PLUS            [ reduce using rule 17 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> NOT expression .) ]
  ! MULT            [ reduce using rule 17 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> NOT expression .) ]
  ! MODULO          [ reduce using rule 17 (expression -> NOT expression .) ]
  ! EXP             [ reduce using rule 17 (expression -> NOT expression .) ]
  ! FLDIV           [ reduce using rule 17 (expression -> NOT expression .) ]
  ! LESST           [ reduce using rule 17 (expression -> NOT expression .) ]
  ! GREATERT        [ reduce using rule 17 (expression -> NOT expression .) ]
  ! LESSEQ          [ reduce using rule 17 (expression -> NOT expression .) ]
  ! GREATEREQ       [ reduce using rule 17 (expression -> NOT expression .) ]
  ! EQUALTO         [ reduce using rule 17 (expression -> NOT expression .) ]
  ! NOTEQ           [ reduce using rule 17 (expression -> NOT expression .) ]
  ! IN              [ reduce using rule 17 (expression -> NOT expression .) ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 25 ]


state 41

    (5) statement -> LCURL statements . RCURL

    RCURL           shift and go to state 66


state 42

    (27) expression -> list LBRACK expression . RBRACK
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULT expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULO expression
    (13) expression -> expression . EXP expression
    (14) expression -> expression . FLDIV expression
    (15) expression -> expression . AND expression
    (16) expression -> expression . OR expression
    (18) expression -> expression . LESST expression
    (19) expression -> expression . GREATERT expression
    (20) expression -> expression . LESSEQ expression
    (21) expression -> expression . GREATEREQ expression
    (22) expression -> expression . EQUALTO expression
    (23) expression -> expression . NOTEQ expression
    (35) expression -> expression . IN list

    RBRACK          shift and go to state 67
    PLUS            shift and go to state 31
    MINUS           shift and go to state 22
    MULT            shift and go to state 32
    DIVIDE          shift and go to state 29
    MODULO          shift and go to state 27
    EXP             shift and go to state 33
    FLDIV           shift and go to state 24
    AND             shift and go to state 30
    OR              shift and go to state 25
    LESST           shift and go to state 19
    GREATERT        shift and go to state 21
    LESSEQ          shift and go to state 26
    GREATEREQ       shift and go to state 23
    EQUALTO         shift and go to state 20
    NOTEQ           shift and go to state 18
    IN              shift and go to state 28


state 43

    (24) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    MULT            reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    MODULO          reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    EXP             reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    FLDIV           reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    LESST           reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    GREATERT        reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    LESSEQ          reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    GREATEREQ       reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    EQUALTO         reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    NOTEQ           reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    IN              reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    RBRACK          reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    VARNAME         reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    LCURL           reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    NOT             reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    STRING          reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    LBRACK          reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    RCURL           reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 24 (expression -> LPAREN expression RPAREN .)


state 44

    (3) statement -> VARNAME EQUALS expression . SEMI
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULT expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULO expression
    (13) expression -> expression . EXP expression
    (14) expression -> expression . FLDIV expression
    (15) expression -> expression . AND expression
    (16) expression -> expression . OR expression
    (18) expression -> expression . LESST expression
    (19) expression -> expression . GREATERT expression
    (20) expression -> expression . LESSEQ expression
    (21) expression -> expression . GREATEREQ expression
    (22) expression -> expression . EQUALTO expression
    (23) expression -> expression . NOTEQ expression
    (35) expression -> expression . IN list

    SEMI            shift and go to state 68
    PLUS            shift and go to state 31
    MINUS           shift and go to state 22
    MULT            shift and go to state 32
    DIVIDE          shift and go to state 29
    MODULO          shift and go to state 27
    EXP             shift and go to state 33
    FLDIV           shift and go to state 24
    AND             shift and go to state 30
    OR              shift and go to state 25
    LESST           shift and go to state 19
    GREATERT        shift and go to state 21
    LESSEQ          shift and go to state 26
    GREATEREQ       shift and go to state 23
    EQUALTO         shift and go to state 20
    NOTEQ           shift and go to state 18
    IN              shift and go to state 28


state 45

    (23) expression -> expression NOTEQ expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULT expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULO expression
    (13) expression -> expression . EXP expression
    (14) expression -> expression . FLDIV expression
    (15) expression -> expression . AND expression
    (16) expression -> expression . OR expression
    (18) expression -> expression . LESST expression
    (19) expression -> expression . GREATERT expression
    (20) expression -> expression . LESSEQ expression
    (21) expression -> expression . GREATEREQ expression
    (22) expression -> expression . EQUALTO expression
    (23) expression -> expression . NOTEQ expression
    (35) expression -> expression . IN list

    AND             reduce using rule 23 (expression -> expression NOTEQ expression .)
    OR              reduce using rule 23 (expression -> expression NOTEQ expression .)
    LESST           reduce using rule 23 (expression -> expression NOTEQ expression .)
    GREATERT        reduce using rule 23 (expression -> expression NOTEQ expression .)
    LESSEQ          reduce using rule 23 (expression -> expression NOTEQ expression .)
    GREATEREQ       reduce using rule 23 (expression -> expression NOTEQ expression .)
    EQUALTO         reduce using rule 23 (expression -> expression NOTEQ expression .)
    NOTEQ           reduce using rule 23 (expression -> expression NOTEQ expression .)
    RBRACK          reduce using rule 23 (expression -> expression NOTEQ expression .)
    COMMA           reduce using rule 23 (expression -> expression NOTEQ expression .)
    VARNAME         reduce using rule 23 (expression -> expression NOTEQ expression .)
    LCURL           reduce using rule 23 (expression -> expression NOTEQ expression .)
    NOT             reduce using rule 23 (expression -> expression NOTEQ expression .)
    LPAREN          reduce using rule 23 (expression -> expression NOTEQ expression .)
    NUMBER          reduce using rule 23 (expression -> expression NOTEQ expression .)
    STRING          reduce using rule 23 (expression -> expression NOTEQ expression .)
    LBRACK          reduce using rule 23 (expression -> expression NOTEQ expression .)
    $end            reduce using rule 23 (expression -> expression NOTEQ expression .)
    RPAREN          reduce using rule 23 (expression -> expression NOTEQ expression .)
    RCURL           reduce using rule 23 (expression -> expression NOTEQ expression .)
    SEMI            reduce using rule 23 (expression -> expression NOTEQ expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 22
    MULT            shift and go to state 32
    DIVIDE          shift and go to state 29
    MODULO          shift and go to state 27
    EXP             shift and go to state 33
    FLDIV           shift and go to state 24
    IN              shift and go to state 28

  ! PLUS            [ reduce using rule 23 (expression -> expression NOTEQ expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> expression NOTEQ expression .) ]
  ! MULT            [ reduce using rule 23 (expression -> expression NOTEQ expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression NOTEQ expression .) ]
  ! MODULO          [ reduce using rule 23 (expression -> expression NOTEQ expression .) ]
  ! EXP             [ reduce using rule 23 (expression -> expression NOTEQ expression .) ]
  ! FLDIV           [ reduce using rule 23 (expression -> expression NOTEQ expression .) ]
  ! IN              [ reduce using rule 23 (expression -> expression NOTEQ expression .) ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 25 ]
  ! LESST           [ shift and go to state 19 ]
  ! GREATERT        [ shift and go to state 21 ]
  ! LESSEQ          [ shift and go to state 26 ]
  ! GREATEREQ       [ shift and go to state 23 ]
  ! EQUALTO         [ shift and go to state 20 ]
  ! NOTEQ           [ shift and go to state 18 ]


state 46

    (18) expression -> expression LESST expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULT expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULO expression
    (13) expression -> expression . EXP expression
    (14) expression -> expression . FLDIV expression
    (15) expression -> expression . AND expression
    (16) expression -> expression . OR expression
    (18) expression -> expression . LESST expression
    (19) expression -> expression . GREATERT expression
    (20) expression -> expression . LESSEQ expression
    (21) expression -> expression . GREATEREQ expression
    (22) expression -> expression . EQUALTO expression
    (23) expression -> expression . NOTEQ expression
    (35) expression -> expression . IN list

    AND             reduce using rule 18 (expression -> expression LESST expression .)
    OR              reduce using rule 18 (expression -> expression LESST expression .)
    LESST           reduce using rule 18 (expression -> expression LESST expression .)
    GREATERT        reduce using rule 18 (expression -> expression LESST expression .)
    LESSEQ          reduce using rule 18 (expression -> expression LESST expression .)
    GREATEREQ       reduce using rule 18 (expression -> expression LESST expression .)
    EQUALTO         reduce using rule 18 (expression -> expression LESST expression .)
    NOTEQ           reduce using rule 18 (expression -> expression LESST expression .)
    RBRACK          reduce using rule 18 (expression -> expression LESST expression .)
    COMMA           reduce using rule 18 (expression -> expression LESST expression .)
    VARNAME         reduce using rule 18 (expression -> expression LESST expression .)
    LCURL           reduce using rule 18 (expression -> expression LESST expression .)
    NOT             reduce using rule 18 (expression -> expression LESST expression .)
    LPAREN          reduce using rule 18 (expression -> expression LESST expression .)
    NUMBER          reduce using rule 18 (expression -> expression LESST expression .)
    STRING          reduce using rule 18 (expression -> expression LESST expression .)
    LBRACK          reduce using rule 18 (expression -> expression LESST expression .)
    $end            reduce using rule 18 (expression -> expression LESST expression .)
    RPAREN          reduce using rule 18 (expression -> expression LESST expression .)
    RCURL           reduce using rule 18 (expression -> expression LESST expression .)
    SEMI            reduce using rule 18 (expression -> expression LESST expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 22
    MULT            shift and go to state 32
    DIVIDE          shift and go to state 29
    MODULO          shift and go to state 27
    EXP             shift and go to state 33
    FLDIV           shift and go to state 24
    IN              shift and go to state 28

  ! PLUS            [ reduce using rule 18 (expression -> expression LESST expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression LESST expression .) ]
  ! MULT            [ reduce using rule 18 (expression -> expression LESST expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression LESST expression .) ]
  ! MODULO          [ reduce using rule 18 (expression -> expression LESST expression .) ]
  ! EXP             [ reduce using rule 18 (expression -> expression LESST expression .) ]
  ! FLDIV           [ reduce using rule 18 (expression -> expression LESST expression .) ]
  ! IN              [ reduce using rule 18 (expression -> expression LESST expression .) ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 25 ]
  ! LESST           [ shift and go to state 19 ]
  ! GREATERT        [ shift and go to state 21 ]
  ! LESSEQ          [ shift and go to state 26 ]
  ! GREATEREQ       [ shift and go to state 23 ]
  ! EQUALTO         [ shift and go to state 20 ]
  ! NOTEQ           [ shift and go to state 18 ]


state 47

    (22) expression -> expression EQUALTO expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULT expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULO expression
    (13) expression -> expression . EXP expression
    (14) expression -> expression . FLDIV expression
    (15) expression -> expression . AND expression
    (16) expression -> expression . OR expression
    (18) expression -> expression . LESST expression
    (19) expression -> expression . GREATERT expression
    (20) expression -> expression . LESSEQ expression
    (21) expression -> expression . GREATEREQ expression
    (22) expression -> expression . EQUALTO expression
    (23) expression -> expression . NOTEQ expression
    (35) expression -> expression . IN list

    AND             reduce using rule 22 (expression -> expression EQUALTO expression .)
    OR              reduce using rule 22 (expression -> expression EQUALTO expression .)
    LESST           reduce using rule 22 (expression -> expression EQUALTO expression .)
    GREATERT        reduce using rule 22 (expression -> expression EQUALTO expression .)
    LESSEQ          reduce using rule 22 (expression -> expression EQUALTO expression .)
    GREATEREQ       reduce using rule 22 (expression -> expression EQUALTO expression .)
    EQUALTO         reduce using rule 22 (expression -> expression EQUALTO expression .)
    NOTEQ           reduce using rule 22 (expression -> expression EQUALTO expression .)
    RBRACK          reduce using rule 22 (expression -> expression EQUALTO expression .)
    COMMA           reduce using rule 22 (expression -> expression EQUALTO expression .)
    VARNAME         reduce using rule 22 (expression -> expression EQUALTO expression .)
    LCURL           reduce using rule 22 (expression -> expression EQUALTO expression .)
    NOT             reduce using rule 22 (expression -> expression EQUALTO expression .)
    LPAREN          reduce using rule 22 (expression -> expression EQUALTO expression .)
    NUMBER          reduce using rule 22 (expression -> expression EQUALTO expression .)
    STRING          reduce using rule 22 (expression -> expression EQUALTO expression .)
    LBRACK          reduce using rule 22 (expression -> expression EQUALTO expression .)
    $end            reduce using rule 22 (expression -> expression EQUALTO expression .)
    RPAREN          reduce using rule 22 (expression -> expression EQUALTO expression .)
    RCURL           reduce using rule 22 (expression -> expression EQUALTO expression .)
    SEMI            reduce using rule 22 (expression -> expression EQUALTO expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 22
    MULT            shift and go to state 32
    DIVIDE          shift and go to state 29
    MODULO          shift and go to state 27
    EXP             shift and go to state 33
    FLDIV           shift and go to state 24
    IN              shift and go to state 28

  ! PLUS            [ reduce using rule 22 (expression -> expression EQUALTO expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression EQUALTO expression .) ]
  ! MULT            [ reduce using rule 22 (expression -> expression EQUALTO expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression EQUALTO expression .) ]
  ! MODULO          [ reduce using rule 22 (expression -> expression EQUALTO expression .) ]
  ! EXP             [ reduce using rule 22 (expression -> expression EQUALTO expression .) ]
  ! FLDIV           [ reduce using rule 22 (expression -> expression EQUALTO expression .) ]
  ! IN              [ reduce using rule 22 (expression -> expression EQUALTO expression .) ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 25 ]
  ! LESST           [ shift and go to state 19 ]
  ! GREATERT        [ shift and go to state 21 ]
  ! LESSEQ          [ shift and go to state 26 ]
  ! GREATEREQ       [ shift and go to state 23 ]
  ! EQUALTO         [ shift and go to state 20 ]
  ! NOTEQ           [ shift and go to state 18 ]


state 48

    (19) expression -> expression GREATERT expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULT expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULO expression
    (13) expression -> expression . EXP expression
    (14) expression -> expression . FLDIV expression
    (15) expression -> expression . AND expression
    (16) expression -> expression . OR expression
    (18) expression -> expression . LESST expression
    (19) expression -> expression . GREATERT expression
    (20) expression -> expression . LESSEQ expression
    (21) expression -> expression . GREATEREQ expression
    (22) expression -> expression . EQUALTO expression
    (23) expression -> expression . NOTEQ expression
    (35) expression -> expression . IN list

    AND             reduce using rule 19 (expression -> expression GREATERT expression .)
    OR              reduce using rule 19 (expression -> expression GREATERT expression .)
    LESST           reduce using rule 19 (expression -> expression GREATERT expression .)
    GREATERT        reduce using rule 19 (expression -> expression GREATERT expression .)
    LESSEQ          reduce using rule 19 (expression -> expression GREATERT expression .)
    GREATEREQ       reduce using rule 19 (expression -> expression GREATERT expression .)
    EQUALTO         reduce using rule 19 (expression -> expression GREATERT expression .)
    NOTEQ           reduce using rule 19 (expression -> expression GREATERT expression .)
    RBRACK          reduce using rule 19 (expression -> expression GREATERT expression .)
    COMMA           reduce using rule 19 (expression -> expression GREATERT expression .)
    VARNAME         reduce using rule 19 (expression -> expression GREATERT expression .)
    LCURL           reduce using rule 19 (expression -> expression GREATERT expression .)
    NOT             reduce using rule 19 (expression -> expression GREATERT expression .)
    LPAREN          reduce using rule 19 (expression -> expression GREATERT expression .)
    NUMBER          reduce using rule 19 (expression -> expression GREATERT expression .)
    STRING          reduce using rule 19 (expression -> expression GREATERT expression .)
    LBRACK          reduce using rule 19 (expression -> expression GREATERT expression .)
    $end            reduce using rule 19 (expression -> expression GREATERT expression .)
    RPAREN          reduce using rule 19 (expression -> expression GREATERT expression .)
    RCURL           reduce using rule 19 (expression -> expression GREATERT expression .)
    SEMI            reduce using rule 19 (expression -> expression GREATERT expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 22
    MULT            shift and go to state 32
    DIVIDE          shift and go to state 29
    MODULO          shift and go to state 27
    EXP             shift and go to state 33
    FLDIV           shift and go to state 24
    IN              shift and go to state 28

  ! PLUS            [ reduce using rule 19 (expression -> expression GREATERT expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression GREATERT expression .) ]
  ! MULT            [ reduce using rule 19 (expression -> expression GREATERT expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression GREATERT expression .) ]
  ! MODULO          [ reduce using rule 19 (expression -> expression GREATERT expression .) ]
  ! EXP             [ reduce using rule 19 (expression -> expression GREATERT expression .) ]
  ! FLDIV           [ reduce using rule 19 (expression -> expression GREATERT expression .) ]
  ! IN              [ reduce using rule 19 (expression -> expression GREATERT expression .) ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 25 ]
  ! LESST           [ shift and go to state 19 ]
  ! GREATERT        [ shift and go to state 21 ]
  ! LESSEQ          [ shift and go to state 26 ]
  ! GREATEREQ       [ shift and go to state 23 ]
  ! EQUALTO         [ shift and go to state 20 ]
  ! NOTEQ           [ shift and go to state 18 ]


state 49

    (9) expression -> expression MINUS expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULT expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULO expression
    (13) expression -> expression . EXP expression
    (14) expression -> expression . FLDIV expression
    (15) expression -> expression . AND expression
    (16) expression -> expression . OR expression
    (18) expression -> expression . LESST expression
    (19) expression -> expression . GREATERT expression
    (20) expression -> expression . LESSEQ expression
    (21) expression -> expression . GREATEREQ expression
    (22) expression -> expression . EQUALTO expression
    (23) expression -> expression . NOTEQ expression
    (35) expression -> expression . IN list

    PLUS            reduce using rule 9 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 9 (expression -> expression MINUS expression .)
    AND             reduce using rule 9 (expression -> expression MINUS expression .)
    OR              reduce using rule 9 (expression -> expression MINUS expression .)
    LESST           reduce using rule 9 (expression -> expression MINUS expression .)
    GREATERT        reduce using rule 9 (expression -> expression MINUS expression .)
    LESSEQ          reduce using rule 9 (expression -> expression MINUS expression .)
    GREATEREQ       reduce using rule 9 (expression -> expression MINUS expression .)
    EQUALTO         reduce using rule 9 (expression -> expression MINUS expression .)
    NOTEQ           reduce using rule 9 (expression -> expression MINUS expression .)
    IN              reduce using rule 9 (expression -> expression MINUS expression .)
    RBRACK          reduce using rule 9 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 9 (expression -> expression MINUS expression .)
    VARNAME         reduce using rule 9 (expression -> expression MINUS expression .)
    LCURL           reduce using rule 9 (expression -> expression MINUS expression .)
    NOT             reduce using rule 9 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 9 (expression -> expression MINUS expression .)
    NUMBER          reduce using rule 9 (expression -> expression MINUS expression .)
    STRING          reduce using rule 9 (expression -> expression MINUS expression .)
    LBRACK          reduce using rule 9 (expression -> expression MINUS expression .)
    $end            reduce using rule 9 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 9 (expression -> expression MINUS expression .)
    RCURL           reduce using rule 9 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 9 (expression -> expression MINUS expression .)
    MULT            shift and go to state 32
    DIVIDE          shift and go to state 29
    MODULO          shift and go to state 27
    EXP             shift and go to state 33
    FLDIV           shift and go to state 24

  ! MULT            [ reduce using rule 9 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 9 (expression -> expression MINUS expression .) ]
  ! MODULO          [ reduce using rule 9 (expression -> expression MINUS expression .) ]
  ! EXP             [ reduce using rule 9 (expression -> expression MINUS expression .) ]
  ! FLDIV           [ reduce using rule 9 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 22 ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 25 ]
  ! LESST           [ shift and go to state 19 ]
  ! GREATERT        [ shift and go to state 21 ]
  ! LESSEQ          [ shift and go to state 26 ]
  ! GREATEREQ       [ shift and go to state 23 ]
  ! EQUALTO         [ shift and go to state 20 ]
  ! NOTEQ           [ shift and go to state 18 ]
  ! IN              [ shift and go to state 28 ]


state 50

    (21) expression -> expression GREATEREQ expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULT expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULO expression
    (13) expression -> expression . EXP expression
    (14) expression -> expression . FLDIV expression
    (15) expression -> expression . AND expression
    (16) expression -> expression . OR expression
    (18) expression -> expression . LESST expression
    (19) expression -> expression . GREATERT expression
    (20) expression -> expression . LESSEQ expression
    (21) expression -> expression . GREATEREQ expression
    (22) expression -> expression . EQUALTO expression
    (23) expression -> expression . NOTEQ expression
    (35) expression -> expression . IN list

    AND             reduce using rule 21 (expression -> expression GREATEREQ expression .)
    OR              reduce using rule 21 (expression -> expression GREATEREQ expression .)
    LESST           reduce using rule 21 (expression -> expression GREATEREQ expression .)
    GREATERT        reduce using rule 21 (expression -> expression GREATEREQ expression .)
    LESSEQ          reduce using rule 21 (expression -> expression GREATEREQ expression .)
    GREATEREQ       reduce using rule 21 (expression -> expression GREATEREQ expression .)
    EQUALTO         reduce using rule 21 (expression -> expression GREATEREQ expression .)
    NOTEQ           reduce using rule 21 (expression -> expression GREATEREQ expression .)
    RBRACK          reduce using rule 21 (expression -> expression GREATEREQ expression .)
    COMMA           reduce using rule 21 (expression -> expression GREATEREQ expression .)
    VARNAME         reduce using rule 21 (expression -> expression GREATEREQ expression .)
    LCURL           reduce using rule 21 (expression -> expression GREATEREQ expression .)
    NOT             reduce using rule 21 (expression -> expression GREATEREQ expression .)
    LPAREN          reduce using rule 21 (expression -> expression GREATEREQ expression .)
    NUMBER          reduce using rule 21 (expression -> expression GREATEREQ expression .)
    STRING          reduce using rule 21 (expression -> expression GREATEREQ expression .)
    LBRACK          reduce using rule 21 (expression -> expression GREATEREQ expression .)
    $end            reduce using rule 21 (expression -> expression GREATEREQ expression .)
    RPAREN          reduce using rule 21 (expression -> expression GREATEREQ expression .)
    RCURL           reduce using rule 21 (expression -> expression GREATEREQ expression .)
    SEMI            reduce using rule 21 (expression -> expression GREATEREQ expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 22
    MULT            shift and go to state 32
    DIVIDE          shift and go to state 29
    MODULO          shift and go to state 27
    EXP             shift and go to state 33
    FLDIV           shift and go to state 24
    IN              shift and go to state 28

  ! PLUS            [ reduce using rule 21 (expression -> expression GREATEREQ expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression GREATEREQ expression .) ]
  ! MULT            [ reduce using rule 21 (expression -> expression GREATEREQ expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression GREATEREQ expression .) ]
  ! MODULO          [ reduce using rule 21 (expression -> expression GREATEREQ expression .) ]
  ! EXP             [ reduce using rule 21 (expression -> expression GREATEREQ expression .) ]
  ! FLDIV           [ reduce using rule 21 (expression -> expression GREATEREQ expression .) ]
  ! IN              [ reduce using rule 21 (expression -> expression GREATEREQ expression .) ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 25 ]
  ! LESST           [ shift and go to state 19 ]
  ! GREATERT        [ shift and go to state 21 ]
  ! LESSEQ          [ shift and go to state 26 ]
  ! GREATEREQ       [ shift and go to state 23 ]
  ! EQUALTO         [ shift and go to state 20 ]
  ! NOTEQ           [ shift and go to state 18 ]


state 51

    (14) expression -> expression FLDIV expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULT expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULO expression
    (13) expression -> expression . EXP expression
    (14) expression -> expression . FLDIV expression
    (15) expression -> expression . AND expression
    (16) expression -> expression . OR expression
    (18) expression -> expression . LESST expression
    (19) expression -> expression . GREATERT expression
    (20) expression -> expression . LESSEQ expression
    (21) expression -> expression . GREATEREQ expression
    (22) expression -> expression . EQUALTO expression
    (23) expression -> expression . NOTEQ expression
    (35) expression -> expression . IN list

    PLUS            reduce using rule 14 (expression -> expression FLDIV expression .)
    MINUS           reduce using rule 14 (expression -> expression FLDIV expression .)
    FLDIV           reduce using rule 14 (expression -> expression FLDIV expression .)
    AND             reduce using rule 14 (expression -> expression FLDIV expression .)
    OR              reduce using rule 14 (expression -> expression FLDIV expression .)
    LESST           reduce using rule 14 (expression -> expression FLDIV expression .)
    GREATERT        reduce using rule 14 (expression -> expression FLDIV expression .)
    LESSEQ          reduce using rule 14 (expression -> expression FLDIV expression .)
    GREATEREQ       reduce using rule 14 (expression -> expression FLDIV expression .)
    EQUALTO         reduce using rule 14 (expression -> expression FLDIV expression .)
    NOTEQ           reduce using rule 14 (expression -> expression FLDIV expression .)
    IN              reduce using rule 14 (expression -> expression FLDIV expression .)
    RBRACK          reduce using rule 14 (expression -> expression FLDIV expression .)
    COMMA           reduce using rule 14 (expression -> expression FLDIV expression .)
    VARNAME         reduce using rule 14 (expression -> expression FLDIV expression .)
    LCURL           reduce using rule 14 (expression -> expression FLDIV expression .)
    NOT             reduce using rule 14 (expression -> expression FLDIV expression .)
    LPAREN          reduce using rule 14 (expression -> expression FLDIV expression .)
    NUMBER          reduce using rule 14 (expression -> expression FLDIV expression .)
    STRING          reduce using rule 14 (expression -> expression FLDIV expression .)
    LBRACK          reduce using rule 14 (expression -> expression FLDIV expression .)
    $end            reduce using rule 14 (expression -> expression FLDIV expression .)
    RPAREN          reduce using rule 14 (expression -> expression FLDIV expression .)
    RCURL           reduce using rule 14 (expression -> expression FLDIV expression .)
    SEMI            reduce using rule 14 (expression -> expression FLDIV expression .)
    MULT            shift and go to state 32
    DIVIDE          shift and go to state 29
    MODULO          shift and go to state 27
    EXP             shift and go to state 33

  ! MULT            [ reduce using rule 14 (expression -> expression FLDIV expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression FLDIV expression .) ]
  ! MODULO          [ reduce using rule 14 (expression -> expression FLDIV expression .) ]
  ! EXP             [ reduce using rule 14 (expression -> expression FLDIV expression .) ]
  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 22 ]
  ! FLDIV           [ shift and go to state 24 ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 25 ]
  ! LESST           [ shift and go to state 19 ]
  ! GREATERT        [ shift and go to state 21 ]
  ! LESSEQ          [ shift and go to state 26 ]
  ! GREATEREQ       [ shift and go to state 23 ]
  ! EQUALTO         [ shift and go to state 20 ]
  ! NOTEQ           [ shift and go to state 18 ]
  ! IN              [ shift and go to state 28 ]


state 52

    (16) expression -> expression OR expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULT expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULO expression
    (13) expression -> expression . EXP expression
    (14) expression -> expression . FLDIV expression
    (15) expression -> expression . AND expression
    (16) expression -> expression . OR expression
    (18) expression -> expression . LESST expression
    (19) expression -> expression . GREATERT expression
    (20) expression -> expression . LESSEQ expression
    (21) expression -> expression . GREATEREQ expression
    (22) expression -> expression . EQUALTO expression
    (23) expression -> expression . NOTEQ expression
    (35) expression -> expression . IN list

    OR              reduce using rule 16 (expression -> expression OR expression .)
    RBRACK          reduce using rule 16 (expression -> expression OR expression .)
    COMMA           reduce using rule 16 (expression -> expression OR expression .)
    VARNAME         reduce using rule 16 (expression -> expression OR expression .)
    LCURL           reduce using rule 16 (expression -> expression OR expression .)
    NOT             reduce using rule 16 (expression -> expression OR expression .)
    LPAREN          reduce using rule 16 (expression -> expression OR expression .)
    NUMBER          reduce using rule 16 (expression -> expression OR expression .)
    STRING          reduce using rule 16 (expression -> expression OR expression .)
    LBRACK          reduce using rule 16 (expression -> expression OR expression .)
    $end            reduce using rule 16 (expression -> expression OR expression .)
    RPAREN          reduce using rule 16 (expression -> expression OR expression .)
    RCURL           reduce using rule 16 (expression -> expression OR expression .)
    SEMI            reduce using rule 16 (expression -> expression OR expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 22
    MULT            shift and go to state 32
    DIVIDE          shift and go to state 29
    MODULO          shift and go to state 27
    EXP             shift and go to state 33
    FLDIV           shift and go to state 24
    AND             shift and go to state 30
    LESST           shift and go to state 19
    GREATERT        shift and go to state 21
    LESSEQ          shift and go to state 26
    GREATEREQ       shift and go to state 23
    EQUALTO         shift and go to state 20
    NOTEQ           shift and go to state 18
    IN              shift and go to state 28

  ! PLUS            [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! MULT            [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! MODULO          [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! EXP             [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! FLDIV           [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! LESST           [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! GREATERT        [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! LESSEQ          [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! GREATEREQ       [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! EQUALTO         [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! NOTEQ           [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! IN              [ reduce using rule 16 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 25 ]


state 53

    (20) expression -> expression LESSEQ expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULT expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULO expression
    (13) expression -> expression . EXP expression
    (14) expression -> expression . FLDIV expression
    (15) expression -> expression . AND expression
    (16) expression -> expression . OR expression
    (18) expression -> expression . LESST expression
    (19) expression -> expression . GREATERT expression
    (20) expression -> expression . LESSEQ expression
    (21) expression -> expression . GREATEREQ expression
    (22) expression -> expression . EQUALTO expression
    (23) expression -> expression . NOTEQ expression
    (35) expression -> expression . IN list

    AND             reduce using rule 20 (expression -> expression LESSEQ expression .)
    OR              reduce using rule 20 (expression -> expression LESSEQ expression .)
    LESST           reduce using rule 20 (expression -> expression LESSEQ expression .)
    GREATERT        reduce using rule 20 (expression -> expression LESSEQ expression .)
    LESSEQ          reduce using rule 20 (expression -> expression LESSEQ expression .)
    GREATEREQ       reduce using rule 20 (expression -> expression LESSEQ expression .)
    EQUALTO         reduce using rule 20 (expression -> expression LESSEQ expression .)
    NOTEQ           reduce using rule 20 (expression -> expression LESSEQ expression .)
    RBRACK          reduce using rule 20 (expression -> expression LESSEQ expression .)
    COMMA           reduce using rule 20 (expression -> expression LESSEQ expression .)
    VARNAME         reduce using rule 20 (expression -> expression LESSEQ expression .)
    LCURL           reduce using rule 20 (expression -> expression LESSEQ expression .)
    NOT             reduce using rule 20 (expression -> expression LESSEQ expression .)
    LPAREN          reduce using rule 20 (expression -> expression LESSEQ expression .)
    NUMBER          reduce using rule 20 (expression -> expression LESSEQ expression .)
    STRING          reduce using rule 20 (expression -> expression LESSEQ expression .)
    LBRACK          reduce using rule 20 (expression -> expression LESSEQ expression .)
    $end            reduce using rule 20 (expression -> expression LESSEQ expression .)
    RPAREN          reduce using rule 20 (expression -> expression LESSEQ expression .)
    RCURL           reduce using rule 20 (expression -> expression LESSEQ expression .)
    SEMI            reduce using rule 20 (expression -> expression LESSEQ expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 22
    MULT            shift and go to state 32
    DIVIDE          shift and go to state 29
    MODULO          shift and go to state 27
    EXP             shift and go to state 33
    FLDIV           shift and go to state 24
    IN              shift and go to state 28

  ! PLUS            [ reduce using rule 20 (expression -> expression LESSEQ expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression LESSEQ expression .) ]
  ! MULT            [ reduce using rule 20 (expression -> expression LESSEQ expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression LESSEQ expression .) ]
  ! MODULO          [ reduce using rule 20 (expression -> expression LESSEQ expression .) ]
  ! EXP             [ reduce using rule 20 (expression -> expression LESSEQ expression .) ]
  ! FLDIV           [ reduce using rule 20 (expression -> expression LESSEQ expression .) ]
  ! IN              [ reduce using rule 20 (expression -> expression LESSEQ expression .) ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 25 ]
  ! LESST           [ shift and go to state 19 ]
  ! GREATERT        [ shift and go to state 21 ]
  ! LESSEQ          [ shift and go to state 26 ]
  ! GREATEREQ       [ shift and go to state 23 ]
  ! EQUALTO         [ shift and go to state 20 ]
  ! NOTEQ           [ shift and go to state 18 ]


state 54

    (12) expression -> expression MODULO expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULT expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULO expression
    (13) expression -> expression . EXP expression
    (14) expression -> expression . FLDIV expression
    (15) expression -> expression . AND expression
    (16) expression -> expression . OR expression
    (18) expression -> expression . LESST expression
    (19) expression -> expression . GREATERT expression
    (20) expression -> expression . LESSEQ expression
    (21) expression -> expression . GREATEREQ expression
    (22) expression -> expression . EQUALTO expression
    (23) expression -> expression . NOTEQ expression
    (35) expression -> expression . IN list

    PLUS            reduce using rule 12 (expression -> expression MODULO expression .)
    MINUS           reduce using rule 12 (expression -> expression MODULO expression .)
    MODULO          reduce using rule 12 (expression -> expression MODULO expression .)
    EXP             reduce using rule 12 (expression -> expression MODULO expression .)
    FLDIV           reduce using rule 12 (expression -> expression MODULO expression .)
    AND             reduce using rule 12 (expression -> expression MODULO expression .)
    OR              reduce using rule 12 (expression -> expression MODULO expression .)
    LESST           reduce using rule 12 (expression -> expression MODULO expression .)
    GREATERT        reduce using rule 12 (expression -> expression MODULO expression .)
    LESSEQ          reduce using rule 12 (expression -> expression MODULO expression .)
    GREATEREQ       reduce using rule 12 (expression -> expression MODULO expression .)
    EQUALTO         reduce using rule 12 (expression -> expression MODULO expression .)
    NOTEQ           reduce using rule 12 (expression -> expression MODULO expression .)
    IN              reduce using rule 12 (expression -> expression MODULO expression .)
    RBRACK          reduce using rule 12 (expression -> expression MODULO expression .)
    COMMA           reduce using rule 12 (expression -> expression MODULO expression .)
    VARNAME         reduce using rule 12 (expression -> expression MODULO expression .)
    LCURL           reduce using rule 12 (expression -> expression MODULO expression .)
    NOT             reduce using rule 12 (expression -> expression MODULO expression .)
    LPAREN          reduce using rule 12 (expression -> expression MODULO expression .)
    NUMBER          reduce using rule 12 (expression -> expression MODULO expression .)
    STRING          reduce using rule 12 (expression -> expression MODULO expression .)
    LBRACK          reduce using rule 12 (expression -> expression MODULO expression .)
    $end            reduce using rule 12 (expression -> expression MODULO expression .)
    RPAREN          reduce using rule 12 (expression -> expression MODULO expression .)
    RCURL           reduce using rule 12 (expression -> expression MODULO expression .)
    SEMI            reduce using rule 12 (expression -> expression MODULO expression .)
    MULT            shift and go to state 32
    DIVIDE          shift and go to state 29

  ! MULT            [ reduce using rule 12 (expression -> expression MODULO expression .) ]
  ! DIVIDE          [ reduce using rule 12 (expression -> expression MODULO expression .) ]
  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 22 ]
  ! MODULO          [ shift and go to state 27 ]
  ! EXP             [ shift and go to state 33 ]
  ! FLDIV           [ shift and go to state 24 ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 25 ]
  ! LESST           [ shift and go to state 19 ]
  ! GREATERT        [ shift and go to state 21 ]
  ! LESSEQ          [ shift and go to state 26 ]
  ! GREATEREQ       [ shift and go to state 23 ]
  ! EQUALTO         [ shift and go to state 20 ]
  ! NOTEQ           [ shift and go to state 18 ]
  ! IN              [ shift and go to state 28 ]


state 55

    (35) expression -> expression IN list .

    PLUS            reduce using rule 35 (expression -> expression IN list .)
    MINUS           reduce using rule 35 (expression -> expression IN list .)
    MULT            reduce using rule 35 (expression -> expression IN list .)
    DIVIDE          reduce using rule 35 (expression -> expression IN list .)
    MODULO          reduce using rule 35 (expression -> expression IN list .)
    EXP             reduce using rule 35 (expression -> expression IN list .)
    FLDIV           reduce using rule 35 (expression -> expression IN list .)
    AND             reduce using rule 35 (expression -> expression IN list .)
    OR              reduce using rule 35 (expression -> expression IN list .)
    LESST           reduce using rule 35 (expression -> expression IN list .)
    GREATERT        reduce using rule 35 (expression -> expression IN list .)
    LESSEQ          reduce using rule 35 (expression -> expression IN list .)
    GREATEREQ       reduce using rule 35 (expression -> expression IN list .)
    EQUALTO         reduce using rule 35 (expression -> expression IN list .)
    NOTEQ           reduce using rule 35 (expression -> expression IN list .)
    IN              reduce using rule 35 (expression -> expression IN list .)
    RBRACK          reduce using rule 35 (expression -> expression IN list .)
    COMMA           reduce using rule 35 (expression -> expression IN list .)
    VARNAME         reduce using rule 35 (expression -> expression IN list .)
    LCURL           reduce using rule 35 (expression -> expression IN list .)
    NOT             reduce using rule 35 (expression -> expression IN list .)
    LPAREN          reduce using rule 35 (expression -> expression IN list .)
    NUMBER          reduce using rule 35 (expression -> expression IN list .)
    STRING          reduce using rule 35 (expression -> expression IN list .)
    LBRACK          reduce using rule 35 (expression -> expression IN list .)
    $end            reduce using rule 35 (expression -> expression IN list .)
    RPAREN          reduce using rule 35 (expression -> expression IN list .)
    RCURL           reduce using rule 35 (expression -> expression IN list .)
    SEMI            reduce using rule 35 (expression -> expression IN list .)


state 56

    (11) expression -> expression DIVIDE expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULT expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULO expression
    (13) expression -> expression . EXP expression
    (14) expression -> expression . FLDIV expression
    (15) expression -> expression . AND expression
    (16) expression -> expression . OR expression
    (18) expression -> expression . LESST expression
    (19) expression -> expression . GREATERT expression
    (20) expression -> expression . LESSEQ expression
    (21) expression -> expression . GREATEREQ expression
    (22) expression -> expression . EQUALTO expression
    (23) expression -> expression . NOTEQ expression
    (35) expression -> expression . IN list

    PLUS            reduce using rule 11 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 11 (expression -> expression DIVIDE expression .)
    MULT            reduce using rule 11 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 11 (expression -> expression DIVIDE expression .)
    MODULO          reduce using rule 11 (expression -> expression DIVIDE expression .)
    EXP             reduce using rule 11 (expression -> expression DIVIDE expression .)
    FLDIV           reduce using rule 11 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 11 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 11 (expression -> expression DIVIDE expression .)
    LESST           reduce using rule 11 (expression -> expression DIVIDE expression .)
    GREATERT        reduce using rule 11 (expression -> expression DIVIDE expression .)
    LESSEQ          reduce using rule 11 (expression -> expression DIVIDE expression .)
    GREATEREQ       reduce using rule 11 (expression -> expression DIVIDE expression .)
    EQUALTO         reduce using rule 11 (expression -> expression DIVIDE expression .)
    NOTEQ           reduce using rule 11 (expression -> expression DIVIDE expression .)
    IN              reduce using rule 11 (expression -> expression DIVIDE expression .)
    RBRACK          reduce using rule 11 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 11 (expression -> expression DIVIDE expression .)
    VARNAME         reduce using rule 11 (expression -> expression DIVIDE expression .)
    LCURL           reduce using rule 11 (expression -> expression DIVIDE expression .)
    NOT             reduce using rule 11 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 11 (expression -> expression DIVIDE expression .)
    NUMBER          reduce using rule 11 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 11 (expression -> expression DIVIDE expression .)
    LBRACK          reduce using rule 11 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 11 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 11 (expression -> expression DIVIDE expression .)
    RCURL           reduce using rule 11 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 11 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 22 ]
  ! MULT            [ shift and go to state 32 ]
  ! DIVIDE          [ shift and go to state 29 ]
  ! MODULO          [ shift and go to state 27 ]
  ! EXP             [ shift and go to state 33 ]
  ! FLDIV           [ shift and go to state 24 ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 25 ]
  ! LESST           [ shift and go to state 19 ]
  ! GREATERT        [ shift and go to state 21 ]
  ! LESSEQ          [ shift and go to state 26 ]
  ! GREATEREQ       [ shift and go to state 23 ]
  ! EQUALTO         [ shift and go to state 20 ]
  ! NOTEQ           [ shift and go to state 18 ]
  ! IN              [ shift and go to state 28 ]


state 57

    (15) expression -> expression AND expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULT expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULO expression
    (13) expression -> expression . EXP expression
    (14) expression -> expression . FLDIV expression
    (15) expression -> expression . AND expression
    (16) expression -> expression . OR expression
    (18) expression -> expression . LESST expression
    (19) expression -> expression . GREATERT expression
    (20) expression -> expression . LESSEQ expression
    (21) expression -> expression . GREATEREQ expression
    (22) expression -> expression . EQUALTO expression
    (23) expression -> expression . NOTEQ expression
    (35) expression -> expression . IN list

    AND             reduce using rule 15 (expression -> expression AND expression .)
    OR              reduce using rule 15 (expression -> expression AND expression .)
    RBRACK          reduce using rule 15 (expression -> expression AND expression .)
    COMMA           reduce using rule 15 (expression -> expression AND expression .)
    VARNAME         reduce using rule 15 (expression -> expression AND expression .)
    LCURL           reduce using rule 15 (expression -> expression AND expression .)
    NOT             reduce using rule 15 (expression -> expression AND expression .)
    LPAREN          reduce using rule 15 (expression -> expression AND expression .)
    NUMBER          reduce using rule 15 (expression -> expression AND expression .)
    STRING          reduce using rule 15 (expression -> expression AND expression .)
    LBRACK          reduce using rule 15 (expression -> expression AND expression .)
    $end            reduce using rule 15 (expression -> expression AND expression .)
    RPAREN          reduce using rule 15 (expression -> expression AND expression .)
    RCURL           reduce using rule 15 (expression -> expression AND expression .)
    SEMI            reduce using rule 15 (expression -> expression AND expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 22
    MULT            shift and go to state 32
    DIVIDE          shift and go to state 29
    MODULO          shift and go to state 27
    EXP             shift and go to state 33
    FLDIV           shift and go to state 24
    LESST           shift and go to state 19
    GREATERT        shift and go to state 21
    LESSEQ          shift and go to state 26
    GREATEREQ       shift and go to state 23
    EQUALTO         shift and go to state 20
    NOTEQ           shift and go to state 18
    IN              shift and go to state 28

  ! PLUS            [ reduce using rule 15 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 15 (expression -> expression AND expression .) ]
  ! MULT            [ reduce using rule 15 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression AND expression .) ]
  ! MODULO          [ reduce using rule 15 (expression -> expression AND expression .) ]
  ! EXP             [ reduce using rule 15 (expression -> expression AND expression .) ]
  ! FLDIV           [ reduce using rule 15 (expression -> expression AND expression .) ]
  ! LESST           [ reduce using rule 15 (expression -> expression AND expression .) ]
  ! GREATERT        [ reduce using rule 15 (expression -> expression AND expression .) ]
  ! LESSEQ          [ reduce using rule 15 (expression -> expression AND expression .) ]
  ! GREATEREQ       [ reduce using rule 15 (expression -> expression AND expression .) ]
  ! EQUALTO         [ reduce using rule 15 (expression -> expression AND expression .) ]
  ! NOTEQ           [ reduce using rule 15 (expression -> expression AND expression .) ]
  ! IN              [ reduce using rule 15 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 25 ]


state 58

    (8) expression -> expression PLUS expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULT expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULO expression
    (13) expression -> expression . EXP expression
    (14) expression -> expression . FLDIV expression
    (15) expression -> expression . AND expression
    (16) expression -> expression . OR expression
    (18) expression -> expression . LESST expression
    (19) expression -> expression . GREATERT expression
    (20) expression -> expression . LESSEQ expression
    (21) expression -> expression . GREATEREQ expression
    (22) expression -> expression . EQUALTO expression
    (23) expression -> expression . NOTEQ expression
    (35) expression -> expression . IN list

    PLUS            reduce using rule 8 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 8 (expression -> expression PLUS expression .)
    AND             reduce using rule 8 (expression -> expression PLUS expression .)
    OR              reduce using rule 8 (expression -> expression PLUS expression .)
    LESST           reduce using rule 8 (expression -> expression PLUS expression .)
    GREATERT        reduce using rule 8 (expression -> expression PLUS expression .)
    LESSEQ          reduce using rule 8 (expression -> expression PLUS expression .)
    GREATEREQ       reduce using rule 8 (expression -> expression PLUS expression .)
    EQUALTO         reduce using rule 8 (expression -> expression PLUS expression .)
    NOTEQ           reduce using rule 8 (expression -> expression PLUS expression .)
    IN              reduce using rule 8 (expression -> expression PLUS expression .)
    RBRACK          reduce using rule 8 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 8 (expression -> expression PLUS expression .)
    VARNAME         reduce using rule 8 (expression -> expression PLUS expression .)
    LCURL           reduce using rule 8 (expression -> expression PLUS expression .)
    NOT             reduce using rule 8 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 8 (expression -> expression PLUS expression .)
    NUMBER          reduce using rule 8 (expression -> expression PLUS expression .)
    STRING          reduce using rule 8 (expression -> expression PLUS expression .)
    LBRACK          reduce using rule 8 (expression -> expression PLUS expression .)
    $end            reduce using rule 8 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 8 (expression -> expression PLUS expression .)
    RCURL           reduce using rule 8 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 8 (expression -> expression PLUS expression .)
    MULT            shift and go to state 32
    DIVIDE          shift and go to state 29
    MODULO          shift and go to state 27
    EXP             shift and go to state 33
    FLDIV           shift and go to state 24

  ! MULT            [ reduce using rule 8 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 8 (expression -> expression PLUS expression .) ]
  ! MODULO          [ reduce using rule 8 (expression -> expression PLUS expression .) ]
  ! EXP             [ reduce using rule 8 (expression -> expression PLUS expression .) ]
  ! FLDIV           [ reduce using rule 8 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 22 ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 25 ]
  ! LESST           [ shift and go to state 19 ]
  ! GREATERT        [ shift and go to state 21 ]
  ! LESSEQ          [ shift and go to state 26 ]
  ! GREATEREQ       [ shift and go to state 23 ]
  ! EQUALTO         [ shift and go to state 20 ]
  ! NOTEQ           [ shift and go to state 18 ]
  ! IN              [ shift and go to state 28 ]


state 59

    (10) expression -> expression MULT expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULT expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULO expression
    (13) expression -> expression . EXP expression
    (14) expression -> expression . FLDIV expression
    (15) expression -> expression . AND expression
    (16) expression -> expression . OR expression
    (18) expression -> expression . LESST expression
    (19) expression -> expression . GREATERT expression
    (20) expression -> expression . LESSEQ expression
    (21) expression -> expression . GREATEREQ expression
    (22) expression -> expression . EQUALTO expression
    (23) expression -> expression . NOTEQ expression
    (35) expression -> expression . IN list

    PLUS            reduce using rule 10 (expression -> expression MULT expression .)
    MINUS           reduce using rule 10 (expression -> expression MULT expression .)
    MULT            reduce using rule 10 (expression -> expression MULT expression .)
    DIVIDE          reduce using rule 10 (expression -> expression MULT expression .)
    MODULO          reduce using rule 10 (expression -> expression MULT expression .)
    EXP             reduce using rule 10 (expression -> expression MULT expression .)
    FLDIV           reduce using rule 10 (expression -> expression MULT expression .)
    AND             reduce using rule 10 (expression -> expression MULT expression .)
    OR              reduce using rule 10 (expression -> expression MULT expression .)
    LESST           reduce using rule 10 (expression -> expression MULT expression .)
    GREATERT        reduce using rule 10 (expression -> expression MULT expression .)
    LESSEQ          reduce using rule 10 (expression -> expression MULT expression .)
    GREATEREQ       reduce using rule 10 (expression -> expression MULT expression .)
    EQUALTO         reduce using rule 10 (expression -> expression MULT expression .)
    NOTEQ           reduce using rule 10 (expression -> expression MULT expression .)
    IN              reduce using rule 10 (expression -> expression MULT expression .)
    RBRACK          reduce using rule 10 (expression -> expression MULT expression .)
    COMMA           reduce using rule 10 (expression -> expression MULT expression .)
    VARNAME         reduce using rule 10 (expression -> expression MULT expression .)
    LCURL           reduce using rule 10 (expression -> expression MULT expression .)
    NOT             reduce using rule 10 (expression -> expression MULT expression .)
    LPAREN          reduce using rule 10 (expression -> expression MULT expression .)
    NUMBER          reduce using rule 10 (expression -> expression MULT expression .)
    STRING          reduce using rule 10 (expression -> expression MULT expression .)
    LBRACK          reduce using rule 10 (expression -> expression MULT expression .)
    $end            reduce using rule 10 (expression -> expression MULT expression .)
    RPAREN          reduce using rule 10 (expression -> expression MULT expression .)
    RCURL           reduce using rule 10 (expression -> expression MULT expression .)
    SEMI            reduce using rule 10 (expression -> expression MULT expression .)

  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 22 ]
  ! MULT            [ shift and go to state 32 ]
  ! DIVIDE          [ shift and go to state 29 ]
  ! MODULO          [ shift and go to state 27 ]
  ! EXP             [ shift and go to state 33 ]
  ! FLDIV           [ shift and go to state 24 ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 25 ]
  ! LESST           [ shift and go to state 19 ]
  ! GREATERT        [ shift and go to state 21 ]
  ! LESSEQ          [ shift and go to state 26 ]
  ! GREATEREQ       [ shift and go to state 23 ]
  ! EQUALTO         [ shift and go to state 20 ]
  ! NOTEQ           [ shift and go to state 18 ]
  ! IN              [ shift and go to state 28 ]


state 60

    (13) expression -> expression EXP expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULT expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULO expression
    (13) expression -> expression . EXP expression
    (14) expression -> expression . FLDIV expression
    (15) expression -> expression . AND expression
    (16) expression -> expression . OR expression
    (18) expression -> expression . LESST expression
    (19) expression -> expression . GREATERT expression
    (20) expression -> expression . LESSEQ expression
    (21) expression -> expression . GREATEREQ expression
    (22) expression -> expression . EQUALTO expression
    (23) expression -> expression . NOTEQ expression
    (35) expression -> expression . IN list

    PLUS            reduce using rule 13 (expression -> expression EXP expression .)
    MINUS           reduce using rule 13 (expression -> expression EXP expression .)
    EXP             reduce using rule 13 (expression -> expression EXP expression .)
    FLDIV           reduce using rule 13 (expression -> expression EXP expression .)
    AND             reduce using rule 13 (expression -> expression EXP expression .)
    OR              reduce using rule 13 (expression -> expression EXP expression .)
    LESST           reduce using rule 13 (expression -> expression EXP expression .)
    GREATERT        reduce using rule 13 (expression -> expression EXP expression .)
    LESSEQ          reduce using rule 13 (expression -> expression EXP expression .)
    GREATEREQ       reduce using rule 13 (expression -> expression EXP expression .)
    EQUALTO         reduce using rule 13 (expression -> expression EXP expression .)
    NOTEQ           reduce using rule 13 (expression -> expression EXP expression .)
    IN              reduce using rule 13 (expression -> expression EXP expression .)
    RBRACK          reduce using rule 13 (expression -> expression EXP expression .)
    COMMA           reduce using rule 13 (expression -> expression EXP expression .)
    VARNAME         reduce using rule 13 (expression -> expression EXP expression .)
    LCURL           reduce using rule 13 (expression -> expression EXP expression .)
    NOT             reduce using rule 13 (expression -> expression EXP expression .)
    LPAREN          reduce using rule 13 (expression -> expression EXP expression .)
    NUMBER          reduce using rule 13 (expression -> expression EXP expression .)
    STRING          reduce using rule 13 (expression -> expression EXP expression .)
    LBRACK          reduce using rule 13 (expression -> expression EXP expression .)
    $end            reduce using rule 13 (expression -> expression EXP expression .)
    RPAREN          reduce using rule 13 (expression -> expression EXP expression .)
    RCURL           reduce using rule 13 (expression -> expression EXP expression .)
    SEMI            reduce using rule 13 (expression -> expression EXP expression .)
    MULT            shift and go to state 32
    DIVIDE          shift and go to state 29
    MODULO          shift and go to state 27

  ! MULT            [ reduce using rule 13 (expression -> expression EXP expression .) ]
  ! DIVIDE          [ reduce using rule 13 (expression -> expression EXP expression .) ]
  ! MODULO          [ reduce using rule 13 (expression -> expression EXP expression .) ]
  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 22 ]
  ! EXP             [ shift and go to state 33 ]
  ! FLDIV           [ shift and go to state 24 ]
  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 25 ]
  ! LESST           [ shift and go to state 19 ]
  ! GREATERT        [ shift and go to state 21 ]
  ! LESSEQ          [ shift and go to state 26 ]
  ! GREATEREQ       [ shift and go to state 23 ]
  ! EQUALTO         [ shift and go to state 20 ]
  ! NOTEQ           [ shift and go to state 18 ]
  ! IN              [ shift and go to state 28 ]


state 61

    (28) expression -> string_expression LBRACK expression . RBRACK
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULT expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . MODULO expression
    (13) expression -> expression . EXP expression
    (14) expression -> expression . FLDIV expression
    (15) expression -> expression . AND expression
    (16) expression -> expression . OR expression
    (18) expression -> expression . LESST expression
    (19) expression -> expression . GREATERT expression
    (20) expression -> expression . LESSEQ expression
    (21) expression -> expression . GREATEREQ expression
    (22) expression -> expression . EQUALTO expression
    (23) expression -> expression . NOTEQ expression
    (35) expression -> expression . IN list

    RBRACK          shift and go to state 69
    PLUS            shift and go to state 31
    MINUS           shift and go to state 22
    MULT            shift and go to state 32
    DIVIDE          shift and go to state 29
    MODULO          shift and go to state 27
    EXP             shift and go to state 33
    FLDIV           shift and go to state 24
    AND             shift and go to state 30
    OR              shift and go to state 25
    LESST           shift and go to state 19
    GREATERT        shift and go to state 21
    LESSEQ          shift and go to state 26
    GREATEREQ       shift and go to state 23
    EQUALTO         shift and go to state 20
    NOTEQ           shift and go to state 18
    IN              shift and go to state 28


state 62

    (36) expression -> string_expression IN string_expression .
    (33) string_expression -> string_expression . PLUS string_expression

    MINUS           reduce using rule 36 (expression -> string_expression IN string_expression .)
    MULT            reduce using rule 36 (expression -> string_expression IN string_expression .)
    DIVIDE          reduce using rule 36 (expression -> string_expression IN string_expression .)
    MODULO          reduce using rule 36 (expression -> string_expression IN string_expression .)
    EXP             reduce using rule 36 (expression -> string_expression IN string_expression .)
    FLDIV           reduce using rule 36 (expression -> string_expression IN string_expression .)
    AND             reduce using rule 36 (expression -> string_expression IN string_expression .)
    OR              reduce using rule 36 (expression -> string_expression IN string_expression .)
    LESST           reduce using rule 36 (expression -> string_expression IN string_expression .)
    GREATERT        reduce using rule 36 (expression -> string_expression IN string_expression .)
    LESSEQ          reduce using rule 36 (expression -> string_expression IN string_expression .)
    GREATEREQ       reduce using rule 36 (expression -> string_expression IN string_expression .)
    EQUALTO         reduce using rule 36 (expression -> string_expression IN string_expression .)
    NOTEQ           reduce using rule 36 (expression -> string_expression IN string_expression .)
    IN              reduce using rule 36 (expression -> string_expression IN string_expression .)
    RBRACK          reduce using rule 36 (expression -> string_expression IN string_expression .)
    COMMA           reduce using rule 36 (expression -> string_expression IN string_expression .)
    VARNAME         reduce using rule 36 (expression -> string_expression IN string_expression .)
    LCURL           reduce using rule 36 (expression -> string_expression IN string_expression .)
    NOT             reduce using rule 36 (expression -> string_expression IN string_expression .)
    LPAREN          reduce using rule 36 (expression -> string_expression IN string_expression .)
    NUMBER          reduce using rule 36 (expression -> string_expression IN string_expression .)
    STRING          reduce using rule 36 (expression -> string_expression IN string_expression .)
    LBRACK          reduce using rule 36 (expression -> string_expression IN string_expression .)
    $end            reduce using rule 36 (expression -> string_expression IN string_expression .)
    RPAREN          reduce using rule 36 (expression -> string_expression IN string_expression .)
    RCURL           reduce using rule 36 (expression -> string_expression IN string_expression .)
    SEMI            reduce using rule 36 (expression -> string_expression IN string_expression .)
    PLUS            shift and go to state 36

  ! PLUS            [ reduce using rule 36 (expression -> string_expression IN string_expression .) ]


state 63

    (33) string_expression -> string_expression PLUS string_expression .
    (33) string_expression -> string_expression . PLUS string_expression

    LBRACK          reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)
    IN              reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)
    PLUS            reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)
    MINUS           reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)
    MULT            reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)
    DIVIDE          reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)
    MODULO          reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)
    EXP             reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)
    FLDIV           reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)
    AND             reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)
    OR              reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)
    LESST           reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)
    GREATERT        reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)
    LESSEQ          reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)
    GREATEREQ       reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)
    EQUALTO         reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)
    NOTEQ           reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)
    RBRACK          reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)
    COMMA           reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)
    VARNAME         reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)
    LCURL           reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)
    NOT             reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)
    LPAREN          reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)
    NUMBER          reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)
    STRING          reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)
    RCURL           reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)
    RPAREN          reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)
    $end            reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)
    SEMI            reduce using rule 33 (string_expression -> string_expression PLUS string_expression .)

  ! PLUS            [ shift and go to state 36 ]


state 64

    (31) list_item -> list_item COMMA . list_item
    (31) list_item -> . list_item COMMA list_item
    (32) list_item -> . expression
    (6) expression -> . string_expression
    (7) expression -> . list
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULT expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression MODULO expression
    (13) expression -> . expression EXP expression
    (14) expression -> . expression FLDIV expression
    (15) expression -> . expression AND expression
    (16) expression -> . expression OR expression
    (17) expression -> . NOT expression
    (18) expression -> . expression LESST expression
    (19) expression -> . expression GREATERT expression
    (20) expression -> . expression LESSEQ expression
    (21) expression -> . expression GREATEREQ expression
    (22) expression -> . expression EQUALTO expression
    (23) expression -> . expression NOTEQ expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . VARNAME
    (27) expression -> . list LBRACK expression RBRACK
    (28) expression -> . string_expression LBRACK expression RBRACK
    (35) expression -> . expression IN list
    (36) expression -> . string_expression IN string_expression
    (33) string_expression -> . string_expression PLUS string_expression
    (34) string_expression -> . STRING
    (29) list -> . LBRACK list_item RBRACK
    (30) list -> . LBRACK RBRACK

    NOT             shift and go to state 8
    LPAREN          shift and go to state 2
    NUMBER          shift and go to state 10
    VARNAME         shift and go to state 14
    STRING          shift and go to state 9
    LBRACK          shift and go to state 7

    list                           shift and go to state 1
    expression                     shift and go to state 39
    string_expression              shift and go to state 6
    list_item                      shift and go to state 70

state 65

    (29) list -> LBRACK list_item RBRACK .

    LBRACK          reduce using rule 29 (list -> LBRACK list_item RBRACK .)
    PLUS            reduce using rule 29 (list -> LBRACK list_item RBRACK .)
    MINUS           reduce using rule 29 (list -> LBRACK list_item RBRACK .)
    MULT            reduce using rule 29 (list -> LBRACK list_item RBRACK .)
    DIVIDE          reduce using rule 29 (list -> LBRACK list_item RBRACK .)
    MODULO          reduce using rule 29 (list -> LBRACK list_item RBRACK .)
    EXP             reduce using rule 29 (list -> LBRACK list_item RBRACK .)
    FLDIV           reduce using rule 29 (list -> LBRACK list_item RBRACK .)
    AND             reduce using rule 29 (list -> LBRACK list_item RBRACK .)
    OR              reduce using rule 29 (list -> LBRACK list_item RBRACK .)
    LESST           reduce using rule 29 (list -> LBRACK list_item RBRACK .)
    GREATERT        reduce using rule 29 (list -> LBRACK list_item RBRACK .)
    LESSEQ          reduce using rule 29 (list -> LBRACK list_item RBRACK .)
    GREATEREQ       reduce using rule 29 (list -> LBRACK list_item RBRACK .)
    EQUALTO         reduce using rule 29 (list -> LBRACK list_item RBRACK .)
    NOTEQ           reduce using rule 29 (list -> LBRACK list_item RBRACK .)
    IN              reduce using rule 29 (list -> LBRACK list_item RBRACK .)
    VARNAME         reduce using rule 29 (list -> LBRACK list_item RBRACK .)
    LCURL           reduce using rule 29 (list -> LBRACK list_item RBRACK .)
    NOT             reduce using rule 29 (list -> LBRACK list_item RBRACK .)
    LPAREN          reduce using rule 29 (list -> LBRACK list_item RBRACK .)
    NUMBER          reduce using rule 29 (list -> LBRACK list_item RBRACK .)
    STRING          reduce using rule 29 (list -> LBRACK list_item RBRACK .)
    $end            reduce using rule 29 (list -> LBRACK list_item RBRACK .)
    RPAREN          reduce using rule 29 (list -> LBRACK list_item RBRACK .)
    RCURL           reduce using rule 29 (list -> LBRACK list_item RBRACK .)
    RBRACK          reduce using rule 29 (list -> LBRACK list_item RBRACK .)
    COMMA           reduce using rule 29 (list -> LBRACK list_item RBRACK .)
    SEMI            reduce using rule 29 (list -> LBRACK list_item RBRACK .)


state 66

    (5) statement -> LCURL statements RCURL .

    VARNAME         reduce using rule 5 (statement -> LCURL statements RCURL .)
    LCURL           reduce using rule 5 (statement -> LCURL statements RCURL .)
    NOT             reduce using rule 5 (statement -> LCURL statements RCURL .)
    LPAREN          reduce using rule 5 (statement -> LCURL statements RCURL .)
    NUMBER          reduce using rule 5 (statement -> LCURL statements RCURL .)
    STRING          reduce using rule 5 (statement -> LCURL statements RCURL .)
    LBRACK          reduce using rule 5 (statement -> LCURL statements RCURL .)
    $end            reduce using rule 5 (statement -> LCURL statements RCURL .)
    RCURL           reduce using rule 5 (statement -> LCURL statements RCURL .)


state 67

    (27) expression -> list LBRACK expression RBRACK .

    PLUS            reduce using rule 27 (expression -> list LBRACK expression RBRACK .)
    MINUS           reduce using rule 27 (expression -> list LBRACK expression RBRACK .)
    MULT            reduce using rule 27 (expression -> list LBRACK expression RBRACK .)
    DIVIDE          reduce using rule 27 (expression -> list LBRACK expression RBRACK .)
    MODULO          reduce using rule 27 (expression -> list LBRACK expression RBRACK .)
    EXP             reduce using rule 27 (expression -> list LBRACK expression RBRACK .)
    FLDIV           reduce using rule 27 (expression -> list LBRACK expression RBRACK .)
    AND             reduce using rule 27 (expression -> list LBRACK expression RBRACK .)
    OR              reduce using rule 27 (expression -> list LBRACK expression RBRACK .)
    LESST           reduce using rule 27 (expression -> list LBRACK expression RBRACK .)
    GREATERT        reduce using rule 27 (expression -> list LBRACK expression RBRACK .)
    LESSEQ          reduce using rule 27 (expression -> list LBRACK expression RBRACK .)
    GREATEREQ       reduce using rule 27 (expression -> list LBRACK expression RBRACK .)
    EQUALTO         reduce using rule 27 (expression -> list LBRACK expression RBRACK .)
    NOTEQ           reduce using rule 27 (expression -> list LBRACK expression RBRACK .)
    IN              reduce using rule 27 (expression -> list LBRACK expression RBRACK .)
    RBRACK          reduce using rule 27 (expression -> list LBRACK expression RBRACK .)
    COMMA           reduce using rule 27 (expression -> list LBRACK expression RBRACK .)
    VARNAME         reduce using rule 27 (expression -> list LBRACK expression RBRACK .)
    LCURL           reduce using rule 27 (expression -> list LBRACK expression RBRACK .)
    NOT             reduce using rule 27 (expression -> list LBRACK expression RBRACK .)
    LPAREN          reduce using rule 27 (expression -> list LBRACK expression RBRACK .)
    NUMBER          reduce using rule 27 (expression -> list LBRACK expression RBRACK .)
    STRING          reduce using rule 27 (expression -> list LBRACK expression RBRACK .)
    LBRACK          reduce using rule 27 (expression -> list LBRACK expression RBRACK .)
    $end            reduce using rule 27 (expression -> list LBRACK expression RBRACK .)
    RPAREN          reduce using rule 27 (expression -> list LBRACK expression RBRACK .)
    RCURL           reduce using rule 27 (expression -> list LBRACK expression RBRACK .)
    SEMI            reduce using rule 27 (expression -> list LBRACK expression RBRACK .)


state 68

    (3) statement -> VARNAME EQUALS expression SEMI .

    VARNAME         reduce using rule 3 (statement -> VARNAME EQUALS expression SEMI .)
    LCURL           reduce using rule 3 (statement -> VARNAME EQUALS expression SEMI .)
    NOT             reduce using rule 3 (statement -> VARNAME EQUALS expression SEMI .)
    LPAREN          reduce using rule 3 (statement -> VARNAME EQUALS expression SEMI .)
    NUMBER          reduce using rule 3 (statement -> VARNAME EQUALS expression SEMI .)
    STRING          reduce using rule 3 (statement -> VARNAME EQUALS expression SEMI .)
    LBRACK          reduce using rule 3 (statement -> VARNAME EQUALS expression SEMI .)
    $end            reduce using rule 3 (statement -> VARNAME EQUALS expression SEMI .)
    RCURL           reduce using rule 3 (statement -> VARNAME EQUALS expression SEMI .)


state 69

    (28) expression -> string_expression LBRACK expression RBRACK .

    PLUS            reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)
    MINUS           reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)
    MULT            reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)
    DIVIDE          reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)
    MODULO          reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)
    EXP             reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)
    FLDIV           reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)
    AND             reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)
    OR              reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)
    LESST           reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)
    GREATERT        reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)
    LESSEQ          reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)
    GREATEREQ       reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)
    EQUALTO         reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)
    NOTEQ           reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)
    IN              reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)
    RBRACK          reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)
    COMMA           reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)
    VARNAME         reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)
    LCURL           reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)
    NOT             reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)
    LPAREN          reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)
    NUMBER          reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)
    STRING          reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)
    LBRACK          reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)
    $end            reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)
    RPAREN          reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)
    RCURL           reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)
    SEMI            reduce using rule 28 (expression -> string_expression LBRACK expression RBRACK .)


state 70

    (31) list_item -> list_item COMMA list_item .
    (31) list_item -> list_item . COMMA list_item

  ! shift/reduce conflict for COMMA resolved as shift
    RBRACK          reduce using rule 31 (list_item -> list_item COMMA list_item .)
    COMMA           shift and go to state 64

  ! COMMA           [ reduce using rule 31 (list_item -> list_item COMMA list_item .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LBRACK in state 1 resolved as shift
WARNING: shift/reduce conflict for LBRACK in state 6 resolved as shift
WARNING: shift/reduce conflict for IN in state 6 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 6 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 70 resolved as shift
