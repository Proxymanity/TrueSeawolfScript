Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statement
Rule 2     statements -> statements statement
Rule 3     statement -> VARNAME EQUALS expression SEMI
Rule 4     statement -> PRINT LPAREN statement RPAREN SEMI
Rule 5     statement -> expression
Rule 6     statement -> LCURL statements RCURL
Rule 7     statement -> IF LPAREN statements RPAREN LCURL statements RCURL else
Rule 8     else -> ELSE LCURL statements RCURL
Rule 9     else -> empty
Rule 10    statement -> WHILE LPAREN statements RPAREN LCURL statements RCURL
Rule 11    expression -> string_expression
Rule 12    expression -> list
Rule 13    expression -> expression PLUS expression
Rule 14    expression -> expression MINUS expression
Rule 15    expression -> expression MULT expression
Rule 16    expression -> expression DIVIDE expression
Rule 17    expression -> expression MODULO expression
Rule 18    expression -> expression EXP expression
Rule 19    expression -> expression FLDIV expression
Rule 20    expression -> expression AND expression
Rule 21    expression -> expression OR expression
Rule 22    expression -> NOT expression
Rule 23    expression -> expression LESST expression
Rule 24    expression -> expression GREATERT expression
Rule 25    expression -> expression LESSEQ expression
Rule 26    expression -> expression GREATEREQ expression
Rule 27    expression -> expression EQUALTO expression
Rule 28    expression -> expression NOTEQ expression
Rule 29    expression -> LPAREN expression RPAREN
Rule 30    expression -> NUMBER
Rule 31    expression -> VARNAME
Rule 32    expression -> list LBRACK expression RBRACK
Rule 33    expression -> string_expression LBRACK expression RBRACK
Rule 34    list -> LBRACK list_item RBRACK
Rule 35    list -> LBRACK RBRACK
Rule 36    list_item -> list_item COMMA list_item
Rule 37    list_item -> expression
Rule 38    string_expression -> string_expression PLUS string_expression
Rule 39    string_expression -> STRING
Rule 40    expression -> expression IN list
Rule 41    expression -> string_expression IN string_expression
Rule 42    empty -> <empty>

Terminals, with rules where they appear

AND                  : 20
COMMA                : 36
DIVIDE               : 16
ELSE                 : 8
EQUALS               : 3
EQUALTO              : 27
EXP                  : 18
FLDIV                : 19
GREATEREQ            : 26
GREATERT             : 24
IF                   : 7
IN                   : 40 41
LBRACK               : 32 33 34 35
LCURL                : 6 7 8 10
LESSEQ               : 25
LESST                : 23
LPAREN               : 4 7 10 29
MINUS                : 14
MODULO               : 17
MULT                 : 15
NOT                  : 22
NOTEQ                : 28
NUMBER               : 30
OR                   : 21
PLUS                 : 13 38
PRINT                : 4
RBRACK               : 32 33 34 35
RCURL                : 6 7 8 10
RPAREN               : 4 7 10 29
SEMI                 : 3 4
STRING               : 39
VARNAME              : 3 31
WHILE                : 10
error                : 

Nonterminals, with rules where they appear

else                 : 7
empty                : 9
expression           : 3 5 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 23 23 24 24 25 25 26 26 27 27 28 28 29 32 33 37 40
list                 : 12 32 40
list_item            : 34 36 36
statement            : 1 2 4
statements           : 2 6 7 7 8 10 10 0
string_expression    : 11 33 38 38 41 41

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statement
    (2) statements -> . statements statement
    (3) statement -> . VARNAME EQUALS expression SEMI
    (4) statement -> . PRINT LPAREN statement RPAREN SEMI
    (5) statement -> . expression
    (6) statement -> . LCURL statements RCURL
    (7) statement -> . IF LPAREN statements RPAREN LCURL statements RCURL else
    (10) statement -> . WHILE LPAREN statements RPAREN LCURL statements RCURL
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    VARNAME         shift and go to state 3
    PRINT           shift and go to state 2
    LCURL           shift and go to state 4
    IF              shift and go to state 8
    WHILE           shift and go to state 14
    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 7
    string_expression              shift and go to state 5
    list                           shift and go to state 13
    statements                     shift and go to state 9
    statement                      shift and go to state 10

state 1

    (39) string_expression -> STRING .

    LBRACK          reduce using rule 39 (string_expression -> STRING .)
    IN              reduce using rule 39 (string_expression -> STRING .)
    PLUS            reduce using rule 39 (string_expression -> STRING .)
    MINUS           reduce using rule 39 (string_expression -> STRING .)
    MULT            reduce using rule 39 (string_expression -> STRING .)
    DIVIDE          reduce using rule 39 (string_expression -> STRING .)
    MODULO          reduce using rule 39 (string_expression -> STRING .)
    EXP             reduce using rule 39 (string_expression -> STRING .)
    FLDIV           reduce using rule 39 (string_expression -> STRING .)
    AND             reduce using rule 39 (string_expression -> STRING .)
    OR              reduce using rule 39 (string_expression -> STRING .)
    LESST           reduce using rule 39 (string_expression -> STRING .)
    GREATERT        reduce using rule 39 (string_expression -> STRING .)
    LESSEQ          reduce using rule 39 (string_expression -> STRING .)
    GREATEREQ       reduce using rule 39 (string_expression -> STRING .)
    EQUALTO         reduce using rule 39 (string_expression -> STRING .)
    NOTEQ           reduce using rule 39 (string_expression -> STRING .)
    RPAREN          reduce using rule 39 (string_expression -> STRING .)
    VARNAME         reduce using rule 39 (string_expression -> STRING .)
    PRINT           reduce using rule 39 (string_expression -> STRING .)
    LCURL           reduce using rule 39 (string_expression -> STRING .)
    IF              reduce using rule 39 (string_expression -> STRING .)
    WHILE           reduce using rule 39 (string_expression -> STRING .)
    NOT             reduce using rule 39 (string_expression -> STRING .)
    LPAREN          reduce using rule 39 (string_expression -> STRING .)
    NUMBER          reduce using rule 39 (string_expression -> STRING .)
    STRING          reduce using rule 39 (string_expression -> STRING .)
    $end            reduce using rule 39 (string_expression -> STRING .)
    RCURL           reduce using rule 39 (string_expression -> STRING .)
    RBRACK          reduce using rule 39 (string_expression -> STRING .)
    COMMA           reduce using rule 39 (string_expression -> STRING .)
    SEMI            reduce using rule 39 (string_expression -> STRING .)


state 2

    (4) statement -> PRINT . LPAREN statement RPAREN SEMI

    LPAREN          shift and go to state 16


state 3

    (3) statement -> VARNAME . EQUALS expression SEMI
    (31) expression -> VARNAME .

    EQUALS          shift and go to state 17
    PLUS            reduce using rule 31 (expression -> VARNAME .)
    MINUS           reduce using rule 31 (expression -> VARNAME .)
    MULT            reduce using rule 31 (expression -> VARNAME .)
    DIVIDE          reduce using rule 31 (expression -> VARNAME .)
    MODULO          reduce using rule 31 (expression -> VARNAME .)
    EXP             reduce using rule 31 (expression -> VARNAME .)
    FLDIV           reduce using rule 31 (expression -> VARNAME .)
    AND             reduce using rule 31 (expression -> VARNAME .)
    OR              reduce using rule 31 (expression -> VARNAME .)
    LESST           reduce using rule 31 (expression -> VARNAME .)
    GREATERT        reduce using rule 31 (expression -> VARNAME .)
    LESSEQ          reduce using rule 31 (expression -> VARNAME .)
    GREATEREQ       reduce using rule 31 (expression -> VARNAME .)
    EQUALTO         reduce using rule 31 (expression -> VARNAME .)
    NOTEQ           reduce using rule 31 (expression -> VARNAME .)
    IN              reduce using rule 31 (expression -> VARNAME .)
    RPAREN          reduce using rule 31 (expression -> VARNAME .)
    VARNAME         reduce using rule 31 (expression -> VARNAME .)
    PRINT           reduce using rule 31 (expression -> VARNAME .)
    LCURL           reduce using rule 31 (expression -> VARNAME .)
    IF              reduce using rule 31 (expression -> VARNAME .)
    WHILE           reduce using rule 31 (expression -> VARNAME .)
    NOT             reduce using rule 31 (expression -> VARNAME .)
    LPAREN          reduce using rule 31 (expression -> VARNAME .)
    NUMBER          reduce using rule 31 (expression -> VARNAME .)
    STRING          reduce using rule 31 (expression -> VARNAME .)
    LBRACK          reduce using rule 31 (expression -> VARNAME .)
    $end            reduce using rule 31 (expression -> VARNAME .)
    RCURL           reduce using rule 31 (expression -> VARNAME .)


state 4

    (6) statement -> LCURL . statements RCURL
    (1) statements -> . statement
    (2) statements -> . statements statement
    (3) statement -> . VARNAME EQUALS expression SEMI
    (4) statement -> . PRINT LPAREN statement RPAREN SEMI
    (5) statement -> . expression
    (6) statement -> . LCURL statements RCURL
    (7) statement -> . IF LPAREN statements RPAREN LCURL statements RCURL else
    (10) statement -> . WHILE LPAREN statements RPAREN LCURL statements RCURL
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    VARNAME         shift and go to state 3
    PRINT           shift and go to state 2
    LCURL           shift and go to state 4
    IF              shift and go to state 8
    WHILE           shift and go to state 14
    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 7
    string_expression              shift and go to state 5
    list                           shift and go to state 13
    statements                     shift and go to state 18
    statement                      shift and go to state 10

state 5

    (11) expression -> string_expression .
    (33) expression -> string_expression . LBRACK expression RBRACK
    (41) expression -> string_expression . IN string_expression
    (38) string_expression -> string_expression . PLUS string_expression

  ! shift/reduce conflict for LBRACK resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    MINUS           reduce using rule 11 (expression -> string_expression .)
    MULT            reduce using rule 11 (expression -> string_expression .)
    DIVIDE          reduce using rule 11 (expression -> string_expression .)
    MODULO          reduce using rule 11 (expression -> string_expression .)
    EXP             reduce using rule 11 (expression -> string_expression .)
    FLDIV           reduce using rule 11 (expression -> string_expression .)
    AND             reduce using rule 11 (expression -> string_expression .)
    OR              reduce using rule 11 (expression -> string_expression .)
    LESST           reduce using rule 11 (expression -> string_expression .)
    GREATERT        reduce using rule 11 (expression -> string_expression .)
    LESSEQ          reduce using rule 11 (expression -> string_expression .)
    GREATEREQ       reduce using rule 11 (expression -> string_expression .)
    EQUALTO         reduce using rule 11 (expression -> string_expression .)
    NOTEQ           reduce using rule 11 (expression -> string_expression .)
    RPAREN          reduce using rule 11 (expression -> string_expression .)
    VARNAME         reduce using rule 11 (expression -> string_expression .)
    PRINT           reduce using rule 11 (expression -> string_expression .)
    LCURL           reduce using rule 11 (expression -> string_expression .)
    IF              reduce using rule 11 (expression -> string_expression .)
    WHILE           reduce using rule 11 (expression -> string_expression .)
    NOT             reduce using rule 11 (expression -> string_expression .)
    LPAREN          reduce using rule 11 (expression -> string_expression .)
    NUMBER          reduce using rule 11 (expression -> string_expression .)
    STRING          reduce using rule 11 (expression -> string_expression .)
    $end            reduce using rule 11 (expression -> string_expression .)
    RCURL           reduce using rule 11 (expression -> string_expression .)
    RBRACK          reduce using rule 11 (expression -> string_expression .)
    COMMA           reduce using rule 11 (expression -> string_expression .)
    SEMI            reduce using rule 11 (expression -> string_expression .)
    LBRACK          shift and go to state 20
    IN              shift and go to state 21
    PLUS            shift and go to state 19

  ! PLUS            [ reduce using rule 11 (expression -> string_expression .) ]
  ! IN              [ reduce using rule 11 (expression -> string_expression .) ]
  ! LBRACK          [ reduce using rule 11 (expression -> string_expression .) ]


state 6

    (29) expression -> LPAREN . expression RPAREN
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    VARNAME         shift and go to state 22
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 23
    string_expression              shift and go to state 5
    list                           shift and go to state 13

state 7

    (5) statement -> expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULT expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . MODULO expression
    (18) expression -> expression . EXP expression
    (19) expression -> expression . FLDIV expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (23) expression -> expression . LESST expression
    (24) expression -> expression . GREATERT expression
    (25) expression -> expression . LESSEQ expression
    (26) expression -> expression . GREATEREQ expression
    (27) expression -> expression . EQUALTO expression
    (28) expression -> expression . NOTEQ expression
    (40) expression -> expression . IN list

    RCURL           reduce using rule 5 (statement -> expression .)
    VARNAME         reduce using rule 5 (statement -> expression .)
    PRINT           reduce using rule 5 (statement -> expression .)
    LCURL           reduce using rule 5 (statement -> expression .)
    IF              reduce using rule 5 (statement -> expression .)
    WHILE           reduce using rule 5 (statement -> expression .)
    NOT             reduce using rule 5 (statement -> expression .)
    LPAREN          reduce using rule 5 (statement -> expression .)
    NUMBER          reduce using rule 5 (statement -> expression .)
    STRING          reduce using rule 5 (statement -> expression .)
    LBRACK          reduce using rule 5 (statement -> expression .)
    RPAREN          reduce using rule 5 (statement -> expression .)
    $end            reduce using rule 5 (statement -> expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    MULT            shift and go to state 28
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 32
    EXP             shift and go to state 25
    FLDIV           shift and go to state 39
    AND             shift and go to state 29
    OR              shift and go to state 38
    LESST           shift and go to state 35
    GREATERT        shift and go to state 27
    LESSEQ          shift and go to state 33
    GREATEREQ       shift and go to state 31
    EQUALTO         shift and go to state 37
    NOTEQ           shift and go to state 30
    IN              shift and go to state 34


state 8

    (7) statement -> IF . LPAREN statements RPAREN LCURL statements RCURL else

    LPAREN          shift and go to state 40


state 9

    (0) S' -> statements .
    (2) statements -> statements . statement
    (3) statement -> . VARNAME EQUALS expression SEMI
    (4) statement -> . PRINT LPAREN statement RPAREN SEMI
    (5) statement -> . expression
    (6) statement -> . LCURL statements RCURL
    (7) statement -> . IF LPAREN statements RPAREN LCURL statements RCURL else
    (10) statement -> . WHILE LPAREN statements RPAREN LCURL statements RCURL
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    VARNAME         shift and go to state 3
    PRINT           shift and go to state 2
    LCURL           shift and go to state 4
    IF              shift and go to state 8
    WHILE           shift and go to state 14
    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 7
    string_expression              shift and go to state 5
    list                           shift and go to state 13
    statement                      shift and go to state 41

state 10

    (1) statements -> statement .

    RCURL           reduce using rule 1 (statements -> statement .)
    VARNAME         reduce using rule 1 (statements -> statement .)
    PRINT           reduce using rule 1 (statements -> statement .)
    LCURL           reduce using rule 1 (statements -> statement .)
    IF              reduce using rule 1 (statements -> statement .)
    WHILE           reduce using rule 1 (statements -> statement .)
    NOT             reduce using rule 1 (statements -> statement .)
    LPAREN          reduce using rule 1 (statements -> statement .)
    NUMBER          reduce using rule 1 (statements -> statement .)
    STRING          reduce using rule 1 (statements -> statement .)
    LBRACK          reduce using rule 1 (statements -> statement .)
    RPAREN          reduce using rule 1 (statements -> statement .)
    $end            reduce using rule 1 (statements -> statement .)


state 11

    (34) list -> LBRACK . list_item RBRACK
    (35) list -> LBRACK . RBRACK
    (36) list_item -> . list_item COMMA list_item
    (37) list_item -> . expression
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    RBRACK          shift and go to state 43
    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    VARNAME         shift and go to state 22
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 42
    string_expression              shift and go to state 5
    list_item                      shift and go to state 44
    list                           shift and go to state 13

state 12

    (22) expression -> NOT . expression
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    VARNAME         shift and go to state 22
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 45
    string_expression              shift and go to state 5
    list                           shift and go to state 13

state 13

    (12) expression -> list .
    (32) expression -> list . LBRACK expression RBRACK

  ! shift/reduce conflict for LBRACK resolved as shift
    PLUS            reduce using rule 12 (expression -> list .)
    MINUS           reduce using rule 12 (expression -> list .)
    MULT            reduce using rule 12 (expression -> list .)
    DIVIDE          reduce using rule 12 (expression -> list .)
    MODULO          reduce using rule 12 (expression -> list .)
    EXP             reduce using rule 12 (expression -> list .)
    FLDIV           reduce using rule 12 (expression -> list .)
    AND             reduce using rule 12 (expression -> list .)
    OR              reduce using rule 12 (expression -> list .)
    LESST           reduce using rule 12 (expression -> list .)
    GREATERT        reduce using rule 12 (expression -> list .)
    LESSEQ          reduce using rule 12 (expression -> list .)
    GREATEREQ       reduce using rule 12 (expression -> list .)
    EQUALTO         reduce using rule 12 (expression -> list .)
    NOTEQ           reduce using rule 12 (expression -> list .)
    IN              reduce using rule 12 (expression -> list .)
    RPAREN          reduce using rule 12 (expression -> list .)
    VARNAME         reduce using rule 12 (expression -> list .)
    PRINT           reduce using rule 12 (expression -> list .)
    LCURL           reduce using rule 12 (expression -> list .)
    IF              reduce using rule 12 (expression -> list .)
    WHILE           reduce using rule 12 (expression -> list .)
    NOT             reduce using rule 12 (expression -> list .)
    LPAREN          reduce using rule 12 (expression -> list .)
    NUMBER          reduce using rule 12 (expression -> list .)
    STRING          reduce using rule 12 (expression -> list .)
    $end            reduce using rule 12 (expression -> list .)
    RCURL           reduce using rule 12 (expression -> list .)
    RBRACK          reduce using rule 12 (expression -> list .)
    COMMA           reduce using rule 12 (expression -> list .)
    SEMI            reduce using rule 12 (expression -> list .)
    LBRACK          shift and go to state 46

  ! LBRACK          [ reduce using rule 12 (expression -> list .) ]


state 14

    (10) statement -> WHILE . LPAREN statements RPAREN LCURL statements RCURL

    LPAREN          shift and go to state 47


state 15

    (30) expression -> NUMBER .

    PLUS            reduce using rule 30 (expression -> NUMBER .)
    MINUS           reduce using rule 30 (expression -> NUMBER .)
    MULT            reduce using rule 30 (expression -> NUMBER .)
    DIVIDE          reduce using rule 30 (expression -> NUMBER .)
    MODULO          reduce using rule 30 (expression -> NUMBER .)
    EXP             reduce using rule 30 (expression -> NUMBER .)
    FLDIV           reduce using rule 30 (expression -> NUMBER .)
    AND             reduce using rule 30 (expression -> NUMBER .)
    OR              reduce using rule 30 (expression -> NUMBER .)
    LESST           reduce using rule 30 (expression -> NUMBER .)
    GREATERT        reduce using rule 30 (expression -> NUMBER .)
    LESSEQ          reduce using rule 30 (expression -> NUMBER .)
    GREATEREQ       reduce using rule 30 (expression -> NUMBER .)
    EQUALTO         reduce using rule 30 (expression -> NUMBER .)
    NOTEQ           reduce using rule 30 (expression -> NUMBER .)
    IN              reduce using rule 30 (expression -> NUMBER .)
    RPAREN          reduce using rule 30 (expression -> NUMBER .)
    VARNAME         reduce using rule 30 (expression -> NUMBER .)
    PRINT           reduce using rule 30 (expression -> NUMBER .)
    LCURL           reduce using rule 30 (expression -> NUMBER .)
    IF              reduce using rule 30 (expression -> NUMBER .)
    WHILE           reduce using rule 30 (expression -> NUMBER .)
    NOT             reduce using rule 30 (expression -> NUMBER .)
    LPAREN          reduce using rule 30 (expression -> NUMBER .)
    NUMBER          reduce using rule 30 (expression -> NUMBER .)
    STRING          reduce using rule 30 (expression -> NUMBER .)
    LBRACK          reduce using rule 30 (expression -> NUMBER .)
    $end            reduce using rule 30 (expression -> NUMBER .)
    RCURL           reduce using rule 30 (expression -> NUMBER .)
    RBRACK          reduce using rule 30 (expression -> NUMBER .)
    COMMA           reduce using rule 30 (expression -> NUMBER .)
    SEMI            reduce using rule 30 (expression -> NUMBER .)


state 16

    (4) statement -> PRINT LPAREN . statement RPAREN SEMI
    (3) statement -> . VARNAME EQUALS expression SEMI
    (4) statement -> . PRINT LPAREN statement RPAREN SEMI
    (5) statement -> . expression
    (6) statement -> . LCURL statements RCURL
    (7) statement -> . IF LPAREN statements RPAREN LCURL statements RCURL else
    (10) statement -> . WHILE LPAREN statements RPAREN LCURL statements RCURL
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    VARNAME         shift and go to state 3
    PRINT           shift and go to state 2
    LCURL           shift and go to state 4
    IF              shift and go to state 8
    WHILE           shift and go to state 14
    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 7
    string_expression              shift and go to state 5
    list                           shift and go to state 13
    statement                      shift and go to state 48

state 17

    (3) statement -> VARNAME EQUALS . expression SEMI
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    VARNAME         shift and go to state 22
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 49
    string_expression              shift and go to state 5
    list                           shift and go to state 13

state 18

    (6) statement -> LCURL statements . RCURL
    (2) statements -> statements . statement
    (3) statement -> . VARNAME EQUALS expression SEMI
    (4) statement -> . PRINT LPAREN statement RPAREN SEMI
    (5) statement -> . expression
    (6) statement -> . LCURL statements RCURL
    (7) statement -> . IF LPAREN statements RPAREN LCURL statements RCURL else
    (10) statement -> . WHILE LPAREN statements RPAREN LCURL statements RCURL
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    RCURL           shift and go to state 50
    VARNAME         shift and go to state 3
    PRINT           shift and go to state 2
    LCURL           shift and go to state 4
    IF              shift and go to state 8
    WHILE           shift and go to state 14
    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 7
    string_expression              shift and go to state 5
    list                           shift and go to state 13
    statement                      shift and go to state 41

state 19

    (38) string_expression -> string_expression PLUS . string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING

    STRING          shift and go to state 1

    string_expression              shift and go to state 51

state 20

    (33) expression -> string_expression LBRACK . expression RBRACK
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    VARNAME         shift and go to state 22
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    string_expression              shift and go to state 5
    expression                     shift and go to state 52
    list                           shift and go to state 13

state 21

    (41) expression -> string_expression IN . string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING

    STRING          shift and go to state 1

    string_expression              shift and go to state 53

state 22

    (31) expression -> VARNAME .

    PLUS            reduce using rule 31 (expression -> VARNAME .)
    MINUS           reduce using rule 31 (expression -> VARNAME .)
    MULT            reduce using rule 31 (expression -> VARNAME .)
    DIVIDE          reduce using rule 31 (expression -> VARNAME .)
    MODULO          reduce using rule 31 (expression -> VARNAME .)
    EXP             reduce using rule 31 (expression -> VARNAME .)
    FLDIV           reduce using rule 31 (expression -> VARNAME .)
    AND             reduce using rule 31 (expression -> VARNAME .)
    OR              reduce using rule 31 (expression -> VARNAME .)
    LESST           reduce using rule 31 (expression -> VARNAME .)
    GREATERT        reduce using rule 31 (expression -> VARNAME .)
    LESSEQ          reduce using rule 31 (expression -> VARNAME .)
    GREATEREQ       reduce using rule 31 (expression -> VARNAME .)
    EQUALTO         reduce using rule 31 (expression -> VARNAME .)
    NOTEQ           reduce using rule 31 (expression -> VARNAME .)
    IN              reduce using rule 31 (expression -> VARNAME .)
    VARNAME         reduce using rule 31 (expression -> VARNAME .)
    PRINT           reduce using rule 31 (expression -> VARNAME .)
    LCURL           reduce using rule 31 (expression -> VARNAME .)
    IF              reduce using rule 31 (expression -> VARNAME .)
    WHILE           reduce using rule 31 (expression -> VARNAME .)
    NOT             reduce using rule 31 (expression -> VARNAME .)
    LPAREN          reduce using rule 31 (expression -> VARNAME .)
    NUMBER          reduce using rule 31 (expression -> VARNAME .)
    STRING          reduce using rule 31 (expression -> VARNAME .)
    LBRACK          reduce using rule 31 (expression -> VARNAME .)
    $end            reduce using rule 31 (expression -> VARNAME .)
    RCURL           reduce using rule 31 (expression -> VARNAME .)
    RPAREN          reduce using rule 31 (expression -> VARNAME .)
    RBRACK          reduce using rule 31 (expression -> VARNAME .)
    COMMA           reduce using rule 31 (expression -> VARNAME .)
    SEMI            reduce using rule 31 (expression -> VARNAME .)


state 23

    (29) expression -> LPAREN expression . RPAREN
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULT expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . MODULO expression
    (18) expression -> expression . EXP expression
    (19) expression -> expression . FLDIV expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (23) expression -> expression . LESST expression
    (24) expression -> expression . GREATERT expression
    (25) expression -> expression . LESSEQ expression
    (26) expression -> expression . GREATEREQ expression
    (27) expression -> expression . EQUALTO expression
    (28) expression -> expression . NOTEQ expression
    (40) expression -> expression . IN list

    RPAREN          shift and go to state 54
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    MULT            shift and go to state 28
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 32
    EXP             shift and go to state 25
    FLDIV           shift and go to state 39
    AND             shift and go to state 29
    OR              shift and go to state 38
    LESST           shift and go to state 35
    GREATERT        shift and go to state 27
    LESSEQ          shift and go to state 33
    GREATEREQ       shift and go to state 31
    EQUALTO         shift and go to state 37
    NOTEQ           shift and go to state 30
    IN              shift and go to state 34


state 24

    (13) expression -> expression PLUS . expression
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    VARNAME         shift and go to state 22
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 55
    string_expression              shift and go to state 5
    list                           shift and go to state 13

state 25

    (18) expression -> expression EXP . expression
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    VARNAME         shift and go to state 22
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 56
    string_expression              shift and go to state 5
    list                           shift and go to state 13

state 26

    (14) expression -> expression MINUS . expression
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    VARNAME         shift and go to state 22
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 57
    string_expression              shift and go to state 5
    list                           shift and go to state 13

state 27

    (24) expression -> expression GREATERT . expression
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    VARNAME         shift and go to state 22
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 58
    string_expression              shift and go to state 5
    list                           shift and go to state 13

state 28

    (15) expression -> expression MULT . expression
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    VARNAME         shift and go to state 22
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 59
    string_expression              shift and go to state 5
    list                           shift and go to state 13

state 29

    (20) expression -> expression AND . expression
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    VARNAME         shift and go to state 22
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 60
    string_expression              shift and go to state 5
    list                           shift and go to state 13

state 30

    (28) expression -> expression NOTEQ . expression
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    VARNAME         shift and go to state 22
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 61
    string_expression              shift and go to state 5
    list                           shift and go to state 13

state 31

    (26) expression -> expression GREATEREQ . expression
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    VARNAME         shift and go to state 22
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 62
    string_expression              shift and go to state 5
    list                           shift and go to state 13

state 32

    (17) expression -> expression MODULO . expression
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    VARNAME         shift and go to state 22
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 63
    string_expression              shift and go to state 5
    list                           shift and go to state 13

state 33

    (25) expression -> expression LESSEQ . expression
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    VARNAME         shift and go to state 22
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 64
    string_expression              shift and go to state 5
    list                           shift and go to state 13

state 34

    (40) expression -> expression IN . list
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    LBRACK          shift and go to state 11

    list                           shift and go to state 65

state 35

    (23) expression -> expression LESST . expression
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    VARNAME         shift and go to state 22
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 66
    string_expression              shift and go to state 5
    list                           shift and go to state 13

state 36

    (16) expression -> expression DIVIDE . expression
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    VARNAME         shift and go to state 22
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 67
    string_expression              shift and go to state 5
    list                           shift and go to state 13

state 37

    (27) expression -> expression EQUALTO . expression
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    VARNAME         shift and go to state 22
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 68
    string_expression              shift and go to state 5
    list                           shift and go to state 13

state 38

    (21) expression -> expression OR . expression
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    VARNAME         shift and go to state 22
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 69
    string_expression              shift and go to state 5
    list                           shift and go to state 13

state 39

    (19) expression -> expression FLDIV . expression
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    VARNAME         shift and go to state 22
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 70
    string_expression              shift and go to state 5
    list                           shift and go to state 13

state 40

    (7) statement -> IF LPAREN . statements RPAREN LCURL statements RCURL else
    (1) statements -> . statement
    (2) statements -> . statements statement
    (3) statement -> . VARNAME EQUALS expression SEMI
    (4) statement -> . PRINT LPAREN statement RPAREN SEMI
    (5) statement -> . expression
    (6) statement -> . LCURL statements RCURL
    (7) statement -> . IF LPAREN statements RPAREN LCURL statements RCURL else
    (10) statement -> . WHILE LPAREN statements RPAREN LCURL statements RCURL
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    VARNAME         shift and go to state 3
    PRINT           shift and go to state 2
    LCURL           shift and go to state 4
    IF              shift and go to state 8
    WHILE           shift and go to state 14
    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 7
    string_expression              shift and go to state 5
    list                           shift and go to state 13
    statements                     shift and go to state 71
    statement                      shift and go to state 10

state 41

    (2) statements -> statements statement .

    RCURL           reduce using rule 2 (statements -> statements statement .)
    VARNAME         reduce using rule 2 (statements -> statements statement .)
    PRINT           reduce using rule 2 (statements -> statements statement .)
    LCURL           reduce using rule 2 (statements -> statements statement .)
    IF              reduce using rule 2 (statements -> statements statement .)
    WHILE           reduce using rule 2 (statements -> statements statement .)
    NOT             reduce using rule 2 (statements -> statements statement .)
    LPAREN          reduce using rule 2 (statements -> statements statement .)
    NUMBER          reduce using rule 2 (statements -> statements statement .)
    STRING          reduce using rule 2 (statements -> statements statement .)
    LBRACK          reduce using rule 2 (statements -> statements statement .)
    RPAREN          reduce using rule 2 (statements -> statements statement .)
    $end            reduce using rule 2 (statements -> statements statement .)


state 42

    (37) list_item -> expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULT expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . MODULO expression
    (18) expression -> expression . EXP expression
    (19) expression -> expression . FLDIV expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (23) expression -> expression . LESST expression
    (24) expression -> expression . GREATERT expression
    (25) expression -> expression . LESSEQ expression
    (26) expression -> expression . GREATEREQ expression
    (27) expression -> expression . EQUALTO expression
    (28) expression -> expression . NOTEQ expression
    (40) expression -> expression . IN list

    RBRACK          reduce using rule 37 (list_item -> expression .)
    COMMA           reduce using rule 37 (list_item -> expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    MULT            shift and go to state 28
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 32
    EXP             shift and go to state 25
    FLDIV           shift and go to state 39
    AND             shift and go to state 29
    OR              shift and go to state 38
    LESST           shift and go to state 35
    GREATERT        shift and go to state 27
    LESSEQ          shift and go to state 33
    GREATEREQ       shift and go to state 31
    EQUALTO         shift and go to state 37
    NOTEQ           shift and go to state 30
    IN              shift and go to state 34


state 43

    (35) list -> LBRACK RBRACK .

    LBRACK          reduce using rule 35 (list -> LBRACK RBRACK .)
    RBRACK          reduce using rule 35 (list -> LBRACK RBRACK .)
    PLUS            reduce using rule 35 (list -> LBRACK RBRACK .)
    MINUS           reduce using rule 35 (list -> LBRACK RBRACK .)
    MULT            reduce using rule 35 (list -> LBRACK RBRACK .)
    DIVIDE          reduce using rule 35 (list -> LBRACK RBRACK .)
    MODULO          reduce using rule 35 (list -> LBRACK RBRACK .)
    EXP             reduce using rule 35 (list -> LBRACK RBRACK .)
    FLDIV           reduce using rule 35 (list -> LBRACK RBRACK .)
    AND             reduce using rule 35 (list -> LBRACK RBRACK .)
    OR              reduce using rule 35 (list -> LBRACK RBRACK .)
    LESST           reduce using rule 35 (list -> LBRACK RBRACK .)
    GREATERT        reduce using rule 35 (list -> LBRACK RBRACK .)
    LESSEQ          reduce using rule 35 (list -> LBRACK RBRACK .)
    GREATEREQ       reduce using rule 35 (list -> LBRACK RBRACK .)
    EQUALTO         reduce using rule 35 (list -> LBRACK RBRACK .)
    NOTEQ           reduce using rule 35 (list -> LBRACK RBRACK .)
    IN              reduce using rule 35 (list -> LBRACK RBRACK .)
    RCURL           reduce using rule 35 (list -> LBRACK RBRACK .)
    VARNAME         reduce using rule 35 (list -> LBRACK RBRACK .)
    PRINT           reduce using rule 35 (list -> LBRACK RBRACK .)
    LCURL           reduce using rule 35 (list -> LBRACK RBRACK .)
    IF              reduce using rule 35 (list -> LBRACK RBRACK .)
    WHILE           reduce using rule 35 (list -> LBRACK RBRACK .)
    NOT             reduce using rule 35 (list -> LBRACK RBRACK .)
    LPAREN          reduce using rule 35 (list -> LBRACK RBRACK .)
    NUMBER          reduce using rule 35 (list -> LBRACK RBRACK .)
    STRING          reduce using rule 35 (list -> LBRACK RBRACK .)
    $end            reduce using rule 35 (list -> LBRACK RBRACK .)
    RPAREN          reduce using rule 35 (list -> LBRACK RBRACK .)
    COMMA           reduce using rule 35 (list -> LBRACK RBRACK .)
    SEMI            reduce using rule 35 (list -> LBRACK RBRACK .)


state 44

    (34) list -> LBRACK list_item . RBRACK
    (36) list_item -> list_item . COMMA list_item

    RBRACK          shift and go to state 72
    COMMA           shift and go to state 73


state 45

    (22) expression -> NOT expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULT expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . MODULO expression
    (18) expression -> expression . EXP expression
    (19) expression -> expression . FLDIV expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (23) expression -> expression . LESST expression
    (24) expression -> expression . GREATERT expression
    (25) expression -> expression . LESSEQ expression
    (26) expression -> expression . GREATEREQ expression
    (27) expression -> expression . EQUALTO expression
    (28) expression -> expression . NOTEQ expression
    (40) expression -> expression . IN list

    AND             reduce using rule 22 (expression -> NOT expression .)
    OR              reduce using rule 22 (expression -> NOT expression .)
    RPAREN          reduce using rule 22 (expression -> NOT expression .)
    VARNAME         reduce using rule 22 (expression -> NOT expression .)
    PRINT           reduce using rule 22 (expression -> NOT expression .)
    LCURL           reduce using rule 22 (expression -> NOT expression .)
    IF              reduce using rule 22 (expression -> NOT expression .)
    WHILE           reduce using rule 22 (expression -> NOT expression .)
    NOT             reduce using rule 22 (expression -> NOT expression .)
    LPAREN          reduce using rule 22 (expression -> NOT expression .)
    NUMBER          reduce using rule 22 (expression -> NOT expression .)
    STRING          reduce using rule 22 (expression -> NOT expression .)
    LBRACK          reduce using rule 22 (expression -> NOT expression .)
    $end            reduce using rule 22 (expression -> NOT expression .)
    RCURL           reduce using rule 22 (expression -> NOT expression .)
    RBRACK          reduce using rule 22 (expression -> NOT expression .)
    COMMA           reduce using rule 22 (expression -> NOT expression .)
    SEMI            reduce using rule 22 (expression -> NOT expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    MULT            shift and go to state 28
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 32
    EXP             shift and go to state 25
    FLDIV           shift and go to state 39
    LESST           shift and go to state 35
    GREATERT        shift and go to state 27
    LESSEQ          shift and go to state 33
    GREATEREQ       shift and go to state 31
    EQUALTO         shift and go to state 37
    NOTEQ           shift and go to state 30
    IN              shift and go to state 34

  ! PLUS            [ reduce using rule 22 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> NOT expression .) ]
  ! MULT            [ reduce using rule 22 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> NOT expression .) ]
  ! MODULO          [ reduce using rule 22 (expression -> NOT expression .) ]
  ! EXP             [ reduce using rule 22 (expression -> NOT expression .) ]
  ! FLDIV           [ reduce using rule 22 (expression -> NOT expression .) ]
  ! LESST           [ reduce using rule 22 (expression -> NOT expression .) ]
  ! GREATERT        [ reduce using rule 22 (expression -> NOT expression .) ]
  ! LESSEQ          [ reduce using rule 22 (expression -> NOT expression .) ]
  ! GREATEREQ       [ reduce using rule 22 (expression -> NOT expression .) ]
  ! EQUALTO         [ reduce using rule 22 (expression -> NOT expression .) ]
  ! NOTEQ           [ reduce using rule 22 (expression -> NOT expression .) ]
  ! IN              [ reduce using rule 22 (expression -> NOT expression .) ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 38 ]


state 46

    (32) expression -> list LBRACK . expression RBRACK
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    VARNAME         shift and go to state 22
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 74
    string_expression              shift and go to state 5
    list                           shift and go to state 13

state 47

    (10) statement -> WHILE LPAREN . statements RPAREN LCURL statements RCURL
    (1) statements -> . statement
    (2) statements -> . statements statement
    (3) statement -> . VARNAME EQUALS expression SEMI
    (4) statement -> . PRINT LPAREN statement RPAREN SEMI
    (5) statement -> . expression
    (6) statement -> . LCURL statements RCURL
    (7) statement -> . IF LPAREN statements RPAREN LCURL statements RCURL else
    (10) statement -> . WHILE LPAREN statements RPAREN LCURL statements RCURL
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    VARNAME         shift and go to state 3
    PRINT           shift and go to state 2
    LCURL           shift and go to state 4
    IF              shift and go to state 8
    WHILE           shift and go to state 14
    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 7
    string_expression              shift and go to state 5
    list                           shift and go to state 13
    statements                     shift and go to state 75
    statement                      shift and go to state 10

state 48

    (4) statement -> PRINT LPAREN statement . RPAREN SEMI

    RPAREN          shift and go to state 76


state 49

    (3) statement -> VARNAME EQUALS expression . SEMI
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULT expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . MODULO expression
    (18) expression -> expression . EXP expression
    (19) expression -> expression . FLDIV expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (23) expression -> expression . LESST expression
    (24) expression -> expression . GREATERT expression
    (25) expression -> expression . LESSEQ expression
    (26) expression -> expression . GREATEREQ expression
    (27) expression -> expression . EQUALTO expression
    (28) expression -> expression . NOTEQ expression
    (40) expression -> expression . IN list

    SEMI            shift and go to state 77
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    MULT            shift and go to state 28
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 32
    EXP             shift and go to state 25
    FLDIV           shift and go to state 39
    AND             shift and go to state 29
    OR              shift and go to state 38
    LESST           shift and go to state 35
    GREATERT        shift and go to state 27
    LESSEQ          shift and go to state 33
    GREATEREQ       shift and go to state 31
    EQUALTO         shift and go to state 37
    NOTEQ           shift and go to state 30
    IN              shift and go to state 34


state 50

    (6) statement -> LCURL statements RCURL .

    RCURL           reduce using rule 6 (statement -> LCURL statements RCURL .)
    VARNAME         reduce using rule 6 (statement -> LCURL statements RCURL .)
    PRINT           reduce using rule 6 (statement -> LCURL statements RCURL .)
    LCURL           reduce using rule 6 (statement -> LCURL statements RCURL .)
    IF              reduce using rule 6 (statement -> LCURL statements RCURL .)
    WHILE           reduce using rule 6 (statement -> LCURL statements RCURL .)
    NOT             reduce using rule 6 (statement -> LCURL statements RCURL .)
    LPAREN          reduce using rule 6 (statement -> LCURL statements RCURL .)
    NUMBER          reduce using rule 6 (statement -> LCURL statements RCURL .)
    STRING          reduce using rule 6 (statement -> LCURL statements RCURL .)
    LBRACK          reduce using rule 6 (statement -> LCURL statements RCURL .)
    RPAREN          reduce using rule 6 (statement -> LCURL statements RCURL .)
    $end            reduce using rule 6 (statement -> LCURL statements RCURL .)


state 51

    (38) string_expression -> string_expression PLUS string_expression .
    (38) string_expression -> string_expression . PLUS string_expression

    LBRACK          reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    IN              reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    PLUS            reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    MINUS           reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    MULT            reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    DIVIDE          reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    MODULO          reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    EXP             reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    FLDIV           reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    AND             reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    OR              reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    LESST           reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    GREATERT        reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    LESSEQ          reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    GREATEREQ       reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    EQUALTO         reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    NOTEQ           reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    RPAREN          reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    VARNAME         reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    PRINT           reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    LCURL           reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    IF              reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    WHILE           reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    NOT             reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    LPAREN          reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    NUMBER          reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    STRING          reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    $end            reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    RCURL           reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    RBRACK          reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    COMMA           reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)
    SEMI            reduce using rule 38 (string_expression -> string_expression PLUS string_expression .)

  ! PLUS            [ shift and go to state 19 ]


state 52

    (33) expression -> string_expression LBRACK expression . RBRACK
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULT expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . MODULO expression
    (18) expression -> expression . EXP expression
    (19) expression -> expression . FLDIV expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (23) expression -> expression . LESST expression
    (24) expression -> expression . GREATERT expression
    (25) expression -> expression . LESSEQ expression
    (26) expression -> expression . GREATEREQ expression
    (27) expression -> expression . EQUALTO expression
    (28) expression -> expression . NOTEQ expression
    (40) expression -> expression . IN list

    RBRACK          shift and go to state 78
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    MULT            shift and go to state 28
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 32
    EXP             shift and go to state 25
    FLDIV           shift and go to state 39
    AND             shift and go to state 29
    OR              shift and go to state 38
    LESST           shift and go to state 35
    GREATERT        shift and go to state 27
    LESSEQ          shift and go to state 33
    GREATEREQ       shift and go to state 31
    EQUALTO         shift and go to state 37
    NOTEQ           shift and go to state 30
    IN              shift and go to state 34


state 53

    (41) expression -> string_expression IN string_expression .
    (38) string_expression -> string_expression . PLUS string_expression

    MINUS           reduce using rule 41 (expression -> string_expression IN string_expression .)
    MULT            reduce using rule 41 (expression -> string_expression IN string_expression .)
    DIVIDE          reduce using rule 41 (expression -> string_expression IN string_expression .)
    MODULO          reduce using rule 41 (expression -> string_expression IN string_expression .)
    EXP             reduce using rule 41 (expression -> string_expression IN string_expression .)
    FLDIV           reduce using rule 41 (expression -> string_expression IN string_expression .)
    AND             reduce using rule 41 (expression -> string_expression IN string_expression .)
    OR              reduce using rule 41 (expression -> string_expression IN string_expression .)
    LESST           reduce using rule 41 (expression -> string_expression IN string_expression .)
    GREATERT        reduce using rule 41 (expression -> string_expression IN string_expression .)
    LESSEQ          reduce using rule 41 (expression -> string_expression IN string_expression .)
    GREATEREQ       reduce using rule 41 (expression -> string_expression IN string_expression .)
    EQUALTO         reduce using rule 41 (expression -> string_expression IN string_expression .)
    NOTEQ           reduce using rule 41 (expression -> string_expression IN string_expression .)
    IN              reduce using rule 41 (expression -> string_expression IN string_expression .)
    RPAREN          reduce using rule 41 (expression -> string_expression IN string_expression .)
    VARNAME         reduce using rule 41 (expression -> string_expression IN string_expression .)
    PRINT           reduce using rule 41 (expression -> string_expression IN string_expression .)
    LCURL           reduce using rule 41 (expression -> string_expression IN string_expression .)
    IF              reduce using rule 41 (expression -> string_expression IN string_expression .)
    WHILE           reduce using rule 41 (expression -> string_expression IN string_expression .)
    NOT             reduce using rule 41 (expression -> string_expression IN string_expression .)
    LPAREN          reduce using rule 41 (expression -> string_expression IN string_expression .)
    NUMBER          reduce using rule 41 (expression -> string_expression IN string_expression .)
    STRING          reduce using rule 41 (expression -> string_expression IN string_expression .)
    LBRACK          reduce using rule 41 (expression -> string_expression IN string_expression .)
    $end            reduce using rule 41 (expression -> string_expression IN string_expression .)
    RCURL           reduce using rule 41 (expression -> string_expression IN string_expression .)
    RBRACK          reduce using rule 41 (expression -> string_expression IN string_expression .)
    COMMA           reduce using rule 41 (expression -> string_expression IN string_expression .)
    SEMI            reduce using rule 41 (expression -> string_expression IN string_expression .)
    PLUS            shift and go to state 19

  ! PLUS            [ reduce using rule 41 (expression -> string_expression IN string_expression .) ]


state 54

    (29) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    MULT            reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    MODULO          reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    EXP             reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    FLDIV           reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    LESST           reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    GREATERT        reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    LESSEQ          reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    GREATEREQ       reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    EQUALTO         reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    NOTEQ           reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    IN              reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    VARNAME         reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    LCURL           reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    NOT             reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    STRING          reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    LBRACK          reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    RCURL           reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    RBRACK          reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 29 (expression -> LPAREN expression RPAREN .)


state 55

    (13) expression -> expression PLUS expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULT expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . MODULO expression
    (18) expression -> expression . EXP expression
    (19) expression -> expression . FLDIV expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (23) expression -> expression . LESST expression
    (24) expression -> expression . GREATERT expression
    (25) expression -> expression . LESSEQ expression
    (26) expression -> expression . GREATEREQ expression
    (27) expression -> expression . EQUALTO expression
    (28) expression -> expression . NOTEQ expression
    (40) expression -> expression . IN list

    PLUS            reduce using rule 13 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 13 (expression -> expression PLUS expression .)
    AND             reduce using rule 13 (expression -> expression PLUS expression .)
    OR              reduce using rule 13 (expression -> expression PLUS expression .)
    LESST           reduce using rule 13 (expression -> expression PLUS expression .)
    GREATERT        reduce using rule 13 (expression -> expression PLUS expression .)
    LESSEQ          reduce using rule 13 (expression -> expression PLUS expression .)
    GREATEREQ       reduce using rule 13 (expression -> expression PLUS expression .)
    EQUALTO         reduce using rule 13 (expression -> expression PLUS expression .)
    NOTEQ           reduce using rule 13 (expression -> expression PLUS expression .)
    IN              reduce using rule 13 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 13 (expression -> expression PLUS expression .)
    VARNAME         reduce using rule 13 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 13 (expression -> expression PLUS expression .)
    LCURL           reduce using rule 13 (expression -> expression PLUS expression .)
    IF              reduce using rule 13 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 13 (expression -> expression PLUS expression .)
    NOT             reduce using rule 13 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 13 (expression -> expression PLUS expression .)
    NUMBER          reduce using rule 13 (expression -> expression PLUS expression .)
    STRING          reduce using rule 13 (expression -> expression PLUS expression .)
    LBRACK          reduce using rule 13 (expression -> expression PLUS expression .)
    $end            reduce using rule 13 (expression -> expression PLUS expression .)
    RCURL           reduce using rule 13 (expression -> expression PLUS expression .)
    RBRACK          reduce using rule 13 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 13 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 13 (expression -> expression PLUS expression .)
    MULT            shift and go to state 28
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 32
    EXP             shift and go to state 25
    FLDIV           shift and go to state 39

  ! MULT            [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! MODULO          [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! EXP             [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! FLDIV           [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 26 ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 38 ]
  ! LESST           [ shift and go to state 35 ]
  ! GREATERT        [ shift and go to state 27 ]
  ! LESSEQ          [ shift and go to state 33 ]
  ! GREATEREQ       [ shift and go to state 31 ]
  ! EQUALTO         [ shift and go to state 37 ]
  ! NOTEQ           [ shift and go to state 30 ]
  ! IN              [ shift and go to state 34 ]


state 56

    (18) expression -> expression EXP expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULT expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . MODULO expression
    (18) expression -> expression . EXP expression
    (19) expression -> expression . FLDIV expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (23) expression -> expression . LESST expression
    (24) expression -> expression . GREATERT expression
    (25) expression -> expression . LESSEQ expression
    (26) expression -> expression . GREATEREQ expression
    (27) expression -> expression . EQUALTO expression
    (28) expression -> expression . NOTEQ expression
    (40) expression -> expression . IN list

    PLUS            reduce using rule 18 (expression -> expression EXP expression .)
    MINUS           reduce using rule 18 (expression -> expression EXP expression .)
    EXP             reduce using rule 18 (expression -> expression EXP expression .)
    FLDIV           reduce using rule 18 (expression -> expression EXP expression .)
    AND             reduce using rule 18 (expression -> expression EXP expression .)
    OR              reduce using rule 18 (expression -> expression EXP expression .)
    LESST           reduce using rule 18 (expression -> expression EXP expression .)
    GREATERT        reduce using rule 18 (expression -> expression EXP expression .)
    LESSEQ          reduce using rule 18 (expression -> expression EXP expression .)
    GREATEREQ       reduce using rule 18 (expression -> expression EXP expression .)
    EQUALTO         reduce using rule 18 (expression -> expression EXP expression .)
    NOTEQ           reduce using rule 18 (expression -> expression EXP expression .)
    IN              reduce using rule 18 (expression -> expression EXP expression .)
    RPAREN          reduce using rule 18 (expression -> expression EXP expression .)
    VARNAME         reduce using rule 18 (expression -> expression EXP expression .)
    PRINT           reduce using rule 18 (expression -> expression EXP expression .)
    LCURL           reduce using rule 18 (expression -> expression EXP expression .)
    IF              reduce using rule 18 (expression -> expression EXP expression .)
    WHILE           reduce using rule 18 (expression -> expression EXP expression .)
    NOT             reduce using rule 18 (expression -> expression EXP expression .)
    LPAREN          reduce using rule 18 (expression -> expression EXP expression .)
    NUMBER          reduce using rule 18 (expression -> expression EXP expression .)
    STRING          reduce using rule 18 (expression -> expression EXP expression .)
    LBRACK          reduce using rule 18 (expression -> expression EXP expression .)
    $end            reduce using rule 18 (expression -> expression EXP expression .)
    RCURL           reduce using rule 18 (expression -> expression EXP expression .)
    RBRACK          reduce using rule 18 (expression -> expression EXP expression .)
    COMMA           reduce using rule 18 (expression -> expression EXP expression .)
    SEMI            reduce using rule 18 (expression -> expression EXP expression .)
    MULT            shift and go to state 28
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 32

  ! MULT            [ reduce using rule 18 (expression -> expression EXP expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression EXP expression .) ]
  ! MODULO          [ reduce using rule 18 (expression -> expression EXP expression .) ]
  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 26 ]
  ! EXP             [ shift and go to state 25 ]
  ! FLDIV           [ shift and go to state 39 ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 38 ]
  ! LESST           [ shift and go to state 35 ]
  ! GREATERT        [ shift and go to state 27 ]
  ! LESSEQ          [ shift and go to state 33 ]
  ! GREATEREQ       [ shift and go to state 31 ]
  ! EQUALTO         [ shift and go to state 37 ]
  ! NOTEQ           [ shift and go to state 30 ]
  ! IN              [ shift and go to state 34 ]


state 57

    (14) expression -> expression MINUS expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULT expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . MODULO expression
    (18) expression -> expression . EXP expression
    (19) expression -> expression . FLDIV expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (23) expression -> expression . LESST expression
    (24) expression -> expression . GREATERT expression
    (25) expression -> expression . LESSEQ expression
    (26) expression -> expression . GREATEREQ expression
    (27) expression -> expression . EQUALTO expression
    (28) expression -> expression . NOTEQ expression
    (40) expression -> expression . IN list

    PLUS            reduce using rule 14 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 14 (expression -> expression MINUS expression .)
    AND             reduce using rule 14 (expression -> expression MINUS expression .)
    OR              reduce using rule 14 (expression -> expression MINUS expression .)
    LESST           reduce using rule 14 (expression -> expression MINUS expression .)
    GREATERT        reduce using rule 14 (expression -> expression MINUS expression .)
    LESSEQ          reduce using rule 14 (expression -> expression MINUS expression .)
    GREATEREQ       reduce using rule 14 (expression -> expression MINUS expression .)
    EQUALTO         reduce using rule 14 (expression -> expression MINUS expression .)
    NOTEQ           reduce using rule 14 (expression -> expression MINUS expression .)
    IN              reduce using rule 14 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 14 (expression -> expression MINUS expression .)
    VARNAME         reduce using rule 14 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 14 (expression -> expression MINUS expression .)
    LCURL           reduce using rule 14 (expression -> expression MINUS expression .)
    IF              reduce using rule 14 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 14 (expression -> expression MINUS expression .)
    NOT             reduce using rule 14 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 14 (expression -> expression MINUS expression .)
    NUMBER          reduce using rule 14 (expression -> expression MINUS expression .)
    STRING          reduce using rule 14 (expression -> expression MINUS expression .)
    LBRACK          reduce using rule 14 (expression -> expression MINUS expression .)
    $end            reduce using rule 14 (expression -> expression MINUS expression .)
    RCURL           reduce using rule 14 (expression -> expression MINUS expression .)
    RBRACK          reduce using rule 14 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 14 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 14 (expression -> expression MINUS expression .)
    MULT            shift and go to state 28
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 32
    EXP             shift and go to state 25
    FLDIV           shift and go to state 39

  ! MULT            [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! MODULO          [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! EXP             [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! FLDIV           [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 26 ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 38 ]
  ! LESST           [ shift and go to state 35 ]
  ! GREATERT        [ shift and go to state 27 ]
  ! LESSEQ          [ shift and go to state 33 ]
  ! GREATEREQ       [ shift and go to state 31 ]
  ! EQUALTO         [ shift and go to state 37 ]
  ! NOTEQ           [ shift and go to state 30 ]
  ! IN              [ shift and go to state 34 ]


state 58

    (24) expression -> expression GREATERT expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULT expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . MODULO expression
    (18) expression -> expression . EXP expression
    (19) expression -> expression . FLDIV expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (23) expression -> expression . LESST expression
    (24) expression -> expression . GREATERT expression
    (25) expression -> expression . LESSEQ expression
    (26) expression -> expression . GREATEREQ expression
    (27) expression -> expression . EQUALTO expression
    (28) expression -> expression . NOTEQ expression
    (40) expression -> expression . IN list

    AND             reduce using rule 24 (expression -> expression GREATERT expression .)
    OR              reduce using rule 24 (expression -> expression GREATERT expression .)
    LESST           reduce using rule 24 (expression -> expression GREATERT expression .)
    GREATERT        reduce using rule 24 (expression -> expression GREATERT expression .)
    LESSEQ          reduce using rule 24 (expression -> expression GREATERT expression .)
    GREATEREQ       reduce using rule 24 (expression -> expression GREATERT expression .)
    EQUALTO         reduce using rule 24 (expression -> expression GREATERT expression .)
    NOTEQ           reduce using rule 24 (expression -> expression GREATERT expression .)
    RPAREN          reduce using rule 24 (expression -> expression GREATERT expression .)
    VARNAME         reduce using rule 24 (expression -> expression GREATERT expression .)
    PRINT           reduce using rule 24 (expression -> expression GREATERT expression .)
    LCURL           reduce using rule 24 (expression -> expression GREATERT expression .)
    IF              reduce using rule 24 (expression -> expression GREATERT expression .)
    WHILE           reduce using rule 24 (expression -> expression GREATERT expression .)
    NOT             reduce using rule 24 (expression -> expression GREATERT expression .)
    LPAREN          reduce using rule 24 (expression -> expression GREATERT expression .)
    NUMBER          reduce using rule 24 (expression -> expression GREATERT expression .)
    STRING          reduce using rule 24 (expression -> expression GREATERT expression .)
    LBRACK          reduce using rule 24 (expression -> expression GREATERT expression .)
    $end            reduce using rule 24 (expression -> expression GREATERT expression .)
    RCURL           reduce using rule 24 (expression -> expression GREATERT expression .)
    RBRACK          reduce using rule 24 (expression -> expression GREATERT expression .)
    COMMA           reduce using rule 24 (expression -> expression GREATERT expression .)
    SEMI            reduce using rule 24 (expression -> expression GREATERT expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    MULT            shift and go to state 28
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 32
    EXP             shift and go to state 25
    FLDIV           shift and go to state 39
    IN              shift and go to state 34

  ! PLUS            [ reduce using rule 24 (expression -> expression GREATERT expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> expression GREATERT expression .) ]
  ! MULT            [ reduce using rule 24 (expression -> expression GREATERT expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression GREATERT expression .) ]
  ! MODULO          [ reduce using rule 24 (expression -> expression GREATERT expression .) ]
  ! EXP             [ reduce using rule 24 (expression -> expression GREATERT expression .) ]
  ! FLDIV           [ reduce using rule 24 (expression -> expression GREATERT expression .) ]
  ! IN              [ reduce using rule 24 (expression -> expression GREATERT expression .) ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 38 ]
  ! LESST           [ shift and go to state 35 ]
  ! GREATERT        [ shift and go to state 27 ]
  ! LESSEQ          [ shift and go to state 33 ]
  ! GREATEREQ       [ shift and go to state 31 ]
  ! EQUALTO         [ shift and go to state 37 ]
  ! NOTEQ           [ shift and go to state 30 ]


state 59

    (15) expression -> expression MULT expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULT expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . MODULO expression
    (18) expression -> expression . EXP expression
    (19) expression -> expression . FLDIV expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (23) expression -> expression . LESST expression
    (24) expression -> expression . GREATERT expression
    (25) expression -> expression . LESSEQ expression
    (26) expression -> expression . GREATEREQ expression
    (27) expression -> expression . EQUALTO expression
    (28) expression -> expression . NOTEQ expression
    (40) expression -> expression . IN list

    PLUS            reduce using rule 15 (expression -> expression MULT expression .)
    MINUS           reduce using rule 15 (expression -> expression MULT expression .)
    MULT            reduce using rule 15 (expression -> expression MULT expression .)
    DIVIDE          reduce using rule 15 (expression -> expression MULT expression .)
    MODULO          reduce using rule 15 (expression -> expression MULT expression .)
    EXP             reduce using rule 15 (expression -> expression MULT expression .)
    FLDIV           reduce using rule 15 (expression -> expression MULT expression .)
    AND             reduce using rule 15 (expression -> expression MULT expression .)
    OR              reduce using rule 15 (expression -> expression MULT expression .)
    LESST           reduce using rule 15 (expression -> expression MULT expression .)
    GREATERT        reduce using rule 15 (expression -> expression MULT expression .)
    LESSEQ          reduce using rule 15 (expression -> expression MULT expression .)
    GREATEREQ       reduce using rule 15 (expression -> expression MULT expression .)
    EQUALTO         reduce using rule 15 (expression -> expression MULT expression .)
    NOTEQ           reduce using rule 15 (expression -> expression MULT expression .)
    IN              reduce using rule 15 (expression -> expression MULT expression .)
    RPAREN          reduce using rule 15 (expression -> expression MULT expression .)
    VARNAME         reduce using rule 15 (expression -> expression MULT expression .)
    PRINT           reduce using rule 15 (expression -> expression MULT expression .)
    LCURL           reduce using rule 15 (expression -> expression MULT expression .)
    IF              reduce using rule 15 (expression -> expression MULT expression .)
    WHILE           reduce using rule 15 (expression -> expression MULT expression .)
    NOT             reduce using rule 15 (expression -> expression MULT expression .)
    LPAREN          reduce using rule 15 (expression -> expression MULT expression .)
    NUMBER          reduce using rule 15 (expression -> expression MULT expression .)
    STRING          reduce using rule 15 (expression -> expression MULT expression .)
    LBRACK          reduce using rule 15 (expression -> expression MULT expression .)
    $end            reduce using rule 15 (expression -> expression MULT expression .)
    RCURL           reduce using rule 15 (expression -> expression MULT expression .)
    RBRACK          reduce using rule 15 (expression -> expression MULT expression .)
    COMMA           reduce using rule 15 (expression -> expression MULT expression .)
    SEMI            reduce using rule 15 (expression -> expression MULT expression .)

  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 26 ]
  ! MULT            [ shift and go to state 28 ]
  ! DIVIDE          [ shift and go to state 36 ]
  ! MODULO          [ shift and go to state 32 ]
  ! EXP             [ shift and go to state 25 ]
  ! FLDIV           [ shift and go to state 39 ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 38 ]
  ! LESST           [ shift and go to state 35 ]
  ! GREATERT        [ shift and go to state 27 ]
  ! LESSEQ          [ shift and go to state 33 ]
  ! GREATEREQ       [ shift and go to state 31 ]
  ! EQUALTO         [ shift and go to state 37 ]
  ! NOTEQ           [ shift and go to state 30 ]
  ! IN              [ shift and go to state 34 ]


state 60

    (20) expression -> expression AND expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULT expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . MODULO expression
    (18) expression -> expression . EXP expression
    (19) expression -> expression . FLDIV expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (23) expression -> expression . LESST expression
    (24) expression -> expression . GREATERT expression
    (25) expression -> expression . LESSEQ expression
    (26) expression -> expression . GREATEREQ expression
    (27) expression -> expression . EQUALTO expression
    (28) expression -> expression . NOTEQ expression
    (40) expression -> expression . IN list

    AND             reduce using rule 20 (expression -> expression AND expression .)
    OR              reduce using rule 20 (expression -> expression AND expression .)
    RPAREN          reduce using rule 20 (expression -> expression AND expression .)
    VARNAME         reduce using rule 20 (expression -> expression AND expression .)
    PRINT           reduce using rule 20 (expression -> expression AND expression .)
    LCURL           reduce using rule 20 (expression -> expression AND expression .)
    IF              reduce using rule 20 (expression -> expression AND expression .)
    WHILE           reduce using rule 20 (expression -> expression AND expression .)
    NOT             reduce using rule 20 (expression -> expression AND expression .)
    LPAREN          reduce using rule 20 (expression -> expression AND expression .)
    NUMBER          reduce using rule 20 (expression -> expression AND expression .)
    STRING          reduce using rule 20 (expression -> expression AND expression .)
    LBRACK          reduce using rule 20 (expression -> expression AND expression .)
    $end            reduce using rule 20 (expression -> expression AND expression .)
    RCURL           reduce using rule 20 (expression -> expression AND expression .)
    RBRACK          reduce using rule 20 (expression -> expression AND expression .)
    COMMA           reduce using rule 20 (expression -> expression AND expression .)
    SEMI            reduce using rule 20 (expression -> expression AND expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    MULT            shift and go to state 28
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 32
    EXP             shift and go to state 25
    FLDIV           shift and go to state 39
    LESST           shift and go to state 35
    GREATERT        shift and go to state 27
    LESSEQ          shift and go to state 33
    GREATEREQ       shift and go to state 31
    EQUALTO         shift and go to state 37
    NOTEQ           shift and go to state 30
    IN              shift and go to state 34

  ! PLUS            [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! MULT            [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! MODULO          [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! EXP             [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! FLDIV           [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! LESST           [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! GREATERT        [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! LESSEQ          [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! GREATEREQ       [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! EQUALTO         [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! NOTEQ           [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! IN              [ reduce using rule 20 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 38 ]


state 61

    (28) expression -> expression NOTEQ expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULT expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . MODULO expression
    (18) expression -> expression . EXP expression
    (19) expression -> expression . FLDIV expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (23) expression -> expression . LESST expression
    (24) expression -> expression . GREATERT expression
    (25) expression -> expression . LESSEQ expression
    (26) expression -> expression . GREATEREQ expression
    (27) expression -> expression . EQUALTO expression
    (28) expression -> expression . NOTEQ expression
    (40) expression -> expression . IN list

    AND             reduce using rule 28 (expression -> expression NOTEQ expression .)
    OR              reduce using rule 28 (expression -> expression NOTEQ expression .)
    LESST           reduce using rule 28 (expression -> expression NOTEQ expression .)
    GREATERT        reduce using rule 28 (expression -> expression NOTEQ expression .)
    LESSEQ          reduce using rule 28 (expression -> expression NOTEQ expression .)
    GREATEREQ       reduce using rule 28 (expression -> expression NOTEQ expression .)
    EQUALTO         reduce using rule 28 (expression -> expression NOTEQ expression .)
    NOTEQ           reduce using rule 28 (expression -> expression NOTEQ expression .)
    RPAREN          reduce using rule 28 (expression -> expression NOTEQ expression .)
    VARNAME         reduce using rule 28 (expression -> expression NOTEQ expression .)
    PRINT           reduce using rule 28 (expression -> expression NOTEQ expression .)
    LCURL           reduce using rule 28 (expression -> expression NOTEQ expression .)
    IF              reduce using rule 28 (expression -> expression NOTEQ expression .)
    WHILE           reduce using rule 28 (expression -> expression NOTEQ expression .)
    NOT             reduce using rule 28 (expression -> expression NOTEQ expression .)
    LPAREN          reduce using rule 28 (expression -> expression NOTEQ expression .)
    NUMBER          reduce using rule 28 (expression -> expression NOTEQ expression .)
    STRING          reduce using rule 28 (expression -> expression NOTEQ expression .)
    LBRACK          reduce using rule 28 (expression -> expression NOTEQ expression .)
    $end            reduce using rule 28 (expression -> expression NOTEQ expression .)
    RCURL           reduce using rule 28 (expression -> expression NOTEQ expression .)
    RBRACK          reduce using rule 28 (expression -> expression NOTEQ expression .)
    COMMA           reduce using rule 28 (expression -> expression NOTEQ expression .)
    SEMI            reduce using rule 28 (expression -> expression NOTEQ expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    MULT            shift and go to state 28
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 32
    EXP             shift and go to state 25
    FLDIV           shift and go to state 39
    IN              shift and go to state 34

  ! PLUS            [ reduce using rule 28 (expression -> expression NOTEQ expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression NOTEQ expression .) ]
  ! MULT            [ reduce using rule 28 (expression -> expression NOTEQ expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression NOTEQ expression .) ]
  ! MODULO          [ reduce using rule 28 (expression -> expression NOTEQ expression .) ]
  ! EXP             [ reduce using rule 28 (expression -> expression NOTEQ expression .) ]
  ! FLDIV           [ reduce using rule 28 (expression -> expression NOTEQ expression .) ]
  ! IN              [ reduce using rule 28 (expression -> expression NOTEQ expression .) ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 38 ]
  ! LESST           [ shift and go to state 35 ]
  ! GREATERT        [ shift and go to state 27 ]
  ! LESSEQ          [ shift and go to state 33 ]
  ! GREATEREQ       [ shift and go to state 31 ]
  ! EQUALTO         [ shift and go to state 37 ]
  ! NOTEQ           [ shift and go to state 30 ]


state 62

    (26) expression -> expression GREATEREQ expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULT expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . MODULO expression
    (18) expression -> expression . EXP expression
    (19) expression -> expression . FLDIV expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (23) expression -> expression . LESST expression
    (24) expression -> expression . GREATERT expression
    (25) expression -> expression . LESSEQ expression
    (26) expression -> expression . GREATEREQ expression
    (27) expression -> expression . EQUALTO expression
    (28) expression -> expression . NOTEQ expression
    (40) expression -> expression . IN list

    AND             reduce using rule 26 (expression -> expression GREATEREQ expression .)
    OR              reduce using rule 26 (expression -> expression GREATEREQ expression .)
    LESST           reduce using rule 26 (expression -> expression GREATEREQ expression .)
    GREATERT        reduce using rule 26 (expression -> expression GREATEREQ expression .)
    LESSEQ          reduce using rule 26 (expression -> expression GREATEREQ expression .)
    GREATEREQ       reduce using rule 26 (expression -> expression GREATEREQ expression .)
    EQUALTO         reduce using rule 26 (expression -> expression GREATEREQ expression .)
    NOTEQ           reduce using rule 26 (expression -> expression GREATEREQ expression .)
    RPAREN          reduce using rule 26 (expression -> expression GREATEREQ expression .)
    VARNAME         reduce using rule 26 (expression -> expression GREATEREQ expression .)
    PRINT           reduce using rule 26 (expression -> expression GREATEREQ expression .)
    LCURL           reduce using rule 26 (expression -> expression GREATEREQ expression .)
    IF              reduce using rule 26 (expression -> expression GREATEREQ expression .)
    WHILE           reduce using rule 26 (expression -> expression GREATEREQ expression .)
    NOT             reduce using rule 26 (expression -> expression GREATEREQ expression .)
    LPAREN          reduce using rule 26 (expression -> expression GREATEREQ expression .)
    NUMBER          reduce using rule 26 (expression -> expression GREATEREQ expression .)
    STRING          reduce using rule 26 (expression -> expression GREATEREQ expression .)
    LBRACK          reduce using rule 26 (expression -> expression GREATEREQ expression .)
    $end            reduce using rule 26 (expression -> expression GREATEREQ expression .)
    RCURL           reduce using rule 26 (expression -> expression GREATEREQ expression .)
    RBRACK          reduce using rule 26 (expression -> expression GREATEREQ expression .)
    COMMA           reduce using rule 26 (expression -> expression GREATEREQ expression .)
    SEMI            reduce using rule 26 (expression -> expression GREATEREQ expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    MULT            shift and go to state 28
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 32
    EXP             shift and go to state 25
    FLDIV           shift and go to state 39
    IN              shift and go to state 34

  ! PLUS            [ reduce using rule 26 (expression -> expression GREATEREQ expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression GREATEREQ expression .) ]
  ! MULT            [ reduce using rule 26 (expression -> expression GREATEREQ expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression GREATEREQ expression .) ]
  ! MODULO          [ reduce using rule 26 (expression -> expression GREATEREQ expression .) ]
  ! EXP             [ reduce using rule 26 (expression -> expression GREATEREQ expression .) ]
  ! FLDIV           [ reduce using rule 26 (expression -> expression GREATEREQ expression .) ]
  ! IN              [ reduce using rule 26 (expression -> expression GREATEREQ expression .) ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 38 ]
  ! LESST           [ shift and go to state 35 ]
  ! GREATERT        [ shift and go to state 27 ]
  ! LESSEQ          [ shift and go to state 33 ]
  ! GREATEREQ       [ shift and go to state 31 ]
  ! EQUALTO         [ shift and go to state 37 ]
  ! NOTEQ           [ shift and go to state 30 ]


state 63

    (17) expression -> expression MODULO expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULT expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . MODULO expression
    (18) expression -> expression . EXP expression
    (19) expression -> expression . FLDIV expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (23) expression -> expression . LESST expression
    (24) expression -> expression . GREATERT expression
    (25) expression -> expression . LESSEQ expression
    (26) expression -> expression . GREATEREQ expression
    (27) expression -> expression . EQUALTO expression
    (28) expression -> expression . NOTEQ expression
    (40) expression -> expression . IN list

    PLUS            reduce using rule 17 (expression -> expression MODULO expression .)
    MINUS           reduce using rule 17 (expression -> expression MODULO expression .)
    MODULO          reduce using rule 17 (expression -> expression MODULO expression .)
    EXP             reduce using rule 17 (expression -> expression MODULO expression .)
    FLDIV           reduce using rule 17 (expression -> expression MODULO expression .)
    AND             reduce using rule 17 (expression -> expression MODULO expression .)
    OR              reduce using rule 17 (expression -> expression MODULO expression .)
    LESST           reduce using rule 17 (expression -> expression MODULO expression .)
    GREATERT        reduce using rule 17 (expression -> expression MODULO expression .)
    LESSEQ          reduce using rule 17 (expression -> expression MODULO expression .)
    GREATEREQ       reduce using rule 17 (expression -> expression MODULO expression .)
    EQUALTO         reduce using rule 17 (expression -> expression MODULO expression .)
    NOTEQ           reduce using rule 17 (expression -> expression MODULO expression .)
    IN              reduce using rule 17 (expression -> expression MODULO expression .)
    RPAREN          reduce using rule 17 (expression -> expression MODULO expression .)
    VARNAME         reduce using rule 17 (expression -> expression MODULO expression .)
    PRINT           reduce using rule 17 (expression -> expression MODULO expression .)
    LCURL           reduce using rule 17 (expression -> expression MODULO expression .)
    IF              reduce using rule 17 (expression -> expression MODULO expression .)
    WHILE           reduce using rule 17 (expression -> expression MODULO expression .)
    NOT             reduce using rule 17 (expression -> expression MODULO expression .)
    LPAREN          reduce using rule 17 (expression -> expression MODULO expression .)
    NUMBER          reduce using rule 17 (expression -> expression MODULO expression .)
    STRING          reduce using rule 17 (expression -> expression MODULO expression .)
    LBRACK          reduce using rule 17 (expression -> expression MODULO expression .)
    $end            reduce using rule 17 (expression -> expression MODULO expression .)
    RCURL           reduce using rule 17 (expression -> expression MODULO expression .)
    RBRACK          reduce using rule 17 (expression -> expression MODULO expression .)
    COMMA           reduce using rule 17 (expression -> expression MODULO expression .)
    SEMI            reduce using rule 17 (expression -> expression MODULO expression .)
    MULT            shift and go to state 28
    DIVIDE          shift and go to state 36

  ! MULT            [ reduce using rule 17 (expression -> expression MODULO expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression MODULO expression .) ]
  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 26 ]
  ! MODULO          [ shift and go to state 32 ]
  ! EXP             [ shift and go to state 25 ]
  ! FLDIV           [ shift and go to state 39 ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 38 ]
  ! LESST           [ shift and go to state 35 ]
  ! GREATERT        [ shift and go to state 27 ]
  ! LESSEQ          [ shift and go to state 33 ]
  ! GREATEREQ       [ shift and go to state 31 ]
  ! EQUALTO         [ shift and go to state 37 ]
  ! NOTEQ           [ shift and go to state 30 ]
  ! IN              [ shift and go to state 34 ]


state 64

    (25) expression -> expression LESSEQ expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULT expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . MODULO expression
    (18) expression -> expression . EXP expression
    (19) expression -> expression . FLDIV expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (23) expression -> expression . LESST expression
    (24) expression -> expression . GREATERT expression
    (25) expression -> expression . LESSEQ expression
    (26) expression -> expression . GREATEREQ expression
    (27) expression -> expression . EQUALTO expression
    (28) expression -> expression . NOTEQ expression
    (40) expression -> expression . IN list

    AND             reduce using rule 25 (expression -> expression LESSEQ expression .)
    OR              reduce using rule 25 (expression -> expression LESSEQ expression .)
    LESST           reduce using rule 25 (expression -> expression LESSEQ expression .)
    GREATERT        reduce using rule 25 (expression -> expression LESSEQ expression .)
    LESSEQ          reduce using rule 25 (expression -> expression LESSEQ expression .)
    GREATEREQ       reduce using rule 25 (expression -> expression LESSEQ expression .)
    EQUALTO         reduce using rule 25 (expression -> expression LESSEQ expression .)
    NOTEQ           reduce using rule 25 (expression -> expression LESSEQ expression .)
    RPAREN          reduce using rule 25 (expression -> expression LESSEQ expression .)
    VARNAME         reduce using rule 25 (expression -> expression LESSEQ expression .)
    PRINT           reduce using rule 25 (expression -> expression LESSEQ expression .)
    LCURL           reduce using rule 25 (expression -> expression LESSEQ expression .)
    IF              reduce using rule 25 (expression -> expression LESSEQ expression .)
    WHILE           reduce using rule 25 (expression -> expression LESSEQ expression .)
    NOT             reduce using rule 25 (expression -> expression LESSEQ expression .)
    LPAREN          reduce using rule 25 (expression -> expression LESSEQ expression .)
    NUMBER          reduce using rule 25 (expression -> expression LESSEQ expression .)
    STRING          reduce using rule 25 (expression -> expression LESSEQ expression .)
    LBRACK          reduce using rule 25 (expression -> expression LESSEQ expression .)
    $end            reduce using rule 25 (expression -> expression LESSEQ expression .)
    RCURL           reduce using rule 25 (expression -> expression LESSEQ expression .)
    RBRACK          reduce using rule 25 (expression -> expression LESSEQ expression .)
    COMMA           reduce using rule 25 (expression -> expression LESSEQ expression .)
    SEMI            reduce using rule 25 (expression -> expression LESSEQ expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    MULT            shift and go to state 28
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 32
    EXP             shift and go to state 25
    FLDIV           shift and go to state 39
    IN              shift and go to state 34

  ! PLUS            [ reduce using rule 25 (expression -> expression LESSEQ expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> expression LESSEQ expression .) ]
  ! MULT            [ reduce using rule 25 (expression -> expression LESSEQ expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression LESSEQ expression .) ]
  ! MODULO          [ reduce using rule 25 (expression -> expression LESSEQ expression .) ]
  ! EXP             [ reduce using rule 25 (expression -> expression LESSEQ expression .) ]
  ! FLDIV           [ reduce using rule 25 (expression -> expression LESSEQ expression .) ]
  ! IN              [ reduce using rule 25 (expression -> expression LESSEQ expression .) ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 38 ]
  ! LESST           [ shift and go to state 35 ]
  ! GREATERT        [ shift and go to state 27 ]
  ! LESSEQ          [ shift and go to state 33 ]
  ! GREATEREQ       [ shift and go to state 31 ]
  ! EQUALTO         [ shift and go to state 37 ]
  ! NOTEQ           [ shift and go to state 30 ]


state 65

    (40) expression -> expression IN list .

    PLUS            reduce using rule 40 (expression -> expression IN list .)
    MINUS           reduce using rule 40 (expression -> expression IN list .)
    MULT            reduce using rule 40 (expression -> expression IN list .)
    DIVIDE          reduce using rule 40 (expression -> expression IN list .)
    MODULO          reduce using rule 40 (expression -> expression IN list .)
    EXP             reduce using rule 40 (expression -> expression IN list .)
    FLDIV           reduce using rule 40 (expression -> expression IN list .)
    AND             reduce using rule 40 (expression -> expression IN list .)
    OR              reduce using rule 40 (expression -> expression IN list .)
    LESST           reduce using rule 40 (expression -> expression IN list .)
    GREATERT        reduce using rule 40 (expression -> expression IN list .)
    LESSEQ          reduce using rule 40 (expression -> expression IN list .)
    GREATEREQ       reduce using rule 40 (expression -> expression IN list .)
    EQUALTO         reduce using rule 40 (expression -> expression IN list .)
    NOTEQ           reduce using rule 40 (expression -> expression IN list .)
    IN              reduce using rule 40 (expression -> expression IN list .)
    RPAREN          reduce using rule 40 (expression -> expression IN list .)
    VARNAME         reduce using rule 40 (expression -> expression IN list .)
    PRINT           reduce using rule 40 (expression -> expression IN list .)
    LCURL           reduce using rule 40 (expression -> expression IN list .)
    IF              reduce using rule 40 (expression -> expression IN list .)
    WHILE           reduce using rule 40 (expression -> expression IN list .)
    NOT             reduce using rule 40 (expression -> expression IN list .)
    LPAREN          reduce using rule 40 (expression -> expression IN list .)
    NUMBER          reduce using rule 40 (expression -> expression IN list .)
    STRING          reduce using rule 40 (expression -> expression IN list .)
    LBRACK          reduce using rule 40 (expression -> expression IN list .)
    $end            reduce using rule 40 (expression -> expression IN list .)
    RCURL           reduce using rule 40 (expression -> expression IN list .)
    RBRACK          reduce using rule 40 (expression -> expression IN list .)
    COMMA           reduce using rule 40 (expression -> expression IN list .)
    SEMI            reduce using rule 40 (expression -> expression IN list .)


state 66

    (23) expression -> expression LESST expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULT expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . MODULO expression
    (18) expression -> expression . EXP expression
    (19) expression -> expression . FLDIV expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (23) expression -> expression . LESST expression
    (24) expression -> expression . GREATERT expression
    (25) expression -> expression . LESSEQ expression
    (26) expression -> expression . GREATEREQ expression
    (27) expression -> expression . EQUALTO expression
    (28) expression -> expression . NOTEQ expression
    (40) expression -> expression . IN list

    AND             reduce using rule 23 (expression -> expression LESST expression .)
    OR              reduce using rule 23 (expression -> expression LESST expression .)
    LESST           reduce using rule 23 (expression -> expression LESST expression .)
    GREATERT        reduce using rule 23 (expression -> expression LESST expression .)
    LESSEQ          reduce using rule 23 (expression -> expression LESST expression .)
    GREATEREQ       reduce using rule 23 (expression -> expression LESST expression .)
    EQUALTO         reduce using rule 23 (expression -> expression LESST expression .)
    NOTEQ           reduce using rule 23 (expression -> expression LESST expression .)
    RPAREN          reduce using rule 23 (expression -> expression LESST expression .)
    VARNAME         reduce using rule 23 (expression -> expression LESST expression .)
    PRINT           reduce using rule 23 (expression -> expression LESST expression .)
    LCURL           reduce using rule 23 (expression -> expression LESST expression .)
    IF              reduce using rule 23 (expression -> expression LESST expression .)
    WHILE           reduce using rule 23 (expression -> expression LESST expression .)
    NOT             reduce using rule 23 (expression -> expression LESST expression .)
    LPAREN          reduce using rule 23 (expression -> expression LESST expression .)
    NUMBER          reduce using rule 23 (expression -> expression LESST expression .)
    STRING          reduce using rule 23 (expression -> expression LESST expression .)
    LBRACK          reduce using rule 23 (expression -> expression LESST expression .)
    $end            reduce using rule 23 (expression -> expression LESST expression .)
    RCURL           reduce using rule 23 (expression -> expression LESST expression .)
    RBRACK          reduce using rule 23 (expression -> expression LESST expression .)
    COMMA           reduce using rule 23 (expression -> expression LESST expression .)
    SEMI            reduce using rule 23 (expression -> expression LESST expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    MULT            shift and go to state 28
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 32
    EXP             shift and go to state 25
    FLDIV           shift and go to state 39
    IN              shift and go to state 34

  ! PLUS            [ reduce using rule 23 (expression -> expression LESST expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> expression LESST expression .) ]
  ! MULT            [ reduce using rule 23 (expression -> expression LESST expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression LESST expression .) ]
  ! MODULO          [ reduce using rule 23 (expression -> expression LESST expression .) ]
  ! EXP             [ reduce using rule 23 (expression -> expression LESST expression .) ]
  ! FLDIV           [ reduce using rule 23 (expression -> expression LESST expression .) ]
  ! IN              [ reduce using rule 23 (expression -> expression LESST expression .) ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 38 ]
  ! LESST           [ shift and go to state 35 ]
  ! GREATERT        [ shift and go to state 27 ]
  ! LESSEQ          [ shift and go to state 33 ]
  ! GREATEREQ       [ shift and go to state 31 ]
  ! EQUALTO         [ shift and go to state 37 ]
  ! NOTEQ           [ shift and go to state 30 ]


state 67

    (16) expression -> expression DIVIDE expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULT expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . MODULO expression
    (18) expression -> expression . EXP expression
    (19) expression -> expression . FLDIV expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (23) expression -> expression . LESST expression
    (24) expression -> expression . GREATERT expression
    (25) expression -> expression . LESSEQ expression
    (26) expression -> expression . GREATEREQ expression
    (27) expression -> expression . EQUALTO expression
    (28) expression -> expression . NOTEQ expression
    (40) expression -> expression . IN list

    PLUS            reduce using rule 16 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 16 (expression -> expression DIVIDE expression .)
    MULT            reduce using rule 16 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 16 (expression -> expression DIVIDE expression .)
    MODULO          reduce using rule 16 (expression -> expression DIVIDE expression .)
    EXP             reduce using rule 16 (expression -> expression DIVIDE expression .)
    FLDIV           reduce using rule 16 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 16 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 16 (expression -> expression DIVIDE expression .)
    LESST           reduce using rule 16 (expression -> expression DIVIDE expression .)
    GREATERT        reduce using rule 16 (expression -> expression DIVIDE expression .)
    LESSEQ          reduce using rule 16 (expression -> expression DIVIDE expression .)
    GREATEREQ       reduce using rule 16 (expression -> expression DIVIDE expression .)
    EQUALTO         reduce using rule 16 (expression -> expression DIVIDE expression .)
    NOTEQ           reduce using rule 16 (expression -> expression DIVIDE expression .)
    IN              reduce using rule 16 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 16 (expression -> expression DIVIDE expression .)
    VARNAME         reduce using rule 16 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 16 (expression -> expression DIVIDE expression .)
    LCURL           reduce using rule 16 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 16 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 16 (expression -> expression DIVIDE expression .)
    NOT             reduce using rule 16 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 16 (expression -> expression DIVIDE expression .)
    NUMBER          reduce using rule 16 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 16 (expression -> expression DIVIDE expression .)
    LBRACK          reduce using rule 16 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 16 (expression -> expression DIVIDE expression .)
    RCURL           reduce using rule 16 (expression -> expression DIVIDE expression .)
    RBRACK          reduce using rule 16 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 16 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 16 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 26 ]
  ! MULT            [ shift and go to state 28 ]
  ! DIVIDE          [ shift and go to state 36 ]
  ! MODULO          [ shift and go to state 32 ]
  ! EXP             [ shift and go to state 25 ]
  ! FLDIV           [ shift and go to state 39 ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 38 ]
  ! LESST           [ shift and go to state 35 ]
  ! GREATERT        [ shift and go to state 27 ]
  ! LESSEQ          [ shift and go to state 33 ]
  ! GREATEREQ       [ shift and go to state 31 ]
  ! EQUALTO         [ shift and go to state 37 ]
  ! NOTEQ           [ shift and go to state 30 ]
  ! IN              [ shift and go to state 34 ]


state 68

    (27) expression -> expression EQUALTO expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULT expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . MODULO expression
    (18) expression -> expression . EXP expression
    (19) expression -> expression . FLDIV expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (23) expression -> expression . LESST expression
    (24) expression -> expression . GREATERT expression
    (25) expression -> expression . LESSEQ expression
    (26) expression -> expression . GREATEREQ expression
    (27) expression -> expression . EQUALTO expression
    (28) expression -> expression . NOTEQ expression
    (40) expression -> expression . IN list

    AND             reduce using rule 27 (expression -> expression EQUALTO expression .)
    OR              reduce using rule 27 (expression -> expression EQUALTO expression .)
    LESST           reduce using rule 27 (expression -> expression EQUALTO expression .)
    GREATERT        reduce using rule 27 (expression -> expression EQUALTO expression .)
    LESSEQ          reduce using rule 27 (expression -> expression EQUALTO expression .)
    GREATEREQ       reduce using rule 27 (expression -> expression EQUALTO expression .)
    EQUALTO         reduce using rule 27 (expression -> expression EQUALTO expression .)
    NOTEQ           reduce using rule 27 (expression -> expression EQUALTO expression .)
    RPAREN          reduce using rule 27 (expression -> expression EQUALTO expression .)
    VARNAME         reduce using rule 27 (expression -> expression EQUALTO expression .)
    PRINT           reduce using rule 27 (expression -> expression EQUALTO expression .)
    LCURL           reduce using rule 27 (expression -> expression EQUALTO expression .)
    IF              reduce using rule 27 (expression -> expression EQUALTO expression .)
    WHILE           reduce using rule 27 (expression -> expression EQUALTO expression .)
    NOT             reduce using rule 27 (expression -> expression EQUALTO expression .)
    LPAREN          reduce using rule 27 (expression -> expression EQUALTO expression .)
    NUMBER          reduce using rule 27 (expression -> expression EQUALTO expression .)
    STRING          reduce using rule 27 (expression -> expression EQUALTO expression .)
    LBRACK          reduce using rule 27 (expression -> expression EQUALTO expression .)
    $end            reduce using rule 27 (expression -> expression EQUALTO expression .)
    RCURL           reduce using rule 27 (expression -> expression EQUALTO expression .)
    RBRACK          reduce using rule 27 (expression -> expression EQUALTO expression .)
    COMMA           reduce using rule 27 (expression -> expression EQUALTO expression .)
    SEMI            reduce using rule 27 (expression -> expression EQUALTO expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    MULT            shift and go to state 28
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 32
    EXP             shift and go to state 25
    FLDIV           shift and go to state 39
    IN              shift and go to state 34

  ! PLUS            [ reduce using rule 27 (expression -> expression EQUALTO expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression EQUALTO expression .) ]
  ! MULT            [ reduce using rule 27 (expression -> expression EQUALTO expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression EQUALTO expression .) ]
  ! MODULO          [ reduce using rule 27 (expression -> expression EQUALTO expression .) ]
  ! EXP             [ reduce using rule 27 (expression -> expression EQUALTO expression .) ]
  ! FLDIV           [ reduce using rule 27 (expression -> expression EQUALTO expression .) ]
  ! IN              [ reduce using rule 27 (expression -> expression EQUALTO expression .) ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 38 ]
  ! LESST           [ shift and go to state 35 ]
  ! GREATERT        [ shift and go to state 27 ]
  ! LESSEQ          [ shift and go to state 33 ]
  ! GREATEREQ       [ shift and go to state 31 ]
  ! EQUALTO         [ shift and go to state 37 ]
  ! NOTEQ           [ shift and go to state 30 ]


state 69

    (21) expression -> expression OR expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULT expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . MODULO expression
    (18) expression -> expression . EXP expression
    (19) expression -> expression . FLDIV expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (23) expression -> expression . LESST expression
    (24) expression -> expression . GREATERT expression
    (25) expression -> expression . LESSEQ expression
    (26) expression -> expression . GREATEREQ expression
    (27) expression -> expression . EQUALTO expression
    (28) expression -> expression . NOTEQ expression
    (40) expression -> expression . IN list

    OR              reduce using rule 21 (expression -> expression OR expression .)
    RPAREN          reduce using rule 21 (expression -> expression OR expression .)
    VARNAME         reduce using rule 21 (expression -> expression OR expression .)
    PRINT           reduce using rule 21 (expression -> expression OR expression .)
    LCURL           reduce using rule 21 (expression -> expression OR expression .)
    IF              reduce using rule 21 (expression -> expression OR expression .)
    WHILE           reduce using rule 21 (expression -> expression OR expression .)
    NOT             reduce using rule 21 (expression -> expression OR expression .)
    LPAREN          reduce using rule 21 (expression -> expression OR expression .)
    NUMBER          reduce using rule 21 (expression -> expression OR expression .)
    STRING          reduce using rule 21 (expression -> expression OR expression .)
    LBRACK          reduce using rule 21 (expression -> expression OR expression .)
    $end            reduce using rule 21 (expression -> expression OR expression .)
    RCURL           reduce using rule 21 (expression -> expression OR expression .)
    RBRACK          reduce using rule 21 (expression -> expression OR expression .)
    COMMA           reduce using rule 21 (expression -> expression OR expression .)
    SEMI            reduce using rule 21 (expression -> expression OR expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    MULT            shift and go to state 28
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 32
    EXP             shift and go to state 25
    FLDIV           shift and go to state 39
    AND             shift and go to state 29
    LESST           shift and go to state 35
    GREATERT        shift and go to state 27
    LESSEQ          shift and go to state 33
    GREATEREQ       shift and go to state 31
    EQUALTO         shift and go to state 37
    NOTEQ           shift and go to state 30
    IN              shift and go to state 34

  ! PLUS            [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! MULT            [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! MODULO          [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! EXP             [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! FLDIV           [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! LESST           [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! GREATERT        [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! LESSEQ          [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! GREATEREQ       [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! EQUALTO         [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! NOTEQ           [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! IN              [ reduce using rule 21 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 38 ]


state 70

    (19) expression -> expression FLDIV expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULT expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . MODULO expression
    (18) expression -> expression . EXP expression
    (19) expression -> expression . FLDIV expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (23) expression -> expression . LESST expression
    (24) expression -> expression . GREATERT expression
    (25) expression -> expression . LESSEQ expression
    (26) expression -> expression . GREATEREQ expression
    (27) expression -> expression . EQUALTO expression
    (28) expression -> expression . NOTEQ expression
    (40) expression -> expression . IN list

    PLUS            reduce using rule 19 (expression -> expression FLDIV expression .)
    MINUS           reduce using rule 19 (expression -> expression FLDIV expression .)
    FLDIV           reduce using rule 19 (expression -> expression FLDIV expression .)
    AND             reduce using rule 19 (expression -> expression FLDIV expression .)
    OR              reduce using rule 19 (expression -> expression FLDIV expression .)
    LESST           reduce using rule 19 (expression -> expression FLDIV expression .)
    GREATERT        reduce using rule 19 (expression -> expression FLDIV expression .)
    LESSEQ          reduce using rule 19 (expression -> expression FLDIV expression .)
    GREATEREQ       reduce using rule 19 (expression -> expression FLDIV expression .)
    EQUALTO         reduce using rule 19 (expression -> expression FLDIV expression .)
    NOTEQ           reduce using rule 19 (expression -> expression FLDIV expression .)
    IN              reduce using rule 19 (expression -> expression FLDIV expression .)
    RPAREN          reduce using rule 19 (expression -> expression FLDIV expression .)
    VARNAME         reduce using rule 19 (expression -> expression FLDIV expression .)
    PRINT           reduce using rule 19 (expression -> expression FLDIV expression .)
    LCURL           reduce using rule 19 (expression -> expression FLDIV expression .)
    IF              reduce using rule 19 (expression -> expression FLDIV expression .)
    WHILE           reduce using rule 19 (expression -> expression FLDIV expression .)
    NOT             reduce using rule 19 (expression -> expression FLDIV expression .)
    LPAREN          reduce using rule 19 (expression -> expression FLDIV expression .)
    NUMBER          reduce using rule 19 (expression -> expression FLDIV expression .)
    STRING          reduce using rule 19 (expression -> expression FLDIV expression .)
    LBRACK          reduce using rule 19 (expression -> expression FLDIV expression .)
    $end            reduce using rule 19 (expression -> expression FLDIV expression .)
    RCURL           reduce using rule 19 (expression -> expression FLDIV expression .)
    RBRACK          reduce using rule 19 (expression -> expression FLDIV expression .)
    COMMA           reduce using rule 19 (expression -> expression FLDIV expression .)
    SEMI            reduce using rule 19 (expression -> expression FLDIV expression .)
    MULT            shift and go to state 28
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 32
    EXP             shift and go to state 25

  ! MULT            [ reduce using rule 19 (expression -> expression FLDIV expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression FLDIV expression .) ]
  ! MODULO          [ reduce using rule 19 (expression -> expression FLDIV expression .) ]
  ! EXP             [ reduce using rule 19 (expression -> expression FLDIV expression .) ]
  ! PLUS            [ shift and go to state 24 ]
  ! MINUS           [ shift and go to state 26 ]
  ! FLDIV           [ shift and go to state 39 ]
  ! AND             [ shift and go to state 29 ]
  ! OR              [ shift and go to state 38 ]
  ! LESST           [ shift and go to state 35 ]
  ! GREATERT        [ shift and go to state 27 ]
  ! LESSEQ          [ shift and go to state 33 ]
  ! GREATEREQ       [ shift and go to state 31 ]
  ! EQUALTO         [ shift and go to state 37 ]
  ! NOTEQ           [ shift and go to state 30 ]
  ! IN              [ shift and go to state 34 ]


state 71

    (7) statement -> IF LPAREN statements . RPAREN LCURL statements RCURL else
    (2) statements -> statements . statement
    (3) statement -> . VARNAME EQUALS expression SEMI
    (4) statement -> . PRINT LPAREN statement RPAREN SEMI
    (5) statement -> . expression
    (6) statement -> . LCURL statements RCURL
    (7) statement -> . IF LPAREN statements RPAREN LCURL statements RCURL else
    (10) statement -> . WHILE LPAREN statements RPAREN LCURL statements RCURL
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    RPAREN          shift and go to state 79
    VARNAME         shift and go to state 3
    PRINT           shift and go to state 2
    LCURL           shift and go to state 4
    IF              shift and go to state 8
    WHILE           shift and go to state 14
    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 7
    string_expression              shift and go to state 5
    list                           shift and go to state 13
    statement                      shift and go to state 41

state 72

    (34) list -> LBRACK list_item RBRACK .

    LBRACK          reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    RBRACK          reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    PLUS            reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    MINUS           reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    MULT            reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    DIVIDE          reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    MODULO          reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    EXP             reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    FLDIV           reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    AND             reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    OR              reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    LESST           reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    GREATERT        reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    LESSEQ          reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    GREATEREQ       reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    EQUALTO         reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    NOTEQ           reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    IN              reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    RCURL           reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    VARNAME         reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    PRINT           reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    LCURL           reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    IF              reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    WHILE           reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    NOT             reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    LPAREN          reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    NUMBER          reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    STRING          reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    $end            reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    RPAREN          reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    COMMA           reduce using rule 34 (list -> LBRACK list_item RBRACK .)
    SEMI            reduce using rule 34 (list -> LBRACK list_item RBRACK .)


state 73

    (36) list_item -> list_item COMMA . list_item
    (36) list_item -> . list_item COMMA list_item
    (37) list_item -> . expression
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    VARNAME         shift and go to state 22
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 42
    string_expression              shift and go to state 5
    list_item                      shift and go to state 80
    list                           shift and go to state 13

state 74

    (32) expression -> list LBRACK expression . RBRACK
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . MULT expression
    (16) expression -> expression . DIVIDE expression
    (17) expression -> expression . MODULO expression
    (18) expression -> expression . EXP expression
    (19) expression -> expression . FLDIV expression
    (20) expression -> expression . AND expression
    (21) expression -> expression . OR expression
    (23) expression -> expression . LESST expression
    (24) expression -> expression . GREATERT expression
    (25) expression -> expression . LESSEQ expression
    (26) expression -> expression . GREATEREQ expression
    (27) expression -> expression . EQUALTO expression
    (28) expression -> expression . NOTEQ expression
    (40) expression -> expression . IN list

    RBRACK          shift and go to state 81
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26
    MULT            shift and go to state 28
    DIVIDE          shift and go to state 36
    MODULO          shift and go to state 32
    EXP             shift and go to state 25
    FLDIV           shift and go to state 39
    AND             shift and go to state 29
    OR              shift and go to state 38
    LESST           shift and go to state 35
    GREATERT        shift and go to state 27
    LESSEQ          shift and go to state 33
    GREATEREQ       shift and go to state 31
    EQUALTO         shift and go to state 37
    NOTEQ           shift and go to state 30
    IN              shift and go to state 34


state 75

    (10) statement -> WHILE LPAREN statements . RPAREN LCURL statements RCURL
    (2) statements -> statements . statement
    (3) statement -> . VARNAME EQUALS expression SEMI
    (4) statement -> . PRINT LPAREN statement RPAREN SEMI
    (5) statement -> . expression
    (6) statement -> . LCURL statements RCURL
    (7) statement -> . IF LPAREN statements RPAREN LCURL statements RCURL else
    (10) statement -> . WHILE LPAREN statements RPAREN LCURL statements RCURL
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    RPAREN          shift and go to state 82
    VARNAME         shift and go to state 3
    PRINT           shift and go to state 2
    LCURL           shift and go to state 4
    IF              shift and go to state 8
    WHILE           shift and go to state 14
    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 7
    string_expression              shift and go to state 5
    list                           shift and go to state 13
    statement                      shift and go to state 41

state 76

    (4) statement -> PRINT LPAREN statement RPAREN . SEMI

    SEMI            shift and go to state 83


state 77

    (3) statement -> VARNAME EQUALS expression SEMI .

    RCURL           reduce using rule 3 (statement -> VARNAME EQUALS expression SEMI .)
    VARNAME         reduce using rule 3 (statement -> VARNAME EQUALS expression SEMI .)
    PRINT           reduce using rule 3 (statement -> VARNAME EQUALS expression SEMI .)
    LCURL           reduce using rule 3 (statement -> VARNAME EQUALS expression SEMI .)
    IF              reduce using rule 3 (statement -> VARNAME EQUALS expression SEMI .)
    WHILE           reduce using rule 3 (statement -> VARNAME EQUALS expression SEMI .)
    NOT             reduce using rule 3 (statement -> VARNAME EQUALS expression SEMI .)
    LPAREN          reduce using rule 3 (statement -> VARNAME EQUALS expression SEMI .)
    NUMBER          reduce using rule 3 (statement -> VARNAME EQUALS expression SEMI .)
    STRING          reduce using rule 3 (statement -> VARNAME EQUALS expression SEMI .)
    LBRACK          reduce using rule 3 (statement -> VARNAME EQUALS expression SEMI .)
    RPAREN          reduce using rule 3 (statement -> VARNAME EQUALS expression SEMI .)
    $end            reduce using rule 3 (statement -> VARNAME EQUALS expression SEMI .)


state 78

    (33) expression -> string_expression LBRACK expression RBRACK .

    PLUS            reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    MINUS           reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    MULT            reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    DIVIDE          reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    MODULO          reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    EXP             reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    FLDIV           reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    AND             reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    OR              reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    LESST           reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    GREATERT        reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    LESSEQ          reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    GREATEREQ       reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    EQUALTO         reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    NOTEQ           reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    IN              reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    RPAREN          reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    VARNAME         reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    PRINT           reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    LCURL           reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    IF              reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    WHILE           reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    NOT             reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    LPAREN          reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    NUMBER          reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    STRING          reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    LBRACK          reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    $end            reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    RCURL           reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    RBRACK          reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    COMMA           reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)
    SEMI            reduce using rule 33 (expression -> string_expression LBRACK expression RBRACK .)


state 79

    (7) statement -> IF LPAREN statements RPAREN . LCURL statements RCURL else

    LCURL           shift and go to state 84


state 80

    (36) list_item -> list_item COMMA list_item .
    (36) list_item -> list_item . COMMA list_item

  ! shift/reduce conflict for COMMA resolved as shift
    RBRACK          reduce using rule 36 (list_item -> list_item COMMA list_item .)
    COMMA           shift and go to state 73

  ! COMMA           [ reduce using rule 36 (list_item -> list_item COMMA list_item .) ]


state 81

    (32) expression -> list LBRACK expression RBRACK .

    PLUS            reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    MINUS           reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    MULT            reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    DIVIDE          reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    MODULO          reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    EXP             reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    FLDIV           reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    AND             reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    OR              reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    LESST           reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    GREATERT        reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    LESSEQ          reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    GREATEREQ       reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    EQUALTO         reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    NOTEQ           reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    IN              reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    RPAREN          reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    VARNAME         reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    PRINT           reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    LCURL           reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    IF              reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    WHILE           reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    NOT             reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    LPAREN          reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    NUMBER          reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    STRING          reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    LBRACK          reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    $end            reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    RCURL           reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    RBRACK          reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    COMMA           reduce using rule 32 (expression -> list LBRACK expression RBRACK .)
    SEMI            reduce using rule 32 (expression -> list LBRACK expression RBRACK .)


state 82

    (10) statement -> WHILE LPAREN statements RPAREN . LCURL statements RCURL

    LCURL           shift and go to state 85


state 83

    (4) statement -> PRINT LPAREN statement RPAREN SEMI .

    RCURL           reduce using rule 4 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    VARNAME         reduce using rule 4 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    PRINT           reduce using rule 4 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    LCURL           reduce using rule 4 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    IF              reduce using rule 4 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    WHILE           reduce using rule 4 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    NOT             reduce using rule 4 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    LPAREN          reduce using rule 4 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    NUMBER          reduce using rule 4 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    STRING          reduce using rule 4 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    LBRACK          reduce using rule 4 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    RPAREN          reduce using rule 4 (statement -> PRINT LPAREN statement RPAREN SEMI .)
    $end            reduce using rule 4 (statement -> PRINT LPAREN statement RPAREN SEMI .)


state 84

    (7) statement -> IF LPAREN statements RPAREN LCURL . statements RCURL else
    (1) statements -> . statement
    (2) statements -> . statements statement
    (3) statement -> . VARNAME EQUALS expression SEMI
    (4) statement -> . PRINT LPAREN statement RPAREN SEMI
    (5) statement -> . expression
    (6) statement -> . LCURL statements RCURL
    (7) statement -> . IF LPAREN statements RPAREN LCURL statements RCURL else
    (10) statement -> . WHILE LPAREN statements RPAREN LCURL statements RCURL
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    VARNAME         shift and go to state 3
    PRINT           shift and go to state 2
    LCURL           shift and go to state 4
    IF              shift and go to state 8
    WHILE           shift and go to state 14
    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 7
    string_expression              shift and go to state 5
    list                           shift and go to state 13
    statements                     shift and go to state 86
    statement                      shift and go to state 10

state 85

    (10) statement -> WHILE LPAREN statements RPAREN LCURL . statements RCURL
    (1) statements -> . statement
    (2) statements -> . statements statement
    (3) statement -> . VARNAME EQUALS expression SEMI
    (4) statement -> . PRINT LPAREN statement RPAREN SEMI
    (5) statement -> . expression
    (6) statement -> . LCURL statements RCURL
    (7) statement -> . IF LPAREN statements RPAREN LCURL statements RCURL else
    (10) statement -> . WHILE LPAREN statements RPAREN LCURL statements RCURL
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    VARNAME         shift and go to state 3
    PRINT           shift and go to state 2
    LCURL           shift and go to state 4
    IF              shift and go to state 8
    WHILE           shift and go to state 14
    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 7
    string_expression              shift and go to state 5
    list                           shift and go to state 13
    statements                     shift and go to state 87
    statement                      shift and go to state 10

state 86

    (7) statement -> IF LPAREN statements RPAREN LCURL statements . RCURL else
    (2) statements -> statements . statement
    (3) statement -> . VARNAME EQUALS expression SEMI
    (4) statement -> . PRINT LPAREN statement RPAREN SEMI
    (5) statement -> . expression
    (6) statement -> . LCURL statements RCURL
    (7) statement -> . IF LPAREN statements RPAREN LCURL statements RCURL else
    (10) statement -> . WHILE LPAREN statements RPAREN LCURL statements RCURL
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    RCURL           shift and go to state 88
    VARNAME         shift and go to state 3
    PRINT           shift and go to state 2
    LCURL           shift and go to state 4
    IF              shift and go to state 8
    WHILE           shift and go to state 14
    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 7
    string_expression              shift and go to state 5
    list                           shift and go to state 13
    statement                      shift and go to state 41

state 87

    (10) statement -> WHILE LPAREN statements RPAREN LCURL statements . RCURL
    (2) statements -> statements . statement
    (3) statement -> . VARNAME EQUALS expression SEMI
    (4) statement -> . PRINT LPAREN statement RPAREN SEMI
    (5) statement -> . expression
    (6) statement -> . LCURL statements RCURL
    (7) statement -> . IF LPAREN statements RPAREN LCURL statements RCURL else
    (10) statement -> . WHILE LPAREN statements RPAREN LCURL statements RCURL
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    RCURL           shift and go to state 89
    VARNAME         shift and go to state 3
    PRINT           shift and go to state 2
    LCURL           shift and go to state 4
    IF              shift and go to state 8
    WHILE           shift and go to state 14
    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 7
    string_expression              shift and go to state 5
    list                           shift and go to state 13
    statement                      shift and go to state 41

state 88

    (7) statement -> IF LPAREN statements RPAREN LCURL statements RCURL . else
    (8) else -> . ELSE LCURL statements RCURL
    (9) else -> . empty
    (42) empty -> .

    ELSE            shift and go to state 91
    VARNAME         reduce using rule 42 (empty -> .)
    PRINT           reduce using rule 42 (empty -> .)
    LCURL           reduce using rule 42 (empty -> .)
    IF              reduce using rule 42 (empty -> .)
    WHILE           reduce using rule 42 (empty -> .)
    NOT             reduce using rule 42 (empty -> .)
    LPAREN          reduce using rule 42 (empty -> .)
    NUMBER          reduce using rule 42 (empty -> .)
    STRING          reduce using rule 42 (empty -> .)
    LBRACK          reduce using rule 42 (empty -> .)
    $end            reduce using rule 42 (empty -> .)
    RCURL           reduce using rule 42 (empty -> .)
    RPAREN          reduce using rule 42 (empty -> .)

    else                           shift and go to state 92
    empty                          shift and go to state 90

state 89

    (10) statement -> WHILE LPAREN statements RPAREN LCURL statements RCURL .

    RCURL           reduce using rule 10 (statement -> WHILE LPAREN statements RPAREN LCURL statements RCURL .)
    VARNAME         reduce using rule 10 (statement -> WHILE LPAREN statements RPAREN LCURL statements RCURL .)
    PRINT           reduce using rule 10 (statement -> WHILE LPAREN statements RPAREN LCURL statements RCURL .)
    LCURL           reduce using rule 10 (statement -> WHILE LPAREN statements RPAREN LCURL statements RCURL .)
    IF              reduce using rule 10 (statement -> WHILE LPAREN statements RPAREN LCURL statements RCURL .)
    WHILE           reduce using rule 10 (statement -> WHILE LPAREN statements RPAREN LCURL statements RCURL .)
    NOT             reduce using rule 10 (statement -> WHILE LPAREN statements RPAREN LCURL statements RCURL .)
    LPAREN          reduce using rule 10 (statement -> WHILE LPAREN statements RPAREN LCURL statements RCURL .)
    NUMBER          reduce using rule 10 (statement -> WHILE LPAREN statements RPAREN LCURL statements RCURL .)
    STRING          reduce using rule 10 (statement -> WHILE LPAREN statements RPAREN LCURL statements RCURL .)
    LBRACK          reduce using rule 10 (statement -> WHILE LPAREN statements RPAREN LCURL statements RCURL .)
    RPAREN          reduce using rule 10 (statement -> WHILE LPAREN statements RPAREN LCURL statements RCURL .)
    $end            reduce using rule 10 (statement -> WHILE LPAREN statements RPAREN LCURL statements RCURL .)


state 90

    (9) else -> empty .

    VARNAME         reduce using rule 9 (else -> empty .)
    PRINT           reduce using rule 9 (else -> empty .)
    LCURL           reduce using rule 9 (else -> empty .)
    IF              reduce using rule 9 (else -> empty .)
    WHILE           reduce using rule 9 (else -> empty .)
    NOT             reduce using rule 9 (else -> empty .)
    LPAREN          reduce using rule 9 (else -> empty .)
    NUMBER          reduce using rule 9 (else -> empty .)
    STRING          reduce using rule 9 (else -> empty .)
    LBRACK          reduce using rule 9 (else -> empty .)
    $end            reduce using rule 9 (else -> empty .)
    RCURL           reduce using rule 9 (else -> empty .)
    RPAREN          reduce using rule 9 (else -> empty .)


state 91

    (8) else -> ELSE . LCURL statements RCURL

    LCURL           shift and go to state 93


state 92

    (7) statement -> IF LPAREN statements RPAREN LCURL statements RCURL else .

    RCURL           reduce using rule 7 (statement -> IF LPAREN statements RPAREN LCURL statements RCURL else .)
    VARNAME         reduce using rule 7 (statement -> IF LPAREN statements RPAREN LCURL statements RCURL else .)
    PRINT           reduce using rule 7 (statement -> IF LPAREN statements RPAREN LCURL statements RCURL else .)
    LCURL           reduce using rule 7 (statement -> IF LPAREN statements RPAREN LCURL statements RCURL else .)
    IF              reduce using rule 7 (statement -> IF LPAREN statements RPAREN LCURL statements RCURL else .)
    WHILE           reduce using rule 7 (statement -> IF LPAREN statements RPAREN LCURL statements RCURL else .)
    NOT             reduce using rule 7 (statement -> IF LPAREN statements RPAREN LCURL statements RCURL else .)
    LPAREN          reduce using rule 7 (statement -> IF LPAREN statements RPAREN LCURL statements RCURL else .)
    NUMBER          reduce using rule 7 (statement -> IF LPAREN statements RPAREN LCURL statements RCURL else .)
    STRING          reduce using rule 7 (statement -> IF LPAREN statements RPAREN LCURL statements RCURL else .)
    LBRACK          reduce using rule 7 (statement -> IF LPAREN statements RPAREN LCURL statements RCURL else .)
    RPAREN          reduce using rule 7 (statement -> IF LPAREN statements RPAREN LCURL statements RCURL else .)
    $end            reduce using rule 7 (statement -> IF LPAREN statements RPAREN LCURL statements RCURL else .)


state 93

    (8) else -> ELSE LCURL . statements RCURL
    (1) statements -> . statement
    (2) statements -> . statements statement
    (3) statement -> . VARNAME EQUALS expression SEMI
    (4) statement -> . PRINT LPAREN statement RPAREN SEMI
    (5) statement -> . expression
    (6) statement -> . LCURL statements RCURL
    (7) statement -> . IF LPAREN statements RPAREN LCURL statements RCURL else
    (10) statement -> . WHILE LPAREN statements RPAREN LCURL statements RCURL
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    VARNAME         shift and go to state 3
    PRINT           shift and go to state 2
    LCURL           shift and go to state 4
    IF              shift and go to state 8
    WHILE           shift and go to state 14
    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 7
    string_expression              shift and go to state 5
    list                           shift and go to state 13
    statements                     shift and go to state 94
    statement                      shift and go to state 10

state 94

    (8) else -> ELSE LCURL statements . RCURL
    (2) statements -> statements . statement
    (3) statement -> . VARNAME EQUALS expression SEMI
    (4) statement -> . PRINT LPAREN statement RPAREN SEMI
    (5) statement -> . expression
    (6) statement -> . LCURL statements RCURL
    (7) statement -> . IF LPAREN statements RPAREN LCURL statements RCURL else
    (10) statement -> . WHILE LPAREN statements RPAREN LCURL statements RCURL
    (11) expression -> . string_expression
    (12) expression -> . list
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression MULT expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . expression MODULO expression
    (18) expression -> . expression EXP expression
    (19) expression -> . expression FLDIV expression
    (20) expression -> . expression AND expression
    (21) expression -> . expression OR expression
    (22) expression -> . NOT expression
    (23) expression -> . expression LESST expression
    (24) expression -> . expression GREATERT expression
    (25) expression -> . expression LESSEQ expression
    (26) expression -> . expression GREATEREQ expression
    (27) expression -> . expression EQUALTO expression
    (28) expression -> . expression NOTEQ expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . VARNAME
    (32) expression -> . list LBRACK expression RBRACK
    (33) expression -> . string_expression LBRACK expression RBRACK
    (40) expression -> . expression IN list
    (41) expression -> . string_expression IN string_expression
    (38) string_expression -> . string_expression PLUS string_expression
    (39) string_expression -> . STRING
    (34) list -> . LBRACK list_item RBRACK
    (35) list -> . LBRACK RBRACK

    RCURL           shift and go to state 95
    VARNAME         shift and go to state 3
    PRINT           shift and go to state 2
    LCURL           shift and go to state 4
    IF              shift and go to state 8
    WHILE           shift and go to state 14
    NOT             shift and go to state 12
    LPAREN          shift and go to state 6
    NUMBER          shift and go to state 15
    STRING          shift and go to state 1
    LBRACK          shift and go to state 11

    expression                     shift and go to state 7
    string_expression              shift and go to state 5
    list                           shift and go to state 13
    statement                      shift and go to state 41

state 95

    (8) else -> ELSE LCURL statements RCURL .

    VARNAME         reduce using rule 8 (else -> ELSE LCURL statements RCURL .)
    PRINT           reduce using rule 8 (else -> ELSE LCURL statements RCURL .)
    LCURL           reduce using rule 8 (else -> ELSE LCURL statements RCURL .)
    IF              reduce using rule 8 (else -> ELSE LCURL statements RCURL .)
    WHILE           reduce using rule 8 (else -> ELSE LCURL statements RCURL .)
    NOT             reduce using rule 8 (else -> ELSE LCURL statements RCURL .)
    LPAREN          reduce using rule 8 (else -> ELSE LCURL statements RCURL .)
    NUMBER          reduce using rule 8 (else -> ELSE LCURL statements RCURL .)
    STRING          reduce using rule 8 (else -> ELSE LCURL statements RCURL .)
    LBRACK          reduce using rule 8 (else -> ELSE LCURL statements RCURL .)
    $end            reduce using rule 8 (else -> ELSE LCURL statements RCURL .)
    RCURL           reduce using rule 8 (else -> ELSE LCURL statements RCURL .)
    RPAREN          reduce using rule 8 (else -> ELSE LCURL statements RCURL .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LBRACK in state 5 resolved as shift
WARNING: shift/reduce conflict for IN in state 5 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 5 resolved as shift
WARNING: shift/reduce conflict for LBRACK in state 13 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 80 resolved as shift
